/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="./semantic-conventions.d.ts" />

function createConstMap(values) {
	let res = {};
	const len = values.length;
	for (let lp = 0; lp < len; lp++) {
		const val = values[lp];
		if (val) {
			res[String(val).toUpperCase().replace(/[-.]/g, '_')] = val;
		}
	}
	return res;
}

const TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';
const TMP_DB_SYSTEM = 'db.system';
const TMP_DB_CONNECTION_STRING = 'db.connection_string';
const TMP_DB_USER = 'db.user';
const TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';
const TMP_DB_NAME = 'db.name';
const TMP_DB_STATEMENT = 'db.statement';
const TMP_DB_OPERATION = 'db.operation';
const TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';
const TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';
const TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';
const TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';
const TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';
const TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';
const TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';
const TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';
const TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';
const TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';
const TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';
const TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';
const TMP_DB_SQL_TABLE = 'db.sql.table';
const TMP_EXCEPTION_TYPE = 'exception.type';
const TMP_EXCEPTION_MESSAGE = 'exception.message';
const TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';
const TMP_EXCEPTION_ESCAPED = 'exception.escaped';
const TMP_FAAS_TRIGGER = 'faas.trigger';
const TMP_FAAS_EXECUTION = 'faas.execution';
const TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';
const TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';
const TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';
const TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';
const TMP_FAAS_TIME = 'faas.time';
const TMP_FAAS_CRON = 'faas.cron';
const TMP_FAAS_COLDSTART = 'faas.coldstart';
const TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';
const TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';
const TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';
const TMP_NET_TRANSPORT = 'net.transport';
const TMP_NET_PEER_IP = 'net.peer.ip';
const TMP_NET_PEER_PORT = 'net.peer.port';
const TMP_NET_PEER_NAME = 'net.peer.name';
const TMP_NET_HOST_IP = 'net.host.ip';
const TMP_NET_HOST_PORT = 'net.host.port';
const TMP_NET_HOST_NAME = 'net.host.name';
const TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';
const TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';
const TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';
const TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';
const TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';
const TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';
const TMP_PEER_SERVICE = 'peer.service';
const TMP_ENDUSER_ID = 'enduser.id';
const TMP_ENDUSER_ROLE = 'enduser.role';
const TMP_ENDUSER_SCOPE = 'enduser.scope';
const TMP_THREAD_ID = 'thread.id';
const TMP_THREAD_NAME = 'thread.name';
const TMP_CODE_FUNCTION = 'code.function';
const TMP_CODE_NAMESPACE = 'code.namespace';
const TMP_CODE_FILEPATH = 'code.filepath';
const TMP_CODE_LINENO = 'code.lineno';
const TMP_HTTP_METHOD = 'http.method';
const TMP_HTTP_URL = 'http.url';
const TMP_HTTP_TARGET = 'http.target';
const TMP_HTTP_HOST = 'http.host';
const TMP_HTTP_SCHEME = 'http.scheme';
const TMP_HTTP_STATUS_CODE = 'http.status_code';
const TMP_HTTP_FLAVOR = 'http.flavor';
const TMP_HTTP_USER_AGENT = 'http.user_agent';
const TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';
const TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';
const TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';
const TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';
const TMP_HTTP_SERVER_NAME = 'http.server_name';
const TMP_HTTP_ROUTE = 'http.route';
const TMP_HTTP_CLIENT_IP = 'http.client_ip';
const TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';
const TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';
const TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';
const TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';
const TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';
const TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';
const TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';
const TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';
const TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';
const TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';
const TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';
const TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';
const TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';
const TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';
const TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';
const TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';
const TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';
const TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';
const TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';
const TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';
const TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';
const TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';
const TMP_MESSAGING_SYSTEM = 'messaging.system';
const TMP_MESSAGING_DESTINATION = 'messaging.destination';
const TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';
const TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';
const TMP_MESSAGING_PROTOCOL = 'messaging.protocol';
const TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';
const TMP_MESSAGING_URL = 'messaging.url';
const TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';
const TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';
const TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = 'messaging.message_payload_size_bytes';
const TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = 'messaging.message_payload_compressed_size_bytes';
const TMP_MESSAGING_OPERATION = 'messaging.operation';
const TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';
const TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';
const TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';
const TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';
const TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';
const TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';
const TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';
const TMP_RPC_SYSTEM = 'rpc.system';
const TMP_RPC_SERVICE = 'rpc.service';
const TMP_RPC_METHOD = 'rpc.method';
const TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';
const TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';
const TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';
const TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';
const TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';
const TMP_MESSAGE_TYPE = 'message.type';
const TMP_MESSAGE_ID = 'message.id';
const TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';
const TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';
const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;
const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;
const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;
const SEMATTRS_DB_USER = TMP_DB_USER;
const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;
const SEMATTRS_DB_NAME = TMP_DB_NAME;
const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;
const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;
const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;
const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;
const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;
const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;
const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;
const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;
const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;
const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = TMP_DB_CASSANDRA_COORDINATOR_ID;
const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = TMP_DB_CASSANDRA_COORDINATOR_DC;
const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;
const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;
const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;
const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;
const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;
const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;
const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;
const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;
const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;
const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;
const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;
const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;
const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;
const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;
const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;
const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;
const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;
const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;
const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;
const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;
const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;
const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;
const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;
const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;
const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;
const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;
const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;
const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;
const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = TMP_NET_HOST_CONNECTION_SUBTYPE;
const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;
const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;
const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;
const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;
const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;
const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;
const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;
const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;
const SEMATTRS_THREAD_ID = TMP_THREAD_ID;
const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;
const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;
const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;
const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;
const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;
const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;
const SEMATTRS_HTTP_URL = TMP_HTTP_URL;
const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;
const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;
const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;
const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;
const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;
const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;
const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = TMP_HTTP_REQUEST_CONTENT_LENGTH;
const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;
const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = TMP_HTTP_RESPONSE_CONTENT_LENGTH;
const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;
const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;
const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;
const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;
const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;
const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;
const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;
const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;
const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;
const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = TMP_AWS_DYNAMODB_CONSISTENT_READ;
const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;
const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;
const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;
const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;
const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;
const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;
const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;
const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;
const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;
const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;
const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;
const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;
const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;
const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = TMP_AWS_DYNAMODB_SCANNED_COUNT;
const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;
const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;
const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;
const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;
const SEMATTRS_MESSAGING_DESTINATION_KIND = TMP_MESSAGING_DESTINATION_KIND;
const SEMATTRS_MESSAGING_TEMP_DESTINATION = TMP_MESSAGING_TEMP_DESTINATION;
const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;
const SEMATTRS_MESSAGING_PROTOCOL_VERSION = TMP_MESSAGING_PROTOCOL_VERSION;
const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;
const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;
const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;
const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;
const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;
const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;
const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;
const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = TMP_MESSAGING_RABBITMQ_ROUTING_KEY;
const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = TMP_MESSAGING_KAFKA_MESSAGE_KEY;
const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = TMP_MESSAGING_KAFKA_CONSUMER_GROUP;
const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;
const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;
const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;
const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;
const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;
const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;
const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;
const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;
const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;
const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;
const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;
const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;
const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;
const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;
const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;
const SemanticAttributes =
 createConstMap([
	TMP_AWS_LAMBDA_INVOKED_ARN,
	TMP_DB_SYSTEM,
	TMP_DB_CONNECTION_STRING,
	TMP_DB_USER,
	TMP_DB_JDBC_DRIVER_CLASSNAME,
	TMP_DB_NAME,
	TMP_DB_STATEMENT,
	TMP_DB_OPERATION,
	TMP_DB_MSSQL_INSTANCE_NAME,
	TMP_DB_CASSANDRA_KEYSPACE,
	TMP_DB_CASSANDRA_PAGE_SIZE,
	TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,
	TMP_DB_CASSANDRA_TABLE,
	TMP_DB_CASSANDRA_IDEMPOTENCE,
	TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,
	TMP_DB_CASSANDRA_COORDINATOR_ID,
	TMP_DB_CASSANDRA_COORDINATOR_DC,
	TMP_DB_HBASE_NAMESPACE,
	TMP_DB_REDIS_DATABASE_INDEX,
	TMP_DB_MONGODB_COLLECTION,
	TMP_DB_SQL_TABLE,
	TMP_EXCEPTION_TYPE,
	TMP_EXCEPTION_MESSAGE,
	TMP_EXCEPTION_STACKTRACE,
	TMP_EXCEPTION_ESCAPED,
	TMP_FAAS_TRIGGER,
	TMP_FAAS_EXECUTION,
	TMP_FAAS_DOCUMENT_COLLECTION,
	TMP_FAAS_DOCUMENT_OPERATION,
	TMP_FAAS_DOCUMENT_TIME,
	TMP_FAAS_DOCUMENT_NAME,
	TMP_FAAS_TIME,
	TMP_FAAS_CRON,
	TMP_FAAS_COLDSTART,
	TMP_FAAS_INVOKED_NAME,
	TMP_FAAS_INVOKED_PROVIDER,
	TMP_FAAS_INVOKED_REGION,
	TMP_NET_TRANSPORT,
	TMP_NET_PEER_IP,
	TMP_NET_PEER_PORT,
	TMP_NET_PEER_NAME,
	TMP_NET_HOST_IP,
	TMP_NET_HOST_PORT,
	TMP_NET_HOST_NAME,
	TMP_NET_HOST_CONNECTION_TYPE,
	TMP_NET_HOST_CONNECTION_SUBTYPE,
	TMP_NET_HOST_CARRIER_NAME,
	TMP_NET_HOST_CARRIER_MCC,
	TMP_NET_HOST_CARRIER_MNC,
	TMP_NET_HOST_CARRIER_ICC,
	TMP_PEER_SERVICE,
	TMP_ENDUSER_ID,
	TMP_ENDUSER_ROLE,
	TMP_ENDUSER_SCOPE,
	TMP_THREAD_ID,
	TMP_THREAD_NAME,
	TMP_CODE_FUNCTION,
	TMP_CODE_NAMESPACE,
	TMP_CODE_FILEPATH,
	TMP_CODE_LINENO,
	TMP_HTTP_METHOD,
	TMP_HTTP_URL,
	TMP_HTTP_TARGET,
	TMP_HTTP_HOST,
	TMP_HTTP_SCHEME,
	TMP_HTTP_STATUS_CODE,
	TMP_HTTP_FLAVOR,
	TMP_HTTP_USER_AGENT,
	TMP_HTTP_REQUEST_CONTENT_LENGTH,
	TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,
	TMP_HTTP_RESPONSE_CONTENT_LENGTH,
	TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,
	TMP_HTTP_SERVER_NAME,
	TMP_HTTP_ROUTE,
	TMP_HTTP_CLIENT_IP,
	TMP_AWS_DYNAMODB_TABLE_NAMES,
	TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,
	TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,
	TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,
	TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,
	TMP_AWS_DYNAMODB_CONSISTENT_READ,
	TMP_AWS_DYNAMODB_PROJECTION,
	TMP_AWS_DYNAMODB_LIMIT,
	TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,
	TMP_AWS_DYNAMODB_INDEX_NAME,
	TMP_AWS_DYNAMODB_SELECT,
	TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,
	TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,
	TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,
	TMP_AWS_DYNAMODB_TABLE_COUNT,
	TMP_AWS_DYNAMODB_SCAN_FORWARD,
	TMP_AWS_DYNAMODB_SEGMENT,
	TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,
	TMP_AWS_DYNAMODB_COUNT,
	TMP_AWS_DYNAMODB_SCANNED_COUNT,
	TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,
	TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,
	TMP_MESSAGING_SYSTEM,
	TMP_MESSAGING_DESTINATION,
	TMP_MESSAGING_DESTINATION_KIND,
	TMP_MESSAGING_TEMP_DESTINATION,
	TMP_MESSAGING_PROTOCOL,
	TMP_MESSAGING_PROTOCOL_VERSION,
	TMP_MESSAGING_URL,
	TMP_MESSAGING_MESSAGE_ID,
	TMP_MESSAGING_CONVERSATION_ID,
	TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,
	TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,
	TMP_MESSAGING_OPERATION,
	TMP_MESSAGING_CONSUMER_ID,
	TMP_MESSAGING_RABBITMQ_ROUTING_KEY,
	TMP_MESSAGING_KAFKA_MESSAGE_KEY,
	TMP_MESSAGING_KAFKA_CONSUMER_GROUP,
	TMP_MESSAGING_KAFKA_CLIENT_ID,
	TMP_MESSAGING_KAFKA_PARTITION,
	TMP_MESSAGING_KAFKA_TOMBSTONE,
	TMP_RPC_SYSTEM,
	TMP_RPC_SERVICE,
	TMP_RPC_METHOD,
	TMP_RPC_GRPC_STATUS_CODE,
	TMP_RPC_JSONRPC_VERSION,
	TMP_RPC_JSONRPC_REQUEST_ID,
	TMP_RPC_JSONRPC_ERROR_CODE,
	TMP_RPC_JSONRPC_ERROR_MESSAGE,
	TMP_MESSAGE_TYPE,
	TMP_MESSAGE_ID,
	TMP_MESSAGE_COMPRESSED_SIZE,
	TMP_MESSAGE_UNCOMPRESSED_SIZE,
]);
const TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';
const TMP_DBSYSTEMVALUES_MSSQL = 'mssql';
const TMP_DBSYSTEMVALUES_MYSQL = 'mysql';
const TMP_DBSYSTEMVALUES_ORACLE = 'oracle';
const TMP_DBSYSTEMVALUES_DB2 = 'db2';
const TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';
const TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';
const TMP_DBSYSTEMVALUES_HIVE = 'hive';
const TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';
const TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';
const TMP_DBSYSTEMVALUES_PROGRESS = 'progress';
const TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';
const TMP_DBSYSTEMVALUES_HANADB = 'hanadb';
const TMP_DBSYSTEMVALUES_INGRES = 'ingres';
const TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';
const TMP_DBSYSTEMVALUES_EDB = 'edb';
const TMP_DBSYSTEMVALUES_CACHE = 'cache';
const TMP_DBSYSTEMVALUES_ADABAS = 'adabas';
const TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';
const TMP_DBSYSTEMVALUES_DERBY = 'derby';
const TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';
const TMP_DBSYSTEMVALUES_INFORMIX = 'informix';
const TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';
const TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';
const TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';
const TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';
const TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';
const TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';
const TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';
const TMP_DBSYSTEMVALUES_SYBASE = 'sybase';
const TMP_DBSYSTEMVALUES_TERADATA = 'teradata';
const TMP_DBSYSTEMVALUES_VERTICA = 'vertica';
const TMP_DBSYSTEMVALUES_H2 = 'h2';
const TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';
const TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';
const TMP_DBSYSTEMVALUES_HBASE = 'hbase';
const TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';
const TMP_DBSYSTEMVALUES_REDIS = 'redis';
const TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';
const TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';
const TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';
const TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';
const TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';
const TMP_DBSYSTEMVALUES_GEODE = 'geode';
const TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';
const TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';
const TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';
const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;
const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;
const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;
const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;
const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;
const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;
const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;
const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;
const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;
const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;
const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;
const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;
const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;
const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;
const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;
const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;
const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;
const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;
const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;
const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;
const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;
const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;
const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;
const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;
const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;
const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;
const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;
const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;
const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;
const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;
const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;
const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;
const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;
const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;
const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;
const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;
const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;
const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;
const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;
const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;
const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;
const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;
const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;
const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;
const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;
const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;
const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;
const DbSystemValues =
 createConstMap([
	TMP_DBSYSTEMVALUES_OTHER_SQL,
	TMP_DBSYSTEMVALUES_MSSQL,
	TMP_DBSYSTEMVALUES_MYSQL,
	TMP_DBSYSTEMVALUES_ORACLE,
	TMP_DBSYSTEMVALUES_DB2,
	TMP_DBSYSTEMVALUES_POSTGRESQL,
	TMP_DBSYSTEMVALUES_REDSHIFT,
	TMP_DBSYSTEMVALUES_HIVE,
	TMP_DBSYSTEMVALUES_CLOUDSCAPE,
	TMP_DBSYSTEMVALUES_HSQLDB,
	TMP_DBSYSTEMVALUES_PROGRESS,
	TMP_DBSYSTEMVALUES_MAXDB,
	TMP_DBSYSTEMVALUES_HANADB,
	TMP_DBSYSTEMVALUES_INGRES,
	TMP_DBSYSTEMVALUES_FIRSTSQL,
	TMP_DBSYSTEMVALUES_EDB,
	TMP_DBSYSTEMVALUES_CACHE,
	TMP_DBSYSTEMVALUES_ADABAS,
	TMP_DBSYSTEMVALUES_FIREBIRD,
	TMP_DBSYSTEMVALUES_DERBY,
	TMP_DBSYSTEMVALUES_FILEMAKER,
	TMP_DBSYSTEMVALUES_INFORMIX,
	TMP_DBSYSTEMVALUES_INSTANTDB,
	TMP_DBSYSTEMVALUES_INTERBASE,
	TMP_DBSYSTEMVALUES_MARIADB,
	TMP_DBSYSTEMVALUES_NETEZZA,
	TMP_DBSYSTEMVALUES_PERVASIVE,
	TMP_DBSYSTEMVALUES_POINTBASE,
	TMP_DBSYSTEMVALUES_SQLITE,
	TMP_DBSYSTEMVALUES_SYBASE,
	TMP_DBSYSTEMVALUES_TERADATA,
	TMP_DBSYSTEMVALUES_VERTICA,
	TMP_DBSYSTEMVALUES_H2,
	TMP_DBSYSTEMVALUES_COLDFUSION,
	TMP_DBSYSTEMVALUES_CASSANDRA,
	TMP_DBSYSTEMVALUES_HBASE,
	TMP_DBSYSTEMVALUES_MONGODB,
	TMP_DBSYSTEMVALUES_REDIS,
	TMP_DBSYSTEMVALUES_COUCHBASE,
	TMP_DBSYSTEMVALUES_COUCHDB,
	TMP_DBSYSTEMVALUES_COSMOSDB,
	TMP_DBSYSTEMVALUES_DYNAMODB,
	TMP_DBSYSTEMVALUES_NEO4J,
	TMP_DBSYSTEMVALUES_GEODE,
	TMP_DBSYSTEMVALUES_ELASTICSEARCH,
	TMP_DBSYSTEMVALUES_MEMCACHED,
	TMP_DBSYSTEMVALUES_COCKROACHDB,
]);
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';
const TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';
const DBCASSANDRACONSISTENCYLEVELVALUES_ALL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;
const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;
const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;
const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;
const DBCASSANDRACONSISTENCYLEVELVALUES_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;
const DBCASSANDRACONSISTENCYLEVELVALUES_TWO = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;
const DBCASSANDRACONSISTENCYLEVELVALUES_THREE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;
const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;
const DBCASSANDRACONSISTENCYLEVELVALUES_ANY = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;
const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;
const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;
const DbCassandraConsistencyLevelValues =
 createConstMap([
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,
	TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,
]);
const TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';
const TMP_FAASTRIGGERVALUES_HTTP = 'http';
const TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';
const TMP_FAASTRIGGERVALUES_TIMER = 'timer';
const TMP_FAASTRIGGERVALUES_OTHER = 'other';
const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;
const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;
const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;
const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;
const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;
const FaasTriggerValues =
 createConstMap([
	TMP_FAASTRIGGERVALUES_DATASOURCE,
	TMP_FAASTRIGGERVALUES_HTTP,
	TMP_FAASTRIGGERVALUES_PUBSUB,
	TMP_FAASTRIGGERVALUES_TIMER,
	TMP_FAASTRIGGERVALUES_OTHER,
]);
const TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';
const TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';
const TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';
const FAASDOCUMENTOPERATIONVALUES_INSERT = TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;
const FAASDOCUMENTOPERATIONVALUES_EDIT = TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;
const FAASDOCUMENTOPERATIONVALUES_DELETE = TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;
const FaasDocumentOperationValues =
 createConstMap([
	TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,
	TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,
	TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,
]);
const TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';
const TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';
const TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';
const TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';
const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;
const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;
const FAASINVOKEDPROVIDERVALUES_AZURE = TMP_FAASINVOKEDPROVIDERVALUES_AZURE;
const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;
const FaasInvokedProviderValues =
 createConstMap([
	TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,
	TMP_FAASINVOKEDPROVIDERVALUES_AWS,
	TMP_FAASINVOKEDPROVIDERVALUES_AZURE,
	TMP_FAASINVOKEDPROVIDERVALUES_GCP,
]);
const TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';
const TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';
const TMP_NETTRANSPORTVALUES_IP = 'ip';
const TMP_NETTRANSPORTVALUES_UNIX = 'unix';
const TMP_NETTRANSPORTVALUES_PIPE = 'pipe';
const TMP_NETTRANSPORTVALUES_INPROC = 'inproc';
const TMP_NETTRANSPORTVALUES_OTHER = 'other';
const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;
const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;
const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;
const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;
const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;
const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;
const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;
const NetTransportValues =
 createConstMap([
	TMP_NETTRANSPORTVALUES_IP_TCP,
	TMP_NETTRANSPORTVALUES_IP_UDP,
	TMP_NETTRANSPORTVALUES_IP,
	TMP_NETTRANSPORTVALUES_UNIX,
	TMP_NETTRANSPORTVALUES_PIPE,
	TMP_NETTRANSPORTVALUES_INPROC,
	TMP_NETTRANSPORTVALUES_OTHER,
]);
const TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';
const TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';
const TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';
const TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';
const TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';
const NETHOSTCONNECTIONTYPEVALUES_WIFI = TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;
const NETHOSTCONNECTIONTYPEVALUES_WIRED = TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;
const NETHOSTCONNECTIONTYPEVALUES_CELL = TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;
const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;
const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;
const NetHostConnectionTypeValues =
 createConstMap([
	TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,
	TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,
	TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,
	TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,
	TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,
]);
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';
const TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';
const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;
const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;
const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;
const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;
const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;
const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;
const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;
const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;
const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;
const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;
const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;
const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;
const NETHOSTCONNECTIONSUBTYPEVALUES_LTE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;
const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;
const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;
const NETHOSTCONNECTIONSUBTYPEVALUES_GSM = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;
const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;
const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;
const NETHOSTCONNECTIONSUBTYPEVALUES_NR = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;
const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;
const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;
const NetHostConnectionSubtypeValues =
 createConstMap([
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,
	TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,
]);
const TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';
const TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';
const TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';
const TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';
const TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';
const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;
const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;
const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;
const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;
const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;
const HttpFlavorValues = {
	HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,
	HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,
	HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,
	SPDY: TMP_HTTPFLAVORVALUES_SPDY,
	QUIC: TMP_HTTPFLAVORVALUES_QUIC,
};
const TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';
const TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';
const MESSAGINGDESTINATIONKINDVALUES_QUEUE = TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;
const MESSAGINGDESTINATIONKINDVALUES_TOPIC = TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;
const MessagingDestinationKindValues =
 createConstMap([
	TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,
	TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,
]);
const TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';
const TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';
const MESSAGINGOPERATIONVALUES_RECEIVE = TMP_MESSAGINGOPERATIONVALUES_RECEIVE;
const MESSAGINGOPERATIONVALUES_PROCESS = TMP_MESSAGINGOPERATIONVALUES_PROCESS;
const MessagingOperationValues =
 createConstMap([
	TMP_MESSAGINGOPERATIONVALUES_RECEIVE,
	TMP_MESSAGINGOPERATIONVALUES_PROCESS,
]);
const TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;
const TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;
const TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;
const TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;
const TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;
const TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;
const TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;
const TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;
const TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;
const TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;
const TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;
const TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;
const TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;
const TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;
const TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;
const TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;
const TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;
const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;
const RPCGRPCSTATUSCODEVALUES_CANCELLED = TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;
const RPCGRPCSTATUSCODEVALUES_UNKNOWN = TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;
const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;
const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;
const RPCGRPCSTATUSCODEVALUES_NOT_FOUND = TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;
const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;
const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;
const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;
const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;
const RPCGRPCSTATUSCODEVALUES_ABORTED = TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;
const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;
const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;
const RPCGRPCSTATUSCODEVALUES_INTERNAL = TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;
const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;
const RPCGRPCSTATUSCODEVALUES_DATA_LOSS = TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;
const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;
const RpcGrpcStatusCodeValues = {
	OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,
	CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,
	UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,
	INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,
	DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,
	NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,
	ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,
	PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,
	RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,
	FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,
	ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,
	OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,
	UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,
	INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,
	UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,
	DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,
	UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,
};
const TMP_MESSAGETYPEVALUES_SENT = 'SENT';
const TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';
const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;
const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;
const MessageTypeValues =
 createConstMap([
	TMP_MESSAGETYPEVALUES_SENT,
	TMP_MESSAGETYPEVALUES_RECEIVED,
]);

const TMP_CLOUD_PROVIDER = 'cloud.provider';
const TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';
const TMP_CLOUD_REGION = 'cloud.region';
const TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';
const TMP_CLOUD_PLATFORM = 'cloud.platform';
const TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';
const TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';
const TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';
const TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';
const TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';
const TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';
const TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';
const TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';
const TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';
const TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';
const TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';
const TMP_CONTAINER_NAME = 'container.name';
const TMP_CONTAINER_ID = 'container.id';
const TMP_CONTAINER_RUNTIME = 'container.runtime';
const TMP_CONTAINER_IMAGE_NAME = 'container.image.name';
const TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';
const TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';
const TMP_DEVICE_ID = 'device.id';
const TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';
const TMP_DEVICE_MODEL_NAME = 'device.model.name';
const TMP_FAAS_NAME = 'faas.name';
const TMP_FAAS_ID = 'faas.id';
const TMP_FAAS_VERSION = 'faas.version';
const TMP_FAAS_INSTANCE = 'faas.instance';
const TMP_FAAS_MAX_MEMORY = 'faas.max_memory';
const TMP_HOST_ID = 'host.id';
const TMP_HOST_NAME = 'host.name';
const TMP_HOST_TYPE = 'host.type';
const TMP_HOST_ARCH = 'host.arch';
const TMP_HOST_IMAGE_NAME = 'host.image.name';
const TMP_HOST_IMAGE_ID = 'host.image.id';
const TMP_HOST_IMAGE_VERSION = 'host.image.version';
const TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';
const TMP_K8S_NODE_NAME = 'k8s.node.name';
const TMP_K8S_NODE_UID = 'k8s.node.uid';
const TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';
const TMP_K8S_POD_UID = 'k8s.pod.uid';
const TMP_K8S_POD_NAME = 'k8s.pod.name';
const TMP_K8S_CONTAINER_NAME = 'k8s.container.name';
const TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';
const TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';
const TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';
const TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';
const TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';
const TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';
const TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';
const TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';
const TMP_K8S_JOB_UID = 'k8s.job.uid';
const TMP_K8S_JOB_NAME = 'k8s.job.name';
const TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';
const TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';
const TMP_OS_TYPE = 'os.type';
const TMP_OS_DESCRIPTION = 'os.description';
const TMP_OS_NAME = 'os.name';
const TMP_OS_VERSION = 'os.version';
const TMP_PROCESS_PID = 'process.pid';
const TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';
const TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';
const TMP_PROCESS_COMMAND = 'process.command';
const TMP_PROCESS_COMMAND_LINE = 'process.command_line';
const TMP_PROCESS_COMMAND_ARGS = 'process.command_args';
const TMP_PROCESS_OWNER = 'process.owner';
const TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';
const TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';
const TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';
const TMP_SERVICE_NAME = 'service.name';
const TMP_SERVICE_NAMESPACE = 'service.namespace';
const TMP_SERVICE_INSTANCE_ID = 'service.instance.id';
const TMP_SERVICE_VERSION = 'service.version';
const TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';
const TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';
const TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';
const TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';
const TMP_WEBENGINE_NAME = 'webengine.name';
const TMP_WEBENGINE_VERSION = 'webengine.version';
const TMP_WEBENGINE_DESCRIPTION = 'webengine.description';
const SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;
const SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;
const SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;
const SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;
const SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;
const SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;
const SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;
const SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;
const SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;
const SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;
const SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;
const SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;
const SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;
const SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;
const SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;
const SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;
const SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;
const SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;
const SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;
const SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;
const SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;
const SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;
const SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;
const SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;
const SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;
const SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;
const SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;
const SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;
const SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;
const SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;
const SEMRESATTRS_HOST_ID = TMP_HOST_ID;
const SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;
const SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;
const SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;
const SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;
const SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;
const SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;
const SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;
const SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;
const SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;
const SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;
const SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;
const SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;
const SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;
const SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;
const SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;
const SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;
const SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;
const SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;
const SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;
const SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;
const SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;
const SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;
const SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;
const SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;
const SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;
const SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;
const SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;
const SEMRESATTRS_OS_NAME = TMP_OS_NAME;
const SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;
const SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;
const SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;
const SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;
const SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;
const SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;
const SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;
const SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;
const SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;
const SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;
const SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;
const SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;
const SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;
const SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;
const SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;
const SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;
const SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;
const SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;
const SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;
const SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;
const SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;
const SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;
const SemanticResourceAttributes =
 createConstMap([
	TMP_CLOUD_PROVIDER,
	TMP_CLOUD_ACCOUNT_ID,
	TMP_CLOUD_REGION,
	TMP_CLOUD_AVAILABILITY_ZONE,
	TMP_CLOUD_PLATFORM,
	TMP_AWS_ECS_CONTAINER_ARN,
	TMP_AWS_ECS_CLUSTER_ARN,
	TMP_AWS_ECS_LAUNCHTYPE,
	TMP_AWS_ECS_TASK_ARN,
	TMP_AWS_ECS_TASK_FAMILY,
	TMP_AWS_ECS_TASK_REVISION,
	TMP_AWS_EKS_CLUSTER_ARN,
	TMP_AWS_LOG_GROUP_NAMES,
	TMP_AWS_LOG_GROUP_ARNS,
	TMP_AWS_LOG_STREAM_NAMES,
	TMP_AWS_LOG_STREAM_ARNS,
	TMP_CONTAINER_NAME,
	TMP_CONTAINER_ID,
	TMP_CONTAINER_RUNTIME,
	TMP_CONTAINER_IMAGE_NAME,
	TMP_CONTAINER_IMAGE_TAG,
	TMP_DEPLOYMENT_ENVIRONMENT,
	TMP_DEVICE_ID,
	TMP_DEVICE_MODEL_IDENTIFIER,
	TMP_DEVICE_MODEL_NAME,
	TMP_FAAS_NAME,
	TMP_FAAS_ID,
	TMP_FAAS_VERSION,
	TMP_FAAS_INSTANCE,
	TMP_FAAS_MAX_MEMORY,
	TMP_HOST_ID,
	TMP_HOST_NAME,
	TMP_HOST_TYPE,
	TMP_HOST_ARCH,
	TMP_HOST_IMAGE_NAME,
	TMP_HOST_IMAGE_ID,
	TMP_HOST_IMAGE_VERSION,
	TMP_K8S_CLUSTER_NAME,
	TMP_K8S_NODE_NAME,
	TMP_K8S_NODE_UID,
	TMP_K8S_NAMESPACE_NAME,
	TMP_K8S_POD_UID,
	TMP_K8S_POD_NAME,
	TMP_K8S_CONTAINER_NAME,
	TMP_K8S_REPLICASET_UID,
	TMP_K8S_REPLICASET_NAME,
	TMP_K8S_DEPLOYMENT_UID,
	TMP_K8S_DEPLOYMENT_NAME,
	TMP_K8S_STATEFULSET_UID,
	TMP_K8S_STATEFULSET_NAME,
	TMP_K8S_DAEMONSET_UID,
	TMP_K8S_DAEMONSET_NAME,
	TMP_K8S_JOB_UID,
	TMP_K8S_JOB_NAME,
	TMP_K8S_CRONJOB_UID,
	TMP_K8S_CRONJOB_NAME,
	TMP_OS_TYPE,
	TMP_OS_DESCRIPTION,
	TMP_OS_NAME,
	TMP_OS_VERSION,
	TMP_PROCESS_PID,
	TMP_PROCESS_EXECUTABLE_NAME,
	TMP_PROCESS_EXECUTABLE_PATH,
	TMP_PROCESS_COMMAND,
	TMP_PROCESS_COMMAND_LINE,
	TMP_PROCESS_COMMAND_ARGS,
	TMP_PROCESS_OWNER,
	TMP_PROCESS_RUNTIME_NAME,
	TMP_PROCESS_RUNTIME_VERSION,
	TMP_PROCESS_RUNTIME_DESCRIPTION,
	TMP_SERVICE_NAME,
	TMP_SERVICE_NAMESPACE,
	TMP_SERVICE_INSTANCE_ID,
	TMP_SERVICE_VERSION,
	TMP_TELEMETRY_SDK_NAME,
	TMP_TELEMETRY_SDK_LANGUAGE,
	TMP_TELEMETRY_SDK_VERSION,
	TMP_TELEMETRY_AUTO_VERSION,
	TMP_WEBENGINE_NAME,
	TMP_WEBENGINE_VERSION,
	TMP_WEBENGINE_DESCRIPTION,
]);
const TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';
const TMP_CLOUDPROVIDERVALUES_AWS = 'aws';
const TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';
const TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';
const CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;
const CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;
const CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;
const CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;
const CloudProviderValues =
 createConstMap([
	TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,
	TMP_CLOUDPROVIDERVALUES_AWS,
	TMP_CLOUDPROVIDERVALUES_AZURE,
	TMP_CLOUDPROVIDERVALUES_GCP,
]);
const TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';
const TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';
const TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';
const TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';
const TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';
const TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';
const TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';
const TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';
const TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';
const TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';
const TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';
const TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';
const TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';
const TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';
const TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';
const TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';
const TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';
const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;
const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;
const CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;
const CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;
const CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;
const CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;
const CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;
const CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;
const CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;
const CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;
const CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;
const CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;
const CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;
const CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;
const CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;
const CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;
const CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;
const CloudPlatformValues =
 createConstMap([
	TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,
	TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,
	TMP_CLOUDPLATFORMVALUES_AWS_EC2,
	TMP_CLOUDPLATFORMVALUES_AWS_ECS,
	TMP_CLOUDPLATFORMVALUES_AWS_EKS,
	TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,
	TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,
	TMP_CLOUDPLATFORMVALUES_AZURE_VM,
	TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,
	TMP_CLOUDPLATFORMVALUES_AZURE_AKS,
	TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,
	TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,
	TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,
	TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,
	TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,
	TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,
	TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,
]);
const TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';
const TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';
const AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;
const AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;
const AwsEcsLaunchtypeValues =
 createConstMap([
	TMP_AWSECSLAUNCHTYPEVALUES_EC2,
	TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,
]);
const TMP_HOSTARCHVALUES_AMD64 = 'amd64';
const TMP_HOSTARCHVALUES_ARM32 = 'arm32';
const TMP_HOSTARCHVALUES_ARM64 = 'arm64';
const TMP_HOSTARCHVALUES_IA64 = 'ia64';
const TMP_HOSTARCHVALUES_PPC32 = 'ppc32';
const TMP_HOSTARCHVALUES_PPC64 = 'ppc64';
const TMP_HOSTARCHVALUES_X86 = 'x86';
const HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;
const HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;
const HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;
const HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;
const HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;
const HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;
const HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;
const HostArchValues =
 createConstMap([
	TMP_HOSTARCHVALUES_AMD64,
	TMP_HOSTARCHVALUES_ARM32,
	TMP_HOSTARCHVALUES_ARM64,
	TMP_HOSTARCHVALUES_IA64,
	TMP_HOSTARCHVALUES_PPC32,
	TMP_HOSTARCHVALUES_PPC64,
	TMP_HOSTARCHVALUES_X86,
]);
const TMP_OSTYPEVALUES_WINDOWS = 'windows';
const TMP_OSTYPEVALUES_LINUX = 'linux';
const TMP_OSTYPEVALUES_DARWIN = 'darwin';
const TMP_OSTYPEVALUES_FREEBSD = 'freebsd';
const TMP_OSTYPEVALUES_NETBSD = 'netbsd';
const TMP_OSTYPEVALUES_OPENBSD = 'openbsd';
const TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';
const TMP_OSTYPEVALUES_HPUX = 'hpux';
const TMP_OSTYPEVALUES_AIX = 'aix';
const TMP_OSTYPEVALUES_SOLARIS = 'solaris';
const TMP_OSTYPEVALUES_Z_OS = 'z_os';
const OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;
const OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;
const OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;
const OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;
const OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;
const OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;
const OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;
const OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;
const OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;
const OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;
const OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;
const OsTypeValues =
 createConstMap([
	TMP_OSTYPEVALUES_WINDOWS,
	TMP_OSTYPEVALUES_LINUX,
	TMP_OSTYPEVALUES_DARWIN,
	TMP_OSTYPEVALUES_FREEBSD,
	TMP_OSTYPEVALUES_NETBSD,
	TMP_OSTYPEVALUES_OPENBSD,
	TMP_OSTYPEVALUES_DRAGONFLYBSD,
	TMP_OSTYPEVALUES_HPUX,
	TMP_OSTYPEVALUES_AIX,
	TMP_OSTYPEVALUES_SOLARIS,
	TMP_OSTYPEVALUES_Z_OS,
]);
const TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';
const TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';
const TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';
const TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';
const TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';
const TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';
const TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';
const TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';
const TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';
const TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';
const TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;
const TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;
const TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;
const TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;
const TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;
const TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;
const TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;
const TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;
const TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;
const TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;
const TelemetrySdkLanguageValues =
 createConstMap([
	TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,
	TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,
	TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,
	TMP_TELEMETRYSDKLANGUAGEVALUES_GO,
	TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,
	TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,
	TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,
	TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,
	TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,
	TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,
]);

const ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result';
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = "acquired";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = "endpoint_limiter";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = "global_limiter";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = "request_canceled";
const ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';
const TELEMETRY_SDK_LANGUAGE_VALUE_CPP = "cpp";
const TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = "dotnet";
const TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = "erlang";
const TELEMETRY_SDK_LANGUAGE_VALUE_GO = "go";
const TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = "java";
const TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = "nodejs";
const TELEMETRY_SDK_LANGUAGE_VALUE_PHP = "php";
const TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = "python";
const TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = "ruby";
const TELEMETRY_SDK_LANGUAGE_VALUE_RUST = "rust";
const TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = "swift";
const TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = "webjs";
const ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';
const ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';
const ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type';
const ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result';
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = "aborted";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = "handled";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = "skipped";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = "unhandled";
const ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy';
const ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled';
const ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback';
const ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status';
const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = "failure";
const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = "success";
const ATTR_CLIENT_ADDRESS = 'client.address';
const ATTR_CLIENT_PORT = 'client.port';
const ATTR_ERROR_TYPE = 'error.type';
const ERROR_TYPE_VALUE_OTHER = "_OTHER";
const ATTR_EXCEPTION_ESCAPED = 'exception.escaped';
const ATTR_EXCEPTION_MESSAGE = 'exception.message';
const ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace';
const ATTR_EXCEPTION_TYPE = 'exception.type';
const ATTR_HTTP_REQUEST_HEADER = (key) => `http.request.header.${key}`;
const ATTR_HTTP_REQUEST_METHOD = 'http.request.method';
const HTTP_REQUEST_METHOD_VALUE_OTHER = "_OTHER";
const HTTP_REQUEST_METHOD_VALUE_CONNECT = "CONNECT";
const HTTP_REQUEST_METHOD_VALUE_DELETE = "DELETE";
const HTTP_REQUEST_METHOD_VALUE_GET = "GET";
const HTTP_REQUEST_METHOD_VALUE_HEAD = "HEAD";
const HTTP_REQUEST_METHOD_VALUE_OPTIONS = "OPTIONS";
const HTTP_REQUEST_METHOD_VALUE_PATCH = "PATCH";
const HTTP_REQUEST_METHOD_VALUE_POST = "POST";
const HTTP_REQUEST_METHOD_VALUE_PUT = "PUT";
const HTTP_REQUEST_METHOD_VALUE_TRACE = "TRACE";
const ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original';
const ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count';
const ATTR_HTTP_RESPONSE_HEADER = (key) => `http.response.header.${key}`;
const ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code';
const ATTR_HTTP_ROUTE = 'http.route';
const ATTR_JVM_GC_ACTION = 'jvm.gc.action';
const ATTR_JVM_GC_NAME = 'jvm.gc.name';
const ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name';
const ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type';
const JVM_MEMORY_TYPE_VALUE_HEAP = "heap";
const JVM_MEMORY_TYPE_VALUE_NON_HEAP = "non_heap";
const ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon';
const ATTR_JVM_THREAD_STATE = 'jvm.thread.state';
const JVM_THREAD_STATE_VALUE_BLOCKED = "blocked";
const JVM_THREAD_STATE_VALUE_NEW = "new";
const JVM_THREAD_STATE_VALUE_RUNNABLE = "runnable";
const JVM_THREAD_STATE_VALUE_TERMINATED = "terminated";
const JVM_THREAD_STATE_VALUE_TIMED_WAITING = "timed_waiting";
const JVM_THREAD_STATE_VALUE_WAITING = "waiting";
const ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address';
const ATTR_NETWORK_LOCAL_PORT = 'network.local.port';
const ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address';
const ATTR_NETWORK_PEER_PORT = 'network.peer.port';
const ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name';
const ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version';
const ATTR_NETWORK_TRANSPORT = 'network.transport';
const NETWORK_TRANSPORT_VALUE_PIPE = "pipe";
const NETWORK_TRANSPORT_VALUE_QUIC = "quic";
const NETWORK_TRANSPORT_VALUE_TCP = "tcp";
const NETWORK_TRANSPORT_VALUE_UDP = "udp";
const NETWORK_TRANSPORT_VALUE_UNIX = "unix";
const ATTR_NETWORK_TYPE = 'network.type';
const NETWORK_TYPE_VALUE_IPV4 = "ipv4";
const NETWORK_TYPE_VALUE_IPV6 = "ipv6";
const ATTR_OTEL_SCOPE_NAME = 'otel.scope.name';
const ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version';
const ATTR_OTEL_STATUS_CODE = 'otel.status_code';
const OTEL_STATUS_CODE_VALUE_ERROR = "ERROR";
const OTEL_STATUS_CODE_VALUE_OK = "OK";
const ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description';
const ATTR_SERVER_ADDRESS = 'server.address';
const ATTR_SERVER_PORT = 'server.port';
const ATTR_SERVICE_NAME = 'service.name';
const ATTR_SERVICE_VERSION = 'service.version';
const ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status';
const SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = "app_shutdown";
const SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = "normal_closure";
const SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = "timeout";
const ATTR_SIGNALR_TRANSPORT = 'signalr.transport';
const SIGNALR_TRANSPORT_VALUE_LONG_POLLING = "long_polling";
const SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = "server_sent_events";
const SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = "web_sockets";
const ATTR_URL_FRAGMENT = 'url.fragment';
const ATTR_URL_FULL = 'url.full';
const ATTR_URL_PATH = 'url.path';
const ATTR_URL_QUERY = 'url.query';
const ATTR_URL_SCHEME = 'url.scheme';
const ATTR_USER_AGENT_ORIGINAL = 'user_agent.original';

const METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = 'aspnetcore.diagnostics.exceptions';
const METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = 'aspnetcore.rate_limiting.active_request_leases';
const METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = 'aspnetcore.rate_limiting.queued_requests';
const METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = 'aspnetcore.rate_limiting.request.time_in_queue';
const METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = 'aspnetcore.rate_limiting.request_lease.duration';
const METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS = 'aspnetcore.rate_limiting.requests';
const METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS = 'aspnetcore.routing.match_attempts';
const METRIC_HTTP_CLIENT_REQUEST_DURATION = 'http.client.request.duration';
const METRIC_HTTP_SERVER_REQUEST_DURATION = 'http.server.request.duration';
const METRIC_JVM_CLASS_COUNT = 'jvm.class.count';
const METRIC_JVM_CLASS_LOADED = 'jvm.class.loaded';
const METRIC_JVM_CLASS_UNLOADED = 'jvm.class.unloaded';
const METRIC_JVM_CPU_COUNT = 'jvm.cpu.count';
const METRIC_JVM_CPU_RECENT_UTILIZATION = 'jvm.cpu.recent_utilization';
const METRIC_JVM_CPU_TIME = 'jvm.cpu.time';
const METRIC_JVM_GC_DURATION = 'jvm.gc.duration';
const METRIC_JVM_MEMORY_COMMITTED = 'jvm.memory.committed';
const METRIC_JVM_MEMORY_LIMIT = 'jvm.memory.limit';
const METRIC_JVM_MEMORY_USED = 'jvm.memory.used';
const METRIC_JVM_MEMORY_USED_AFTER_LAST_GC = 'jvm.memory.used_after_last_gc';
const METRIC_JVM_THREAD_COUNT = 'jvm.thread.count';
const METRIC_KESTREL_ACTIVE_CONNECTIONS = 'kestrel.active_connections';
const METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES = 'kestrel.active_tls_handshakes';
const METRIC_KESTREL_CONNECTION_DURATION = 'kestrel.connection.duration';
const METRIC_KESTREL_QUEUED_CONNECTIONS = 'kestrel.queued_connections';
const METRIC_KESTREL_QUEUED_REQUESTS = 'kestrel.queued_requests';
const METRIC_KESTREL_REJECTED_CONNECTIONS = 'kestrel.rejected_connections';
const METRIC_KESTREL_TLS_HANDSHAKE_DURATION = 'kestrel.tls_handshake.duration';
const METRIC_KESTREL_UPGRADED_CONNECTIONS = 'kestrel.upgraded_connections';
const METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS = 'signalr.server.active_connections';
const METRIC_SIGNALR_SERVER_CONNECTION_DURATION = 'signalr.server.connection.duration';

const ATTR_AWS_ECS_TASK_ID = 'aws.ecs.task.id';
const ATTR_ANDROID_OS_API_LEVEL = 'android.os.api_level';
const ATTR_ANDROID_STATE = 'android.state';
const ANDROID_STATE_VALUE_BACKGROUND = "background";
const ANDROID_STATE_VALUE_CREATED = "created";
const ANDROID_STATE_VALUE_FOREGROUND = "foreground";
const ATTR_ARTIFACT_ATTESTATION_FILENAME = 'artifact.attestation.filename';
const ATTR_ARTIFACT_ATTESTATION_HASH = 'artifact.attestation.hash';
const ATTR_ARTIFACT_ATTESTATION_ID = 'artifact.attestation.id';
const ATTR_ARTIFACT_FILENAME = 'artifact.filename';
const ATTR_ARTIFACT_HASH = 'artifact.hash';
const ATTR_ARTIFACT_PURL = 'artifact.purl';
const ATTR_ARTIFACT_VERSION = 'artifact.version';
const ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';
const ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';
const ATTR_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';
const ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';
const ATTR_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';
const ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';
const ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';
const ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';
const ATTR_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';
const ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';
const ATTR_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';
const ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';
const ATTR_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';
const ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';
const ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';
const ATTR_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';
const ATTR_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';
const ATTR_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';
const ATTR_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';
const ATTR_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';
const ATTR_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';
const ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';
const ATTR_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';
const ATTR_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';
const ATTR_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';
const AWS_ECS_LAUNCHTYPE_VALUE_EC2 = "ec2";
const AWS_ECS_LAUNCHTYPE_VALUE_FARGATE = "fargate";
const ATTR_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';
const ATTR_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';
const ATTR_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';
const ATTR_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';
const ATTR_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';
const ATTR_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';
const ATTR_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';
const ATTR_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';
const ATTR_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';
const ATTR_AWS_REQUEST_ID = 'aws.request_id';
const ATTR_AWS_S3_BUCKET = 'aws.s3.bucket';
const ATTR_AWS_S3_COPY_SOURCE = 'aws.s3.copy_source';
const ATTR_AWS_S3_DELETE = 'aws.s3.delete';
const ATTR_AWS_S3_KEY = 'aws.s3.key';
const ATTR_AWS_S3_PART_NUMBER = 'aws.s3.part_number';
const ATTR_AWS_S3_UPLOAD_ID = 'aws.s3.upload_id';
const ATTR_AZ_NAMESPACE = 'az.namespace';
const ATTR_AZ_SERVICE_REQUEST_ID = 'az.service_request_id';
const ATTR_BROWSER_BRANDS = 'browser.brands';
const ATTR_BROWSER_LANGUAGE = 'browser.language';
const ATTR_BROWSER_MOBILE = 'browser.mobile';
const ATTR_BROWSER_PLATFORM = 'browser.platform';
const ATTR_CICD_PIPELINE_NAME = 'cicd.pipeline.name';
const ATTR_CICD_PIPELINE_RUN_ID = 'cicd.pipeline.run.id';
const ATTR_CICD_PIPELINE_TASK_NAME = 'cicd.pipeline.task.name';
const ATTR_CICD_PIPELINE_TASK_RUN_ID = 'cicd.pipeline.task.run.id';
const ATTR_CICD_PIPELINE_TASK_RUN_URL_FULL = 'cicd.pipeline.task.run.url.full';
const ATTR_CICD_PIPELINE_TASK_TYPE = 'cicd.pipeline.task.type';
const CICD_PIPELINE_TASK_TYPE_VALUE_BUILD = "build";
const CICD_PIPELINE_TASK_TYPE_VALUE_DEPLOY = "deploy";
const CICD_PIPELINE_TASK_TYPE_VALUE_TEST = "test";
const ATTR_CLOUD_ACCOUNT_ID = 'cloud.account.id';
const ATTR_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';
const ATTR_CLOUD_PLATFORM = 'cloud.platform';
const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS = "alibaba_cloud_ecs";
const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC = "alibaba_cloud_fc";
const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_OPENSHIFT = "alibaba_cloud_openshift";
const CLOUD_PLATFORM_VALUE_AWS_APP_RUNNER = "aws_app_runner";
const CLOUD_PLATFORM_VALUE_AWS_EC2 = "aws_ec2";
const CLOUD_PLATFORM_VALUE_AWS_ECS = "aws_ecs";
const CLOUD_PLATFORM_VALUE_AWS_EKS = "aws_eks";
const CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK = "aws_elastic_beanstalk";
const CLOUD_PLATFORM_VALUE_AWS_LAMBDA = "aws_lambda";
const CLOUD_PLATFORM_VALUE_AWS_OPENSHIFT = "aws_openshift";
const CLOUD_PLATFORM_VALUE_AZURE_AKS = "azure_aks";
const CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE = "azure_app_service";
const CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_APPS = "azure_container_apps";
const CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES = "azure_container_instances";
const CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS = "azure_functions";
const CLOUD_PLATFORM_VALUE_AZURE_OPENSHIFT = "azure_openshift";
const CLOUD_PLATFORM_VALUE_AZURE_VM = "azure_vm";
const CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE = "gcp_app_engine";
const CLOUD_PLATFORM_VALUE_GCP_BARE_METAL_SOLUTION = "gcp_bare_metal_solution";
const CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS = "gcp_cloud_functions";
const CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN = "gcp_cloud_run";
const CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE = "gcp_compute_engine";
const CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE = "gcp_kubernetes_engine";
const CLOUD_PLATFORM_VALUE_GCP_OPENSHIFT = "gcp_openshift";
const CLOUD_PLATFORM_VALUE_IBM_CLOUD_OPENSHIFT = "ibm_cloud_openshift";
const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_CVM = "tencent_cloud_cvm";
const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_EKS = "tencent_cloud_eks";
const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_SCF = "tencent_cloud_scf";
const ATTR_CLOUD_PROVIDER = 'cloud.provider';
const CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD = "alibaba_cloud";
const CLOUD_PROVIDER_VALUE_AWS = "aws";
const CLOUD_PROVIDER_VALUE_AZURE = "azure";
const CLOUD_PROVIDER_VALUE_GCP = "gcp";
const CLOUD_PROVIDER_VALUE_HEROKU = "heroku";
const CLOUD_PROVIDER_VALUE_IBM_CLOUD = "ibm_cloud";
const CLOUD_PROVIDER_VALUE_TENCENT_CLOUD = "tencent_cloud";
const ATTR_CLOUD_REGION = 'cloud.region';
const ATTR_CLOUD_RESOURCE_ID = 'cloud.resource_id';
const ATTR_CLOUDEVENTS_EVENT_ID = 'cloudevents.event_id';
const ATTR_CLOUDEVENTS_EVENT_SOURCE = 'cloudevents.event_source';
const ATTR_CLOUDEVENTS_EVENT_SPEC_VERSION = 'cloudevents.event_spec_version';
const ATTR_CLOUDEVENTS_EVENT_SUBJECT = 'cloudevents.event_subject';
const ATTR_CLOUDEVENTS_EVENT_TYPE = 'cloudevents.event_type';
const ATTR_CLOUDFOUNDRY_APP_ID = 'cloudfoundry.app.id';
const ATTR_CLOUDFOUNDRY_APP_INSTANCE_ID = 'cloudfoundry.app.instance.id';
const ATTR_CLOUDFOUNDRY_APP_NAME = 'cloudfoundry.app.name';
const ATTR_CLOUDFOUNDRY_ORG_ID = 'cloudfoundry.org.id';
const ATTR_CLOUDFOUNDRY_ORG_NAME = 'cloudfoundry.org.name';
const ATTR_CLOUDFOUNDRY_PROCESS_ID = 'cloudfoundry.process.id';
const ATTR_CLOUDFOUNDRY_PROCESS_TYPE = 'cloudfoundry.process.type';
const ATTR_CLOUDFOUNDRY_SPACE_ID = 'cloudfoundry.space.id';
const ATTR_CLOUDFOUNDRY_SPACE_NAME = 'cloudfoundry.space.name';
const ATTR_CLOUDFOUNDRY_SYSTEM_ID = 'cloudfoundry.system.id';
const ATTR_CLOUDFOUNDRY_SYSTEM_INSTANCE_ID = 'cloudfoundry.system.instance.id';
const ATTR_CODE_COLUMN = 'code.column';
const ATTR_CODE_FILEPATH = 'code.filepath';
const ATTR_CODE_FUNCTION = 'code.function';
const ATTR_CODE_LINENO = 'code.lineno';
const ATTR_CODE_NAMESPACE = 'code.namespace';
const ATTR_CODE_STACKTRACE = 'code.stacktrace';
const ATTR_CONTAINER_COMMAND = 'container.command';
const ATTR_CONTAINER_COMMAND_ARGS = 'container.command_args';
const ATTR_CONTAINER_COMMAND_LINE = 'container.command_line';
const ATTR_CONTAINER_CPU_STATE = 'container.cpu.state';
const CONTAINER_CPU_STATE_VALUE_KERNEL = "kernel";
const CONTAINER_CPU_STATE_VALUE_SYSTEM = "system";
const CONTAINER_CPU_STATE_VALUE_USER = "user";
const ATTR_CONTAINER_CSI_PLUGIN_NAME = 'container.csi.plugin.name';
const ATTR_CONTAINER_CSI_VOLUME_ID = 'container.csi.volume.id';
const ATTR_CONTAINER_ID = 'container.id';
const ATTR_CONTAINER_IMAGE_ID = 'container.image.id';
const ATTR_CONTAINER_IMAGE_NAME = 'container.image.name';
const ATTR_CONTAINER_IMAGE_REPO_DIGESTS = 'container.image.repo_digests';
const ATTR_CONTAINER_IMAGE_TAGS = 'container.image.tags';
const ATTR_CONTAINER_LABEL = (key) => `container.label.${key}`;
const ATTR_CONTAINER_LABELS = (key) => `container.labels.${key}`;
const ATTR_CONTAINER_NAME = 'container.name';
const ATTR_CONTAINER_RUNTIME = 'container.runtime';
const ATTR_CPU_MODE = 'cpu.mode';
const CPU_MODE_VALUE_IDLE = "idle";
const CPU_MODE_VALUE_INTERRUPT = "interrupt";
const CPU_MODE_VALUE_IOWAIT = "iowait";
const CPU_MODE_VALUE_KERNEL = "kernel";
const CPU_MODE_VALUE_NICE = "nice";
const CPU_MODE_VALUE_STEAL = "steal";
const CPU_MODE_VALUE_SYSTEM = "system";
const CPU_MODE_VALUE_USER = "user";
const ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL = "all";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY = "any";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM = "each_quorum";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE = "local_one";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM = "local_quorum";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL = "local_serial";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE = "one";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM = "quorum";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL = "serial";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE = "three";
const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO = "two";
const ATTR_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';
const ATTR_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';
const ATTR_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';
const ATTR_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';
const ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';
const ATTR_DB_CASSANDRA_TABLE = 'db.cassandra.table';
const ATTR_DB_CLIENT_CONNECTION_POOL_NAME = 'db.client.connection.pool.name';
const ATTR_DB_CLIENT_CONNECTION_STATE = 'db.client.connection.state';
const DB_CLIENT_CONNECTION_STATE_VALUE_IDLE = "idle";
const DB_CLIENT_CONNECTION_STATE_VALUE_USED = "used";
const ATTR_DB_CLIENT_CONNECTIONS_POOL_NAME = 'db.client.connections.pool.name';
const ATTR_DB_CLIENT_CONNECTIONS_STATE = 'db.client.connections.state';
const DB_CLIENT_CONNECTIONS_STATE_VALUE_IDLE = "idle";
const DB_CLIENT_CONNECTIONS_STATE_VALUE_USED = "used";
const ATTR_DB_COLLECTION_NAME = 'db.collection.name';
const ATTR_DB_CONNECTION_STRING = 'db.connection_string';
const ATTR_DB_COSMOSDB_CLIENT_ID = 'db.cosmosdb.client_id';
const ATTR_DB_COSMOSDB_CONNECTION_MODE = 'db.cosmosdb.connection_mode';
const DB_COSMOSDB_CONNECTION_MODE_VALUE_DIRECT = "direct";
const DB_COSMOSDB_CONNECTION_MODE_VALUE_GATEWAY = "gateway";
const ATTR_DB_COSMOSDB_CONTAINER = 'db.cosmosdb.container';
const ATTR_DB_COSMOSDB_OPERATION_TYPE = 'db.cosmosdb.operation_type';
const DB_COSMOSDB_OPERATION_TYPE_VALUE_BATCH = "batch";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_CREATE = "create";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_DELETE = "delete";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE = "execute";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE_JAVASCRIPT = "execute_javascript";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD = "head";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD_FEED = "head_feed";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_INVALID = "invalid";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_PATCH = "patch";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY = "query";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY_PLAN = "query_plan";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_READ = "read";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_READ_FEED = "read_feed";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_REPLACE = "replace";
const DB_COSMOSDB_OPERATION_TYPE_VALUE_UPSERT = "upsert";
const ATTR_DB_COSMOSDB_REQUEST_CHARGE = 'db.cosmosdb.request_charge';
const ATTR_DB_COSMOSDB_REQUEST_CONTENT_LENGTH = 'db.cosmosdb.request_content_length';
const ATTR_DB_COSMOSDB_STATUS_CODE = 'db.cosmosdb.status_code';
const ATTR_DB_COSMOSDB_SUB_STATUS_CODE = 'db.cosmosdb.sub_status_code';
const ATTR_DB_ELASTICSEARCH_CLUSTER_NAME = 'db.elasticsearch.cluster.name';
const ATTR_DB_ELASTICSEARCH_NODE_NAME = 'db.elasticsearch.node.name';
const ATTR_DB_ELASTICSEARCH_PATH_PARTS = (key) => `db.elasticsearch.path_parts.${key}`;
const ATTR_DB_INSTANCE_ID = 'db.instance.id';
const ATTR_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';
const ATTR_DB_MONGODB_COLLECTION = 'db.mongodb.collection';
const ATTR_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';
const ATTR_DB_NAME = 'db.name';
const ATTR_DB_NAMESPACE = 'db.namespace';
const ATTR_DB_OPERATION = 'db.operation';
const ATTR_DB_OPERATION_BATCH_SIZE = 'db.operation.batch.size';
const ATTR_DB_OPERATION_NAME = 'db.operation.name';
const ATTR_DB_QUERY_PARAMETER = (key) => `db.query.parameter.${key}`;
const ATTR_DB_QUERY_TEXT = 'db.query.text';
const ATTR_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';
const ATTR_DB_RESPONSE_STATUS_CODE = 'db.response.status_code';
const ATTR_DB_SQL_TABLE = 'db.sql.table';
const ATTR_DB_STATEMENT = 'db.statement';
const ATTR_DB_SYSTEM = 'db.system';
const DB_SYSTEM_VALUE_ADABAS = "adabas";
const DB_SYSTEM_VALUE_CACHE = "cache";
const DB_SYSTEM_VALUE_CASSANDRA = "cassandra";
const DB_SYSTEM_VALUE_CLICKHOUSE = "clickhouse";
const DB_SYSTEM_VALUE_CLOUDSCAPE = "cloudscape";
const DB_SYSTEM_VALUE_COCKROACHDB = "cockroachdb";
const DB_SYSTEM_VALUE_COLDFUSION = "coldfusion";
const DB_SYSTEM_VALUE_COSMOSDB = "cosmosdb";
const DB_SYSTEM_VALUE_COUCHBASE = "couchbase";
const DB_SYSTEM_VALUE_COUCHDB = "couchdb";
const DB_SYSTEM_VALUE_DB2 = "db2";
const DB_SYSTEM_VALUE_DERBY = "derby";
const DB_SYSTEM_VALUE_DYNAMODB = "dynamodb";
const DB_SYSTEM_VALUE_EDB = "edb";
const DB_SYSTEM_VALUE_ELASTICSEARCH = "elasticsearch";
const DB_SYSTEM_VALUE_FILEMAKER = "filemaker";
const DB_SYSTEM_VALUE_FIREBIRD = "firebird";
const DB_SYSTEM_VALUE_FIRSTSQL = "firstsql";
const DB_SYSTEM_VALUE_GEODE = "geode";
const DB_SYSTEM_VALUE_H2 = "h2";
const DB_SYSTEM_VALUE_HANADB = "hanadb";
const DB_SYSTEM_VALUE_HBASE = "hbase";
const DB_SYSTEM_VALUE_HIVE = "hive";
const DB_SYSTEM_VALUE_HSQLDB = "hsqldb";
const DB_SYSTEM_VALUE_INFLUXDB = "influxdb";
const DB_SYSTEM_VALUE_INFORMIX = "informix";
const DB_SYSTEM_VALUE_INGRES = "ingres";
const DB_SYSTEM_VALUE_INSTANTDB = "instantdb";
const DB_SYSTEM_VALUE_INTERBASE = "interbase";
const DB_SYSTEM_VALUE_INTERSYSTEMS_CACHE = "intersystems_cache";
const DB_SYSTEM_VALUE_MARIADB = "mariadb";
const DB_SYSTEM_VALUE_MAXDB = "maxdb";
const DB_SYSTEM_VALUE_MEMCACHED = "memcached";
const DB_SYSTEM_VALUE_MONGODB = "mongodb";
const DB_SYSTEM_VALUE_MSSQL = "mssql";
const DB_SYSTEM_VALUE_MSSQLCOMPACT = "mssqlcompact";
const DB_SYSTEM_VALUE_MYSQL = "mysql";
const DB_SYSTEM_VALUE_NEO4J = "neo4j";
const DB_SYSTEM_VALUE_NETEZZA = "netezza";
const DB_SYSTEM_VALUE_OPENSEARCH = "opensearch";
const DB_SYSTEM_VALUE_ORACLE = "oracle";
const DB_SYSTEM_VALUE_OTHER_SQL = "other_sql";
const DB_SYSTEM_VALUE_PERVASIVE = "pervasive";
const DB_SYSTEM_VALUE_POINTBASE = "pointbase";
const DB_SYSTEM_VALUE_POSTGRESQL = "postgresql";
const DB_SYSTEM_VALUE_PROGRESS = "progress";
const DB_SYSTEM_VALUE_REDIS = "redis";
const DB_SYSTEM_VALUE_REDSHIFT = "redshift";
const DB_SYSTEM_VALUE_SPANNER = "spanner";
const DB_SYSTEM_VALUE_SQLITE = "sqlite";
const DB_SYSTEM_VALUE_SYBASE = "sybase";
const DB_SYSTEM_VALUE_TERADATA = "teradata";
const DB_SYSTEM_VALUE_TRINO = "trino";
const DB_SYSTEM_VALUE_VERTICA = "vertica";
const ATTR_DB_USER = 'db.user';
const ATTR_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';
const ATTR_DEPLOYMENT_ENVIRONMENT_NAME = 'deployment.environment.name';
const ATTR_DEPLOYMENT_ID = 'deployment.id';
const ATTR_DEPLOYMENT_NAME = 'deployment.name';
const ATTR_DEPLOYMENT_STATUS = 'deployment.status';
const DEPLOYMENT_STATUS_VALUE_FAILED = "failed";
const DEPLOYMENT_STATUS_VALUE_SUCCEEDED = "succeeded";
const ATTR_DESTINATION_ADDRESS = 'destination.address';
const ATTR_DESTINATION_PORT = 'destination.port';
const ATTR_DEVICE_ID = 'device.id';
const ATTR_DEVICE_MANUFACTURER = 'device.manufacturer';
const ATTR_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';
const ATTR_DEVICE_MODEL_NAME = 'device.model.name';
const ATTR_DISK_IO_DIRECTION = 'disk.io.direction';
const DISK_IO_DIRECTION_VALUE_READ = "read";
const DISK_IO_DIRECTION_VALUE_WRITE = "write";
const ATTR_DNS_QUESTION_NAME = 'dns.question.name';
const ATTR_DOTNET_GC_HEAP_GENERATION = 'dotnet.gc.heap.generation';
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = "gen0";
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = "gen1";
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = "gen2";
const DOTNET_GC_HEAP_GENERATION_VALUE_LOH = "loh";
const DOTNET_GC_HEAP_GENERATION_VALUE_POH = "poh";
const ATTR_ENDUSER_ID = 'enduser.id';
const ATTR_ENDUSER_ROLE = 'enduser.role';
const ATTR_ENDUSER_SCOPE = 'enduser.scope';
const ATTR_EVENT_NAME = 'event.name';
const ATTR_FAAS_COLDSTART = 'faas.coldstart';
const ATTR_FAAS_CRON = 'faas.cron';
const ATTR_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';
const ATTR_FAAS_DOCUMENT_NAME = 'faas.document.name';
const ATTR_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';
const FAAS_DOCUMENT_OPERATION_VALUE_DELETE = "delete";
const FAAS_DOCUMENT_OPERATION_VALUE_EDIT = "edit";
const FAAS_DOCUMENT_OPERATION_VALUE_INSERT = "insert";
const ATTR_FAAS_DOCUMENT_TIME = 'faas.document.time';
const ATTR_FAAS_INSTANCE = 'faas.instance';
const ATTR_FAAS_INVOCATION_ID = 'faas.invocation_id';
const ATTR_FAAS_INVOKED_NAME = 'faas.invoked_name';
const ATTR_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';
const FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD = "alibaba_cloud";
const FAAS_INVOKED_PROVIDER_VALUE_AWS = "aws";
const FAAS_INVOKED_PROVIDER_VALUE_AZURE = "azure";
const FAAS_INVOKED_PROVIDER_VALUE_GCP = "gcp";
const FAAS_INVOKED_PROVIDER_VALUE_TENCENT_CLOUD = "tencent_cloud";
const ATTR_FAAS_INVOKED_REGION = 'faas.invoked_region';
const ATTR_FAAS_MAX_MEMORY = 'faas.max_memory';
const ATTR_FAAS_NAME = 'faas.name';
const ATTR_FAAS_TIME = 'faas.time';
const ATTR_FAAS_TRIGGER = 'faas.trigger';
const FAAS_TRIGGER_VALUE_DATASOURCE = "datasource";
const FAAS_TRIGGER_VALUE_HTTP = "http";
const FAAS_TRIGGER_VALUE_OTHER = "other";
const FAAS_TRIGGER_VALUE_PUBSUB = "pubsub";
const FAAS_TRIGGER_VALUE_TIMER = "timer";
const ATTR_FAAS_VERSION = 'faas.version';
const ATTR_FEATURE_FLAG_KEY = 'feature_flag.key';
const ATTR_FEATURE_FLAG_PROVIDER_NAME = 'feature_flag.provider_name';
const ATTR_FEATURE_FLAG_VARIANT = 'feature_flag.variant';
const ATTR_FILE_ACCESSED = 'file.accessed';
const ATTR_FILE_ATTRIBUTES = 'file.attributes';
const ATTR_FILE_CHANGED = 'file.changed';
const ATTR_FILE_CREATED = 'file.created';
const ATTR_FILE_DIRECTORY = 'file.directory';
const ATTR_FILE_EXTENSION = 'file.extension';
const ATTR_FILE_FORK_NAME = 'file.fork_name';
const ATTR_FILE_GROUP_ID = 'file.group.id';
const ATTR_FILE_GROUP_NAME = 'file.group.name';
const ATTR_FILE_INODE = 'file.inode';
const ATTR_FILE_MODE = 'file.mode';
const ATTR_FILE_MODIFIED = 'file.modified';
const ATTR_FILE_NAME = 'file.name';
const ATTR_FILE_OWNER_ID = 'file.owner.id';
const ATTR_FILE_OWNER_NAME = 'file.owner.name';
const ATTR_FILE_PATH = 'file.path';
const ATTR_FILE_SIZE = 'file.size';
const ATTR_FILE_SYMBOLIC_LINK_TARGET_PATH = 'file.symbolic_link.target_path';
const ATTR_GCP_CLIENT_SERVICE = 'gcp.client.service';
const ATTR_GCP_CLOUD_RUN_JOB_EXECUTION = 'gcp.cloud_run.job.execution';
const ATTR_GCP_CLOUD_RUN_JOB_TASK_INDEX = 'gcp.cloud_run.job.task_index';
const ATTR_GCP_GCE_INSTANCE_HOSTNAME = 'gcp.gce.instance.hostname';
const ATTR_GCP_GCE_INSTANCE_NAME = 'gcp.gce.instance.name';
const ATTR_GEN_AI_COMPLETION = 'gen_ai.completion';
const ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT = 'gen_ai.openai.request.response_format';
const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_OBJECT = "json_object";
const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_SCHEMA = "json_schema";
const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_TEXT = "text";
const ATTR_GEN_AI_OPENAI_REQUEST_SEED = 'gen_ai.openai.request.seed';
const ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER = 'gen_ai.openai.request.service_tier';
const GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_AUTO = "auto";
const GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_DEFAULT = "default";
const ATTR_GEN_AI_OPENAI_RESPONSE_SERVICE_TIER = 'gen_ai.openai.response.service_tier';
const ATTR_GEN_AI_OPERATION_NAME = 'gen_ai.operation.name';
const GEN_AI_OPERATION_NAME_VALUE_CHAT = "chat";
const GEN_AI_OPERATION_NAME_VALUE_TEXT_COMPLETION = "text_completion";
const ATTR_GEN_AI_PROMPT = 'gen_ai.prompt';
const ATTR_GEN_AI_REQUEST_FREQUENCY_PENALTY = 'gen_ai.request.frequency_penalty';
const ATTR_GEN_AI_REQUEST_MAX_TOKENS = 'gen_ai.request.max_tokens';
const ATTR_GEN_AI_REQUEST_MODEL = 'gen_ai.request.model';
const ATTR_GEN_AI_REQUEST_PRESENCE_PENALTY = 'gen_ai.request.presence_penalty';
const ATTR_GEN_AI_REQUEST_STOP_SEQUENCES = 'gen_ai.request.stop_sequences';
const ATTR_GEN_AI_REQUEST_TEMPERATURE = 'gen_ai.request.temperature';
const ATTR_GEN_AI_REQUEST_TOP_K = 'gen_ai.request.top_k';
const ATTR_GEN_AI_REQUEST_TOP_P = 'gen_ai.request.top_p';
const ATTR_GEN_AI_RESPONSE_FINISH_REASONS = 'gen_ai.response.finish_reasons';
const ATTR_GEN_AI_RESPONSE_ID = 'gen_ai.response.id';
const ATTR_GEN_AI_RESPONSE_MODEL = 'gen_ai.response.model';
const ATTR_GEN_AI_SYSTEM = 'gen_ai.system';
const GEN_AI_SYSTEM_VALUE_ANTHROPIC = "anthropic";
const GEN_AI_SYSTEM_VALUE_COHERE = "cohere";
const GEN_AI_SYSTEM_VALUE_OPENAI = "openai";
const GEN_AI_SYSTEM_VALUE_VERTEX_AI = "vertex_ai";
const ATTR_GEN_AI_TOKEN_TYPE = 'gen_ai.token.type';
const GEN_AI_TOKEN_TYPE_VALUE_INPUT = "input";
const GEN_AI_TOKEN_TYPE_VALUE_COMPLETION = "output";
const ATTR_GEN_AI_USAGE_COMPLETION_TOKENS = 'gen_ai.usage.completion_tokens';
const ATTR_GEN_AI_USAGE_INPUT_TOKENS = 'gen_ai.usage.input_tokens';
const ATTR_GEN_AI_USAGE_OUTPUT_TOKENS = 'gen_ai.usage.output_tokens';
const ATTR_GEN_AI_USAGE_PROMPT_TOKENS = 'gen_ai.usage.prompt_tokens';
const ATTR_GO_MEMORY_TYPE = 'go.memory.type';
const GO_MEMORY_TYPE_VALUE_OTHER = "other";
const GO_MEMORY_TYPE_VALUE_STACK = "stack";
const ATTR_GRAPHQL_DOCUMENT = 'graphql.document';
const ATTR_GRAPHQL_OPERATION_NAME = 'graphql.operation.name';
const ATTR_GRAPHQL_OPERATION_TYPE = 'graphql.operation.type';
const GRAPHQL_OPERATION_TYPE_VALUE_MUTATION = "mutation";
const GRAPHQL_OPERATION_TYPE_VALUE_QUERY = "query";
const GRAPHQL_OPERATION_TYPE_VALUE_SUBSCRIPTION = "subscription";
const ATTR_HEROKU_APP_ID = 'heroku.app.id';
const ATTR_HEROKU_RELEASE_COMMIT = 'heroku.release.commit';
const ATTR_HEROKU_RELEASE_CREATION_TIMESTAMP = 'heroku.release.creation_timestamp';
const ATTR_HOST_ARCH = 'host.arch';
const HOST_ARCH_VALUE_AMD64 = "amd64";
const HOST_ARCH_VALUE_ARM32 = "arm32";
const HOST_ARCH_VALUE_ARM64 = "arm64";
const HOST_ARCH_VALUE_IA64 = "ia64";
const HOST_ARCH_VALUE_PPC32 = "ppc32";
const HOST_ARCH_VALUE_PPC64 = "ppc64";
const HOST_ARCH_VALUE_S390X = "s390x";
const HOST_ARCH_VALUE_X86 = "x86";
const ATTR_HOST_CPU_CACHE_L2_SIZE = 'host.cpu.cache.l2.size';
const ATTR_HOST_CPU_FAMILY = 'host.cpu.family';
const ATTR_HOST_CPU_MODEL_ID = 'host.cpu.model.id';
const ATTR_HOST_CPU_MODEL_NAME = 'host.cpu.model.name';
const ATTR_HOST_CPU_STEPPING = 'host.cpu.stepping';
const ATTR_HOST_CPU_VENDOR_ID = 'host.cpu.vendor.id';
const ATTR_HOST_ID = 'host.id';
const ATTR_HOST_IMAGE_ID = 'host.image.id';
const ATTR_HOST_IMAGE_NAME = 'host.image.name';
const ATTR_HOST_IMAGE_VERSION = 'host.image.version';
const ATTR_HOST_IP = 'host.ip';
const ATTR_HOST_MAC = 'host.mac';
const ATTR_HOST_NAME = 'host.name';
const ATTR_HOST_TYPE = 'host.type';
const ATTR_HTTP_CLIENT_IP = 'http.client_ip';
const ATTR_HTTP_CONNECTION_STATE = 'http.connection.state';
const HTTP_CONNECTION_STATE_VALUE_ACTIVE = "active";
const HTTP_CONNECTION_STATE_VALUE_IDLE = "idle";
const ATTR_HTTP_FLAVOR = 'http.flavor';
const HTTP_FLAVOR_VALUE_HTTP_1_0 = "1.0";
const HTTP_FLAVOR_VALUE_HTTP_1_1 = "1.1";
const HTTP_FLAVOR_VALUE_HTTP_2_0 = "2.0";
const HTTP_FLAVOR_VALUE_HTTP_3_0 = "3.0";
const HTTP_FLAVOR_VALUE_QUIC = "QUIC";
const HTTP_FLAVOR_VALUE_SPDY = "SPDY";
const ATTR_HTTP_HOST = 'http.host';
const ATTR_HTTP_METHOD = 'http.method';
const ATTR_HTTP_REQUEST_BODY_SIZE = 'http.request.body.size';
const ATTR_HTTP_REQUEST_SIZE = 'http.request.size';
const ATTR_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';
const ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';
const ATTR_HTTP_RESPONSE_BODY_SIZE = 'http.response.body.size';
const ATTR_HTTP_RESPONSE_SIZE = 'http.response.size';
const ATTR_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';
const ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';
const ATTR_HTTP_SCHEME = 'http.scheme';
const ATTR_HTTP_SERVER_NAME = 'http.server_name';
const ATTR_HTTP_STATUS_CODE = 'http.status_code';
const ATTR_HTTP_TARGET = 'http.target';
const ATTR_HTTP_URL = 'http.url';
const ATTR_HTTP_USER_AGENT = 'http.user_agent';
const ATTR_HW_ID = 'hw.id';
const ATTR_HW_NAME = 'hw.name';
const ATTR_HW_PARENT = 'hw.parent';
const ATTR_HW_STATE = 'hw.state';
const HW_STATE_VALUE_DEGRADED = "degraded";
const HW_STATE_VALUE_FAILED = "failed";
const HW_STATE_VALUE_OK = "ok";
const ATTR_HW_TYPE = 'hw.type';
const HW_TYPE_VALUE_BATTERY = "battery";
const HW_TYPE_VALUE_CPU = "cpu";
const HW_TYPE_VALUE_DISK_CONTROLLER = "disk_controller";
const HW_TYPE_VALUE_ENCLOSURE = "enclosure";
const HW_TYPE_VALUE_FAN = "fan";
const HW_TYPE_VALUE_GPU = "gpu";
const HW_TYPE_VALUE_LOGICAL_DISK = "logical_disk";
const HW_TYPE_VALUE_MEMORY = "memory";
const HW_TYPE_VALUE_NETWORK = "network";
const HW_TYPE_VALUE_PHYSICAL_DISK = "physical_disk";
const HW_TYPE_VALUE_POWER_SUPPLY = "power_supply";
const HW_TYPE_VALUE_TAPE_DRIVE = "tape_drive";
const HW_TYPE_VALUE_TEMPERATURE = "temperature";
const HW_TYPE_VALUE_VOLTAGE = "voltage";
const ATTR_IOS_STATE = 'ios.state';
const IOS_STATE_VALUE_ACTIVE = "active";
const IOS_STATE_VALUE_BACKGROUND = "background";
const IOS_STATE_VALUE_FOREGROUND = "foreground";
const IOS_STATE_VALUE_INACTIVE = "inactive";
const IOS_STATE_VALUE_TERMINATE = "terminate";
const ATTR_JVM_BUFFER_POOL_NAME = 'jvm.buffer.pool.name';
const ATTR_K8S_CLUSTER_NAME = 'k8s.cluster.name';
const ATTR_K8S_CLUSTER_UID = 'k8s.cluster.uid';
const ATTR_K8S_CONTAINER_NAME = 'k8s.container.name';
const ATTR_K8S_CONTAINER_RESTART_COUNT = 'k8s.container.restart_count';
const ATTR_K8S_CONTAINER_STATUS_LAST_TERMINATED_REASON = 'k8s.container.status.last_terminated_reason';
const ATTR_K8S_CRONJOB_NAME = 'k8s.cronjob.name';
const ATTR_K8S_CRONJOB_UID = 'k8s.cronjob.uid';
const ATTR_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';
const ATTR_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';
const ATTR_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';
const ATTR_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';
const ATTR_K8S_JOB_NAME = 'k8s.job.name';
const ATTR_K8S_JOB_UID = 'k8s.job.uid';
const ATTR_K8S_NAMESPACE_NAME = 'k8s.namespace.name';
const ATTR_K8S_NODE_NAME = 'k8s.node.name';
const ATTR_K8S_NODE_UID = 'k8s.node.uid';
const ATTR_K8S_POD_ANNOTATION = (key) => `k8s.pod.annotation.${key}`;
const ATTR_K8S_POD_LABEL = (key) => `k8s.pod.label.${key}`;
const ATTR_K8S_POD_LABELS = (key) => `k8s.pod.labels.${key}`;
const ATTR_K8S_POD_NAME = 'k8s.pod.name';
const ATTR_K8S_POD_UID = 'k8s.pod.uid';
const ATTR_K8S_REPLICASET_NAME = 'k8s.replicaset.name';
const ATTR_K8S_REPLICASET_UID = 'k8s.replicaset.uid';
const ATTR_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';
const ATTR_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';
const ATTR_K8S_VOLUME_NAME = 'k8s.volume.name';
const ATTR_K8S_VOLUME_TYPE = 'k8s.volume.type';
const K8S_VOLUME_TYPE_VALUE_CONFIG_MAP = "configMap";
const K8S_VOLUME_TYPE_VALUE_DOWNWARD_API = "downwardAPI";
const K8S_VOLUME_TYPE_VALUE_EMPTY_DIR = "emptyDir";
const K8S_VOLUME_TYPE_VALUE_LOCAL = "local";
const K8S_VOLUME_TYPE_VALUE_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
const K8S_VOLUME_TYPE_VALUE_SECRET = "secret";
const ATTR_LINUX_MEMORY_SLAB_STATE = 'linux.memory.slab.state';
const LINUX_MEMORY_SLAB_STATE_VALUE_RECLAIMABLE = "reclaimable";
const LINUX_MEMORY_SLAB_STATE_VALUE_UNRECLAIMABLE = "unreclaimable";
const ATTR_LOG_FILE_NAME = 'log.file.name';
const ATTR_LOG_FILE_NAME_RESOLVED = 'log.file.name_resolved';
const ATTR_LOG_FILE_PATH = 'log.file.path';
const ATTR_LOG_FILE_PATH_RESOLVED = 'log.file.path_resolved';
const ATTR_LOG_IOSTREAM = 'log.iostream';
const LOG_IOSTREAM_VALUE_STDERR = "stderr";
const LOG_IOSTREAM_VALUE_STDOUT = "stdout";
const ATTR_LOG_RECORD_ORIGINAL = 'log.record.original';
const ATTR_LOG_RECORD_UID = 'log.record.uid';
const ATTR_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';
const ATTR_MESSAGE_ID = 'message.id';
const ATTR_MESSAGE_TYPE = 'message.type';
const MESSAGE_TYPE_VALUE_RECEIVED = "RECEIVED";
const MESSAGE_TYPE_VALUE_SENT = "SENT";
const ATTR_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';
const ATTR_MESSAGING_BATCH_MESSAGE_COUNT = 'messaging.batch.message_count';
const ATTR_MESSAGING_CLIENT_ID = 'messaging.client.id';
const ATTR_MESSAGING_CONSUMER_GROUP_NAME = 'messaging.consumer.group.name';
const ATTR_MESSAGING_DESTINATION_ANONYMOUS = 'messaging.destination.anonymous';
const ATTR_MESSAGING_DESTINATION_NAME = 'messaging.destination.name';
const ATTR_MESSAGING_DESTINATION_PARTITION_ID = 'messaging.destination.partition.id';
const ATTR_MESSAGING_DESTINATION_SUBSCRIPTION_NAME = 'messaging.destination.subscription.name';
const ATTR_MESSAGING_DESTINATION_TEMPLATE = 'messaging.destination.template';
const ATTR_MESSAGING_DESTINATION_TEMPORARY = 'messaging.destination.temporary';
const ATTR_MESSAGING_DESTINATION_PUBLISH_ANONYMOUS = 'messaging.destination_publish.anonymous';
const ATTR_MESSAGING_DESTINATION_PUBLISH_NAME = 'messaging.destination_publish.name';
const ATTR_MESSAGING_EVENTHUBS_CONSUMER_GROUP = 'messaging.eventhubs.consumer.group';
const ATTR_MESSAGING_EVENTHUBS_MESSAGE_ENQUEUED_TIME = 'messaging.eventhubs.message.enqueued_time';
const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_DEADLINE = 'messaging.gcp_pubsub.message.ack_deadline';
const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_ID = 'messaging.gcp_pubsub.message.ack_id';
const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_DELIVERY_ATTEMPT = 'messaging.gcp_pubsub.message.delivery_attempt';
const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ORDERING_KEY = 'messaging.gcp_pubsub.message.ordering_key';
const ATTR_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer.group';
const ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION = 'messaging.kafka.destination.partition';
const ATTR_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message.key';
const ATTR_MESSAGING_KAFKA_MESSAGE_OFFSET = 'messaging.kafka.message.offset';
const ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE = 'messaging.kafka.message.tombstone';
const ATTR_MESSAGING_KAFKA_OFFSET = 'messaging.kafka.offset';
const ATTR_MESSAGING_MESSAGE_BODY_SIZE = 'messaging.message.body.size';
const ATTR_MESSAGING_MESSAGE_CONVERSATION_ID = 'messaging.message.conversation_id';
const ATTR_MESSAGING_MESSAGE_ENVELOPE_SIZE = 'messaging.message.envelope.size';
const ATTR_MESSAGING_MESSAGE_ID = 'messaging.message.id';
const ATTR_MESSAGING_OPERATION = 'messaging.operation';
const ATTR_MESSAGING_OPERATION_NAME = 'messaging.operation.name';
const ATTR_MESSAGING_OPERATION_TYPE = 'messaging.operation.type';
const MESSAGING_OPERATION_TYPE_VALUE_CREATE = "create";
const MESSAGING_OPERATION_TYPE_VALUE_DELIVER = "deliver";
const MESSAGING_OPERATION_TYPE_VALUE_PROCESS = "process";
const MESSAGING_OPERATION_TYPE_VALUE_PUBLISH = "publish";
const MESSAGING_OPERATION_TYPE_VALUE_RECEIVE = "receive";
const MESSAGING_OPERATION_TYPE_VALUE_SEND = "send";
const MESSAGING_OPERATION_TYPE_VALUE_SETTLE = "settle";
const ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY = 'messaging.rabbitmq.destination.routing_key';
const ATTR_MESSAGING_RABBITMQ_MESSAGE_DELIVERY_TAG = 'messaging.rabbitmq.message.delivery_tag';
const ATTR_MESSAGING_ROCKETMQ_CLIENT_GROUP = 'messaging.rocketmq.client_group';
const ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL = 'messaging.rocketmq.consumption_model';
const MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_BROADCASTING = "broadcasting";
const MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_CLUSTERING = "clustering";
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELAY_TIME_LEVEL = 'messaging.rocketmq.message.delay_time_level';
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELIVERY_TIMESTAMP = 'messaging.rocketmq.message.delivery_timestamp';
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_GROUP = 'messaging.rocketmq.message.group';
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_KEYS = 'messaging.rocketmq.message.keys';
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_TAG = 'messaging.rocketmq.message.tag';
const ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE = 'messaging.rocketmq.message.type';
const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_DELAY = "delay";
const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_FIFO = "fifo";
const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_NORMAL = "normal";
const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_TRANSACTION = "transaction";
const ATTR_MESSAGING_ROCKETMQ_NAMESPACE = 'messaging.rocketmq.namespace';
const ATTR_MESSAGING_SERVICEBUS_DESTINATION_SUBSCRIPTION_NAME = 'messaging.servicebus.destination.subscription_name';
const ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS = 'messaging.servicebus.disposition_status';
const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_ABANDON = "abandon";
const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_COMPLETE = "complete";
const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEAD_LETTER = "dead_letter";
const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEFER = "defer";
const ATTR_MESSAGING_SERVICEBUS_MESSAGE_DELIVERY_COUNT = 'messaging.servicebus.message.delivery_count';
const ATTR_MESSAGING_SERVICEBUS_MESSAGE_ENQUEUED_TIME = 'messaging.servicebus.message.enqueued_time';
const ATTR_MESSAGING_SYSTEM = 'messaging.system';
const MESSAGING_SYSTEM_VALUE_ACTIVEMQ = "activemq";
const MESSAGING_SYSTEM_VALUE_AWS_SQS = "aws_sqs";
const MESSAGING_SYSTEM_VALUE_EVENTGRID = "eventgrid";
const MESSAGING_SYSTEM_VALUE_EVENTHUBS = "eventhubs";
const MESSAGING_SYSTEM_VALUE_GCP_PUBSUB = "gcp_pubsub";
const MESSAGING_SYSTEM_VALUE_JMS = "jms";
const MESSAGING_SYSTEM_VALUE_KAFKA = "kafka";
const MESSAGING_SYSTEM_VALUE_PULSAR = "pulsar";
const MESSAGING_SYSTEM_VALUE_RABBITMQ = "rabbitmq";
const MESSAGING_SYSTEM_VALUE_ROCKETMQ = "rocketmq";
const MESSAGING_SYSTEM_VALUE_SERVICEBUS = "servicebus";
const ATTR_NET_HOST_IP = 'net.host.ip';
const ATTR_NET_HOST_NAME = 'net.host.name';
const ATTR_NET_HOST_PORT = 'net.host.port';
const ATTR_NET_PEER_IP = 'net.peer.ip';
const ATTR_NET_PEER_NAME = 'net.peer.name';
const ATTR_NET_PEER_PORT = 'net.peer.port';
const ATTR_NET_PROTOCOL_NAME = 'net.protocol.name';
const ATTR_NET_PROTOCOL_VERSION = 'net.protocol.version';
const ATTR_NET_SOCK_FAMILY = 'net.sock.family';
const NET_SOCK_FAMILY_VALUE_INET = "inet";
const NET_SOCK_FAMILY_VALUE_INET6 = "inet6";
const NET_SOCK_FAMILY_VALUE_UNIX = "unix";
const ATTR_NET_SOCK_HOST_ADDR = 'net.sock.host.addr';
const ATTR_NET_SOCK_HOST_PORT = 'net.sock.host.port';
const ATTR_NET_SOCK_PEER_ADDR = 'net.sock.peer.addr';
const ATTR_NET_SOCK_PEER_NAME = 'net.sock.peer.name';
const ATTR_NET_SOCK_PEER_PORT = 'net.sock.peer.port';
const ATTR_NET_TRANSPORT = 'net.transport';
const NET_TRANSPORT_VALUE_INPROC = "inproc";
const NET_TRANSPORT_VALUE_IP_TCP = "ip_tcp";
const NET_TRANSPORT_VALUE_IP_UDP = "ip_udp";
const NET_TRANSPORT_VALUE_OTHER = "other";
const NET_TRANSPORT_VALUE_PIPE = "pipe";
const ATTR_NETWORK_CARRIER_ICC = 'network.carrier.icc';
const ATTR_NETWORK_CARRIER_MCC = 'network.carrier.mcc';
const ATTR_NETWORK_CARRIER_MNC = 'network.carrier.mnc';
const ATTR_NETWORK_CARRIER_NAME = 'network.carrier.name';
const ATTR_NETWORK_CONNECTION_SUBTYPE = 'network.connection.subtype';
const NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA = "cdma";
const NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT = "cdma2000_1xrtt";
const NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE = "edge";
const NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD = "ehrpd";
const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 = "evdo_0";
const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A = "evdo_a";
const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B = "evdo_b";
const NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS = "gprs";
const NETWORK_CONNECTION_SUBTYPE_VALUE_GSM = "gsm";
const NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA = "hsdpa";
const NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA = "hspa";
const NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP = "hspap";
const NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA = "hsupa";
const NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN = "iden";
const NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN = "iwlan";
const NETWORK_CONNECTION_SUBTYPE_VALUE_LTE = "lte";
const NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA = "lte_ca";
const NETWORK_CONNECTION_SUBTYPE_VALUE_NR = "nr";
const NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA = "nrnsa";
const NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA = "td_scdma";
const NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS = "umts";
const ATTR_NETWORK_CONNECTION_TYPE = 'network.connection.type';
const NETWORK_CONNECTION_TYPE_VALUE_CELL = "cell";
const NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE = "unavailable";
const NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN = "unknown";
const NETWORK_CONNECTION_TYPE_VALUE_WIFI = "wifi";
const NETWORK_CONNECTION_TYPE_VALUE_WIRED = "wired";
const ATTR_NETWORK_IO_DIRECTION = 'network.io.direction';
const NETWORK_IO_DIRECTION_VALUE_RECEIVE = "receive";
const NETWORK_IO_DIRECTION_VALUE_TRANSMIT = "transmit";
const ATTR_NODEJS_EVENTLOOP_STATE = 'nodejs.eventloop.state';
const NODEJS_EVENTLOOP_STATE_VALUE_ACTIVE = "active";
const NODEJS_EVENTLOOP_STATE_VALUE_IDLE = "idle";
const ATTR_OCI_MANIFEST_DIGEST = 'oci.manifest.digest';
const ATTR_OPENTRACING_REF_TYPE = 'opentracing.ref_type';
const OPENTRACING_REF_TYPE_VALUE_CHILD_OF = "child_of";
const OPENTRACING_REF_TYPE_VALUE_FOLLOWS_FROM = "follows_from";
const ATTR_OS_BUILD_ID = 'os.build_id';
const ATTR_OS_DESCRIPTION = 'os.description';
const ATTR_OS_NAME = 'os.name';
const ATTR_OS_TYPE = 'os.type';
const OS_TYPE_VALUE_AIX = "aix";
const OS_TYPE_VALUE_DARWIN = "darwin";
const OS_TYPE_VALUE_DRAGONFLYBSD = "dragonflybsd";
const OS_TYPE_VALUE_FREEBSD = "freebsd";
const OS_TYPE_VALUE_HPUX = "hpux";
const OS_TYPE_VALUE_LINUX = "linux";
const OS_TYPE_VALUE_NETBSD = "netbsd";
const OS_TYPE_VALUE_OPENBSD = "openbsd";
const OS_TYPE_VALUE_SOLARIS = "solaris";
const OS_TYPE_VALUE_WINDOWS = "windows";
const OS_TYPE_VALUE_Z_OS = "z_os";
const ATTR_OS_VERSION = 'os.version';
const ATTR_OTEL_LIBRARY_NAME = 'otel.library.name';
const ATTR_OTEL_LIBRARY_VERSION = 'otel.library.version';
const ATTR_PEER_SERVICE = 'peer.service';
const ATTR_POOL_NAME = 'pool.name';
const ATTR_PROCESS_ARGS_COUNT = 'process.args_count';
const ATTR_PROCESS_COMMAND = 'process.command';
const ATTR_PROCESS_COMMAND_ARGS = 'process.command_args';
const ATTR_PROCESS_COMMAND_LINE = 'process.command_line';
const ATTR_PROCESS_CONTEXT_SWITCH_TYPE = 'process.context_switch_type';
const PROCESS_CONTEXT_SWITCH_TYPE_VALUE_INVOLUNTARY = "involuntary";
const PROCESS_CONTEXT_SWITCH_TYPE_VALUE_VOLUNTARY = "voluntary";
const ATTR_PROCESS_CPU_STATE = 'process.cpu.state';
const PROCESS_CPU_STATE_VALUE_SYSTEM = "system";
const PROCESS_CPU_STATE_VALUE_USER = "user";
const PROCESS_CPU_STATE_VALUE_WAIT = "wait";
const ATTR_PROCESS_CREATION_TIME = 'process.creation.time';
const ATTR_PROCESS_EXECUTABLE_BUILD_ID_GNU = 'process.executable.build_id.gnu';
const ATTR_PROCESS_EXECUTABLE_BUILD_ID_GO = 'process.executable.build_id.go';
const ATTR_PROCESS_EXECUTABLE_BUILD_ID_PROFILING = 'process.executable.build_id.profiling';
const ATTR_PROCESS_EXECUTABLE_NAME = 'process.executable.name';
const ATTR_PROCESS_EXECUTABLE_PATH = 'process.executable.path';
const ATTR_PROCESS_EXIT_CODE = 'process.exit.code';
const ATTR_PROCESS_EXIT_TIME = 'process.exit.time';
const ATTR_PROCESS_GROUP_LEADER_PID = 'process.group_leader.pid';
const ATTR_PROCESS_INTERACTIVE = 'process.interactive';
const ATTR_PROCESS_OWNER = 'process.owner';
const ATTR_PROCESS_PAGING_FAULT_TYPE = 'process.paging.fault_type';
const PROCESS_PAGING_FAULT_TYPE_VALUE_MAJOR = "major";
const PROCESS_PAGING_FAULT_TYPE_VALUE_MINOR = "minor";
const ATTR_PROCESS_PARENT_PID = 'process.parent_pid';
const ATTR_PROCESS_PID = 'process.pid';
const ATTR_PROCESS_REAL_USER_ID = 'process.real_user.id';
const ATTR_PROCESS_REAL_USER_NAME = 'process.real_user.name';
const ATTR_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';
const ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name';
const ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version';
const ATTR_PROCESS_SAVED_USER_ID = 'process.saved_user.id';
const ATTR_PROCESS_SAVED_USER_NAME = 'process.saved_user.name';
const ATTR_PROCESS_SESSION_LEADER_PID = 'process.session_leader.pid';
const ATTR_PROCESS_TITLE = 'process.title';
const ATTR_PROCESS_USER_ID = 'process.user.id';
const ATTR_PROCESS_USER_NAME = 'process.user.name';
const ATTR_PROCESS_VPID = 'process.vpid';
const ATTR_PROCESS_WORKING_DIRECTORY = 'process.working_directory';
const ATTR_PROFILE_FRAME_TYPE = 'profile.frame.type';
const PROFILE_FRAME_TYPE_VALUE_CPYTHON = "cpython";
const PROFILE_FRAME_TYPE_VALUE_DOTNET = "dotnet";
const PROFILE_FRAME_TYPE_VALUE_JVM = "jvm";
const PROFILE_FRAME_TYPE_VALUE_KERNEL = "kernel";
const PROFILE_FRAME_TYPE_VALUE_NATIVE = "native";
const PROFILE_FRAME_TYPE_VALUE_PERL = "perl";
const PROFILE_FRAME_TYPE_VALUE_PHP = "php";
const PROFILE_FRAME_TYPE_VALUE_RUBY = "ruby";
const PROFILE_FRAME_TYPE_VALUE_V8JS = "v8js";
const ATTR_RPC_CONNECT_RPC_ERROR_CODE = 'rpc.connect_rpc.error_code';
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_ABORTED = "aborted";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_ALREADY_EXISTS = "already_exists";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_CANCELLED = "cancelled";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_DATA_LOSS = "data_loss";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_DEADLINE_EXCEEDED = "deadline_exceeded";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_FAILED_PRECONDITION = "failed_precondition";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_INTERNAL = "internal";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_INVALID_ARGUMENT = "invalid_argument";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_NOT_FOUND = "not_found";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_OUT_OF_RANGE = "out_of_range";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_PERMISSION_DENIED = "permission_denied";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_RESOURCE_EXHAUSTED = "resource_exhausted";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAUTHENTICATED = "unauthenticated";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAVAILABLE = "unavailable";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNIMPLEMENTED = "unimplemented";
const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNKNOWN = "unknown";
const ATTR_RPC_CONNECT_RPC_REQUEST_METADATA = (key) => `rpc.connect_rpc.request.metadata.${key}`;
const ATTR_RPC_CONNECT_RPC_RESPONSE_METADATA = (key) => `rpc.connect_rpc.response.metadata.${key}`;
const ATTR_RPC_GRPC_REQUEST_METADATA = (key) => `rpc.grpc.request.metadata.${key}`;
const ATTR_RPC_GRPC_RESPONSE_METADATA = (key) => `rpc.grpc.response.metadata.${key}`;
const ATTR_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';
const RPC_GRPC_STATUS_CODE_VALUE_OK = 0;
const RPC_GRPC_STATUS_CODE_VALUE_CANCELLED = 1;
const RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN = 2;
const RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT = 3;
const RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED = 4;
const RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND = 5;
const RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS = 6;
const RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED = 7;
const RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED = 8;
const RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION = 9;
const RPC_GRPC_STATUS_CODE_VALUE_ABORTED = 10;
const RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE = 11;
const RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED = 12;
const RPC_GRPC_STATUS_CODE_VALUE_INTERNAL = 13;
const RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE = 14;
const RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS = 15;
const RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED = 16;
const ATTR_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';
const ATTR_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';
const ATTR_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';
const ATTR_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';
const ATTR_RPC_MESSAGE_COMPRESSED_SIZE = 'rpc.message.compressed_size';
const ATTR_RPC_MESSAGE_ID = 'rpc.message.id';
const ATTR_RPC_MESSAGE_TYPE = 'rpc.message.type';
const RPC_MESSAGE_TYPE_VALUE_RECEIVED = "RECEIVED";
const RPC_MESSAGE_TYPE_VALUE_SENT = "SENT";
const ATTR_RPC_MESSAGE_UNCOMPRESSED_SIZE = 'rpc.message.uncompressed_size';
const ATTR_RPC_METHOD = 'rpc.method';
const ATTR_RPC_SERVICE = 'rpc.service';
const ATTR_RPC_SYSTEM = 'rpc.system';
const RPC_SYSTEM_VALUE_APACHE_DUBBO = "apache_dubbo";
const RPC_SYSTEM_VALUE_CONNECT_RPC = "connect_rpc";
const RPC_SYSTEM_VALUE_DOTNET_WCF = "dotnet_wcf";
const RPC_SYSTEM_VALUE_GRPC = "grpc";
const RPC_SYSTEM_VALUE_JAVA_RMI = "java_rmi";
const ATTR_SERVICE_INSTANCE_ID = 'service.instance.id';
const ATTR_SERVICE_NAMESPACE = 'service.namespace';
const ATTR_SESSION_ID = 'session.id';
const ATTR_SESSION_PREVIOUS_ID = 'session.previous_id';
const ATTR_SOURCE_ADDRESS = 'source.address';
const ATTR_SOURCE_PORT = 'source.port';
const ATTR_STATE = 'state';
const STATE_VALUE_IDLE = "idle";
const STATE_VALUE_USED = "used";
const ATTR_SYSTEM_CPU_LOGICAL_NUMBER = 'system.cpu.logical_number';
const ATTR_SYSTEM_CPU_STATE = 'system.cpu.state';
const SYSTEM_CPU_STATE_VALUE_IDLE = "idle";
const SYSTEM_CPU_STATE_VALUE_INTERRUPT = "interrupt";
const SYSTEM_CPU_STATE_VALUE_IOWAIT = "iowait";
const SYSTEM_CPU_STATE_VALUE_NICE = "nice";
const SYSTEM_CPU_STATE_VALUE_STEAL = "steal";
const SYSTEM_CPU_STATE_VALUE_SYSTEM = "system";
const SYSTEM_CPU_STATE_VALUE_USER = "user";
const ATTR_SYSTEM_DEVICE = 'system.device';
const ATTR_SYSTEM_FILESYSTEM_MODE = 'system.filesystem.mode';
const ATTR_SYSTEM_FILESYSTEM_MOUNTPOINT = 'system.filesystem.mountpoint';
const ATTR_SYSTEM_FILESYSTEM_STATE = 'system.filesystem.state';
const SYSTEM_FILESYSTEM_STATE_VALUE_FREE = "free";
const SYSTEM_FILESYSTEM_STATE_VALUE_RESERVED = "reserved";
const SYSTEM_FILESYSTEM_STATE_VALUE_USED = "used";
const ATTR_SYSTEM_FILESYSTEM_TYPE = 'system.filesystem.type';
const SYSTEM_FILESYSTEM_TYPE_VALUE_EXFAT = "exfat";
const SYSTEM_FILESYSTEM_TYPE_VALUE_EXT4 = "ext4";
const SYSTEM_FILESYSTEM_TYPE_VALUE_FAT32 = "fat32";
const SYSTEM_FILESYSTEM_TYPE_VALUE_HFSPLUS = "hfsplus";
const SYSTEM_FILESYSTEM_TYPE_VALUE_NTFS = "ntfs";
const SYSTEM_FILESYSTEM_TYPE_VALUE_REFS = "refs";
const ATTR_SYSTEM_MEMORY_STATE = 'system.memory.state';
const SYSTEM_MEMORY_STATE_VALUE_BUFFERS = "buffers";
const SYSTEM_MEMORY_STATE_VALUE_CACHED = "cached";
const SYSTEM_MEMORY_STATE_VALUE_FREE = "free";
const SYSTEM_MEMORY_STATE_VALUE_SHARED = "shared";
const SYSTEM_MEMORY_STATE_VALUE_USED = "used";
const ATTR_SYSTEM_NETWORK_STATE = 'system.network.state';
const SYSTEM_NETWORK_STATE_VALUE_CLOSE = "close";
const SYSTEM_NETWORK_STATE_VALUE_CLOSE_WAIT = "close_wait";
const SYSTEM_NETWORK_STATE_VALUE_CLOSING = "closing";
const SYSTEM_NETWORK_STATE_VALUE_DELETE = "delete";
const SYSTEM_NETWORK_STATE_VALUE_ESTABLISHED = "established";
const SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_1 = "fin_wait_1";
const SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_2 = "fin_wait_2";
const SYSTEM_NETWORK_STATE_VALUE_LAST_ACK = "last_ack";
const SYSTEM_NETWORK_STATE_VALUE_LISTEN = "listen";
const SYSTEM_NETWORK_STATE_VALUE_SYN_RECV = "syn_recv";
const SYSTEM_NETWORK_STATE_VALUE_SYN_SENT = "syn_sent";
const SYSTEM_NETWORK_STATE_VALUE_TIME_WAIT = "time_wait";
const ATTR_SYSTEM_PAGING_DIRECTION = 'system.paging.direction';
const SYSTEM_PAGING_DIRECTION_VALUE_IN = "in";
const SYSTEM_PAGING_DIRECTION_VALUE_OUT = "out";
const ATTR_SYSTEM_PAGING_STATE = 'system.paging.state';
const SYSTEM_PAGING_STATE_VALUE_FREE = "free";
const SYSTEM_PAGING_STATE_VALUE_USED = "used";
const ATTR_SYSTEM_PAGING_TYPE = 'system.paging.type';
const SYSTEM_PAGING_TYPE_VALUE_MAJOR = "major";
const SYSTEM_PAGING_TYPE_VALUE_MINOR = "minor";
const ATTR_SYSTEM_PROCESS_STATUS = 'system.process.status';
const SYSTEM_PROCESS_STATUS_VALUE_DEFUNCT = "defunct";
const SYSTEM_PROCESS_STATUS_VALUE_RUNNING = "running";
const SYSTEM_PROCESS_STATUS_VALUE_SLEEPING = "sleeping";
const SYSTEM_PROCESS_STATUS_VALUE_STOPPED = "stopped";
const ATTR_SYSTEM_PROCESSES_STATUS = 'system.processes.status';
const SYSTEM_PROCESSES_STATUS_VALUE_DEFUNCT = "defunct";
const SYSTEM_PROCESSES_STATUS_VALUE_RUNNING = "running";
const SYSTEM_PROCESSES_STATUS_VALUE_SLEEPING = "sleeping";
const SYSTEM_PROCESSES_STATUS_VALUE_STOPPED = "stopped";
const ATTR_TELEMETRY_DISTRO_NAME = 'telemetry.distro.name';
const ATTR_TELEMETRY_DISTRO_VERSION = 'telemetry.distro.version';
const ATTR_TEST_CASE_NAME = 'test.case.name';
const ATTR_TEST_CASE_RESULT_STATUS = 'test.case.result.status';
const TEST_CASE_RESULT_STATUS_VALUE_FAIL = "fail";
const TEST_CASE_RESULT_STATUS_VALUE_PASS = "pass";
const ATTR_TEST_SUITE_NAME = 'test.suite.name';
const ATTR_TEST_SUITE_RUN_STATUS = 'test.suite.run.status';
const TEST_SUITE_RUN_STATUS_VALUE_ABORTED = "aborted";
const TEST_SUITE_RUN_STATUS_VALUE_FAILURE = "failure";
const TEST_SUITE_RUN_STATUS_VALUE_IN_PROGRESS = "in_progress";
const TEST_SUITE_RUN_STATUS_VALUE_SKIPPED = "skipped";
const TEST_SUITE_RUN_STATUS_VALUE_SUCCESS = "success";
const TEST_SUITE_RUN_STATUS_VALUE_TIMED_OUT = "timed_out";
const ATTR_THREAD_ID = 'thread.id';
const ATTR_THREAD_NAME = 'thread.name';
const ATTR_TLS_CIPHER = 'tls.cipher';
const ATTR_TLS_CLIENT_CERTIFICATE = 'tls.client.certificate';
const ATTR_TLS_CLIENT_CERTIFICATE_CHAIN = 'tls.client.certificate_chain';
const ATTR_TLS_CLIENT_HASH_MD5 = 'tls.client.hash.md5';
const ATTR_TLS_CLIENT_HASH_SHA1 = 'tls.client.hash.sha1';
const ATTR_TLS_CLIENT_HASH_SHA256 = 'tls.client.hash.sha256';
const ATTR_TLS_CLIENT_ISSUER = 'tls.client.issuer';
const ATTR_TLS_CLIENT_JA3 = 'tls.client.ja3';
const ATTR_TLS_CLIENT_NOT_AFTER = 'tls.client.not_after';
const ATTR_TLS_CLIENT_NOT_BEFORE = 'tls.client.not_before';
const ATTR_TLS_CLIENT_SERVER_NAME = 'tls.client.server_name';
const ATTR_TLS_CLIENT_SUBJECT = 'tls.client.subject';
const ATTR_TLS_CLIENT_SUPPORTED_CIPHERS = 'tls.client.supported_ciphers';
const ATTR_TLS_CURVE = 'tls.curve';
const ATTR_TLS_ESTABLISHED = 'tls.established';
const ATTR_TLS_NEXT_PROTOCOL = 'tls.next_protocol';
const ATTR_TLS_PROTOCOL_NAME = 'tls.protocol.name';
const TLS_PROTOCOL_NAME_VALUE_SSL = "ssl";
const TLS_PROTOCOL_NAME_VALUE_TLS = "tls";
const ATTR_TLS_PROTOCOL_VERSION = 'tls.protocol.version';
const ATTR_TLS_RESUMED = 'tls.resumed';
const ATTR_TLS_SERVER_CERTIFICATE = 'tls.server.certificate';
const ATTR_TLS_SERVER_CERTIFICATE_CHAIN = 'tls.server.certificate_chain';
const ATTR_TLS_SERVER_HASH_MD5 = 'tls.server.hash.md5';
const ATTR_TLS_SERVER_HASH_SHA1 = 'tls.server.hash.sha1';
const ATTR_TLS_SERVER_HASH_SHA256 = 'tls.server.hash.sha256';
const ATTR_TLS_SERVER_ISSUER = 'tls.server.issuer';
const ATTR_TLS_SERVER_JA3S = 'tls.server.ja3s';
const ATTR_TLS_SERVER_NOT_AFTER = 'tls.server.not_after';
const ATTR_TLS_SERVER_NOT_BEFORE = 'tls.server.not_before';
const ATTR_TLS_SERVER_SUBJECT = 'tls.server.subject';
const ATTR_URL_DOMAIN = 'url.domain';
const ATTR_URL_EXTENSION = 'url.extension';
const ATTR_URL_ORIGINAL = 'url.original';
const ATTR_URL_PORT = 'url.port';
const ATTR_URL_REGISTERED_DOMAIN = 'url.registered_domain';
const ATTR_URL_SUBDOMAIN = 'url.subdomain';
const ATTR_URL_TEMPLATE = 'url.template';
const ATTR_URL_TOP_LEVEL_DOMAIN = 'url.top_level_domain';
const ATTR_USER_EMAIL = 'user.email';
const ATTR_USER_FULL_NAME = 'user.full_name';
const ATTR_USER_HASH = 'user.hash';
const ATTR_USER_ID = 'user.id';
const ATTR_USER_NAME = 'user.name';
const ATTR_USER_ROLES = 'user.roles';
const ATTR_USER_AGENT_NAME = 'user_agent.name';
const ATTR_USER_AGENT_VERSION = 'user_agent.version';
const ATTR_V8JS_GC_TYPE = 'v8js.gc.type';
const V8JS_GC_TYPE_VALUE_INCREMENTAL = "incremental";
const V8JS_GC_TYPE_VALUE_MAJOR = "major";
const V8JS_GC_TYPE_VALUE_MINOR = "minor";
const V8JS_GC_TYPE_VALUE_WEAKCB = "weakcb";
const ATTR_V8JS_HEAP_SPACE_NAME = 'v8js.heap.space.name';
const V8JS_HEAP_SPACE_NAME_VALUE_CODE_SPACE = "code_space";
const V8JS_HEAP_SPACE_NAME_VALUE_LARGE_OBJECT_SPACE = "large_object_space";
const V8JS_HEAP_SPACE_NAME_VALUE_MAP_SPACE = "map_space";
const V8JS_HEAP_SPACE_NAME_VALUE_NEW_SPACE = "new_space";
const V8JS_HEAP_SPACE_NAME_VALUE_OLD_SPACE = "old_space";
const ATTR_VCS_REPOSITORY_CHANGE_ID = 'vcs.repository.change.id';
const ATTR_VCS_REPOSITORY_CHANGE_TITLE = 'vcs.repository.change.title';
const ATTR_VCS_REPOSITORY_REF_NAME = 'vcs.repository.ref.name';
const ATTR_VCS_REPOSITORY_REF_REVISION = 'vcs.repository.ref.revision';
const ATTR_VCS_REPOSITORY_REF_TYPE = 'vcs.repository.ref.type';
const VCS_REPOSITORY_REF_TYPE_VALUE_BRANCH = "branch";
const VCS_REPOSITORY_REF_TYPE_VALUE_TAG = "tag";
const ATTR_VCS_REPOSITORY_URL_FULL = 'vcs.repository.url.full';
const ATTR_WEBENGINE_DESCRIPTION = 'webengine.description';
const ATTR_WEBENGINE_NAME = 'webengine.name';
const ATTR_WEBENGINE_VERSION = 'webengine.version';

const METRIC_CONTAINER_CPU_TIME = 'container.cpu.time';
const METRIC_CONTAINER_CPU_USAGE = 'container.cpu.usage';
const METRIC_CONTAINER_DISK_IO = 'container.disk.io';
const METRIC_CONTAINER_MEMORY_USAGE = 'container.memory.usage';
const METRIC_CONTAINER_NETWORK_IO = 'container.network.io';
const METRIC_DB_CLIENT_CONNECTION_COUNT = 'db.client.connection.count';
const METRIC_DB_CLIENT_CONNECTION_CREATE_TIME = 'db.client.connection.create_time';
const METRIC_DB_CLIENT_CONNECTION_IDLE_MAX = 'db.client.connection.idle.max';
const METRIC_DB_CLIENT_CONNECTION_IDLE_MIN = 'db.client.connection.idle.min';
const METRIC_DB_CLIENT_CONNECTION_MAX = 'db.client.connection.max';
const METRIC_DB_CLIENT_CONNECTION_PENDING_REQUESTS = 'db.client.connection.pending_requests';
const METRIC_DB_CLIENT_CONNECTION_TIMEOUTS = 'db.client.connection.timeouts';
const METRIC_DB_CLIENT_CONNECTION_USE_TIME = 'db.client.connection.use_time';
const METRIC_DB_CLIENT_CONNECTION_WAIT_TIME = 'db.client.connection.wait_time';
const METRIC_DB_CLIENT_CONNECTIONS_CREATE_TIME = 'db.client.connections.create_time';
const METRIC_DB_CLIENT_CONNECTIONS_IDLE_MAX = 'db.client.connections.idle.max';
const METRIC_DB_CLIENT_CONNECTIONS_IDLE_MIN = 'db.client.connections.idle.min';
const METRIC_DB_CLIENT_CONNECTIONS_MAX = 'db.client.connections.max';
const METRIC_DB_CLIENT_CONNECTIONS_PENDING_REQUESTS = 'db.client.connections.pending_requests';
const METRIC_DB_CLIENT_CONNECTIONS_TIMEOUTS = 'db.client.connections.timeouts';
const METRIC_DB_CLIENT_CONNECTIONS_USAGE = 'db.client.connections.usage';
const METRIC_DB_CLIENT_CONNECTIONS_USE_TIME = 'db.client.connections.use_time';
const METRIC_DB_CLIENT_CONNECTIONS_WAIT_TIME = 'db.client.connections.wait_time';
const METRIC_DB_CLIENT_OPERATION_DURATION = 'db.client.operation.duration';
const METRIC_DNS_LOOKUP_DURATION = 'dns.lookup.duration';
const METRIC_DOTNET_ASSEMBLY_COUNT = 'dotnet.assembly.count';
const METRIC_DOTNET_EXCEPTIONS = 'dotnet.exceptions';
const METRIC_DOTNET_GC_COLLECTIONS = 'dotnet.gc.collections';
const METRIC_DOTNET_GC_HEAP_TOTAL_ALLOCATED = 'dotnet.gc.heap.total_allocated';
const METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_FRAGMENTATION_SIZE = 'dotnet.gc.last_collection.heap.fragmentation.size';
const METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_SIZE = 'dotnet.gc.last_collection.heap.size';
const METRIC_DOTNET_GC_LAST_COLLECTION_MEMORY_COMMITTED_SIZE = 'dotnet.gc.last_collection.memory.committed_size';
const METRIC_DOTNET_GC_PAUSE_TIME = 'dotnet.gc.pause.time';
const METRIC_DOTNET_JIT_COMPILATION_TIME = 'dotnet.jit.compilation.time';
const METRIC_DOTNET_JIT_COMPILED_IL_SIZE = 'dotnet.jit.compiled_il.size';
const METRIC_DOTNET_JIT_COMPILED_METHODS = 'dotnet.jit.compiled_methods';
const METRIC_DOTNET_MONITOR_LOCK_CONTENTIONS = 'dotnet.monitor.lock_contentions';
const METRIC_DOTNET_PROCESS_CPU_COUNT = 'dotnet.process.cpu.count';
const METRIC_DOTNET_PROCESS_CPU_TIME = 'dotnet.process.cpu.time';
const METRIC_DOTNET_PROCESS_MEMORY_WORKING_SET = 'dotnet.process.memory.working_set';
const METRIC_DOTNET_THREAD_POOL_QUEUE_LENGTH = 'dotnet.thread_pool.queue.length';
const METRIC_DOTNET_THREAD_POOL_THREAD_COUNT = 'dotnet.thread_pool.thread.count';
const METRIC_DOTNET_THREAD_POOL_WORK_ITEM_COUNT = 'dotnet.thread_pool.work_item.count';
const METRIC_DOTNET_TIMER_COUNT = 'dotnet.timer.count';
const METRIC_FAAS_COLDSTARTS = 'faas.coldstarts';
const METRIC_FAAS_CPU_USAGE = 'faas.cpu_usage';
const METRIC_FAAS_ERRORS = 'faas.errors';
const METRIC_FAAS_INIT_DURATION = 'faas.init_duration';
const METRIC_FAAS_INVOCATIONS = 'faas.invocations';
const METRIC_FAAS_INVOKE_DURATION = 'faas.invoke_duration';
const METRIC_FAAS_MEM_USAGE = 'faas.mem_usage';
const METRIC_FAAS_NET_IO = 'faas.net_io';
const METRIC_FAAS_TIMEOUTS = 'faas.timeouts';
const METRIC_GEN_AI_CLIENT_OPERATION_DURATION = 'gen_ai.client.operation.duration';
const METRIC_GEN_AI_CLIENT_TOKEN_USAGE = 'gen_ai.client.token.usage';
const METRIC_GEN_AI_SERVER_REQUEST_DURATION = 'gen_ai.server.request.duration';
const METRIC_GEN_AI_SERVER_TIME_PER_OUTPUT_TOKEN = 'gen_ai.server.time_per_output_token';
const METRIC_GEN_AI_SERVER_TIME_TO_FIRST_TOKEN = 'gen_ai.server.time_to_first_token';
const METRIC_GO_CONFIG_GOGC = 'go.config.gogc';
const METRIC_GO_GOROUTINE_COUNT = 'go.goroutine.count';
const METRIC_GO_MEMORY_ALLOCATED = 'go.memory.allocated';
const METRIC_GO_MEMORY_ALLOCATIONS = 'go.memory.allocations';
const METRIC_GO_MEMORY_GC_GOAL = 'go.memory.gc.goal';
const METRIC_GO_MEMORY_LIMIT = 'go.memory.limit';
const METRIC_GO_MEMORY_USED = 'go.memory.used';
const METRIC_GO_PROCESSOR_LIMIT = 'go.processor.limit';
const METRIC_GO_SCHEDULE_DURATION = 'go.schedule.duration';
const METRIC_HTTP_CLIENT_ACTIVE_REQUESTS = 'http.client.active_requests';
const METRIC_HTTP_CLIENT_CONNECTION_DURATION = 'http.client.connection.duration';
const METRIC_HTTP_CLIENT_OPEN_CONNECTIONS = 'http.client.open_connections';
const METRIC_HTTP_CLIENT_REQUEST_BODY_SIZE = 'http.client.request.body.size';
const METRIC_HTTP_CLIENT_RESPONSE_BODY_SIZE = 'http.client.response.body.size';
const METRIC_HTTP_SERVER_ACTIVE_REQUESTS = 'http.server.active_requests';
const METRIC_HTTP_SERVER_REQUEST_BODY_SIZE = 'http.server.request.body.size';
const METRIC_HTTP_SERVER_RESPONSE_BODY_SIZE = 'http.server.response.body.size';
const METRIC_HW_ENERGY = 'hw.energy';
const METRIC_HW_ERRORS = 'hw.errors';
const METRIC_HW_POWER = 'hw.power';
const METRIC_HW_STATUS = 'hw.status';
const METRIC_JVM_BUFFER_COUNT = 'jvm.buffer.count';
const METRIC_JVM_BUFFER_MEMORY_LIMIT = 'jvm.buffer.memory.limit';
const METRIC_JVM_BUFFER_MEMORY_USAGE = 'jvm.buffer.memory.usage';
const METRIC_JVM_BUFFER_MEMORY_USED = 'jvm.buffer.memory.used';
const METRIC_JVM_MEMORY_INIT = 'jvm.memory.init';
const METRIC_JVM_SYSTEM_CPU_LOAD_1M = 'jvm.system.cpu.load_1m';
const METRIC_JVM_SYSTEM_CPU_UTILIZATION = 'jvm.system.cpu.utilization';
const METRIC_K8S_NODE_CPU_TIME = 'k8s.node.cpu.time';
const METRIC_K8S_NODE_CPU_USAGE = 'k8s.node.cpu.usage';
const METRIC_K8S_NODE_MEMORY_USAGE = 'k8s.node.memory.usage';
const METRIC_K8S_POD_CPU_TIME = 'k8s.pod.cpu.time';
const METRIC_K8S_POD_CPU_USAGE = 'k8s.pod.cpu.usage';
const METRIC_K8S_POD_MEMORY_USAGE = 'k8s.pod.memory.usage';
const METRIC_MESSAGING_CLIENT_CONSUMED_MESSAGES = 'messaging.client.consumed.messages';
const METRIC_MESSAGING_CLIENT_OPERATION_DURATION = 'messaging.client.operation.duration';
const METRIC_MESSAGING_CLIENT_PUBLISHED_MESSAGES = 'messaging.client.published.messages';
const METRIC_MESSAGING_CLIENT_SENT_MESSAGES = 'messaging.client.sent.messages';
const METRIC_MESSAGING_PROCESS_DURATION = 'messaging.process.duration';
const METRIC_MESSAGING_PROCESS_MESSAGES = 'messaging.process.messages';
const METRIC_MESSAGING_PUBLISH_DURATION = 'messaging.publish.duration';
const METRIC_MESSAGING_PUBLISH_MESSAGES = 'messaging.publish.messages';
const METRIC_MESSAGING_RECEIVE_DURATION = 'messaging.receive.duration';
const METRIC_MESSAGING_RECEIVE_MESSAGES = 'messaging.receive.messages';
const METRIC_NODEJS_EVENTLOOP_DELAY_MAX = 'nodejs.eventloop.delay.max';
const METRIC_NODEJS_EVENTLOOP_DELAY_MEAN = 'nodejs.eventloop.delay.mean';
const METRIC_NODEJS_EVENTLOOP_DELAY_MIN = 'nodejs.eventloop.delay.min';
const METRIC_NODEJS_EVENTLOOP_DELAY_P50 = 'nodejs.eventloop.delay.p50';
const METRIC_NODEJS_EVENTLOOP_DELAY_P90 = 'nodejs.eventloop.delay.p90';
const METRIC_NODEJS_EVENTLOOP_DELAY_P99 = 'nodejs.eventloop.delay.p99';
const METRIC_NODEJS_EVENTLOOP_DELAY_STDDEV = 'nodejs.eventloop.delay.stddev';
const METRIC_NODEJS_EVENTLOOP_TIME = 'nodejs.eventloop.time';
const METRIC_NODEJS_EVENTLOOP_UTILIZATION = 'nodejs.eventloop.utilization';
const METRIC_PROCESS_CONTEXT_SWITCHES = 'process.context_switches';
const METRIC_PROCESS_CPU_TIME = 'process.cpu.time';
const METRIC_PROCESS_CPU_UTILIZATION = 'process.cpu.utilization';
const METRIC_PROCESS_DISK_IO = 'process.disk.io';
const METRIC_PROCESS_MEMORY_USAGE = 'process.memory.usage';
const METRIC_PROCESS_MEMORY_VIRTUAL = 'process.memory.virtual';
const METRIC_PROCESS_NETWORK_IO = 'process.network.io';
const METRIC_PROCESS_OPEN_FILE_DESCRIPTOR_COUNT = 'process.open_file_descriptor.count';
const METRIC_PROCESS_PAGING_FAULTS = 'process.paging.faults';
const METRIC_PROCESS_THREAD_COUNT = 'process.thread.count';
const METRIC_PROCESS_UPTIME = 'process.uptime';
const METRIC_RPC_CLIENT_DURATION = 'rpc.client.duration';
const METRIC_RPC_CLIENT_REQUEST_SIZE = 'rpc.client.request.size';
const METRIC_RPC_CLIENT_REQUESTS_PER_RPC = 'rpc.client.requests_per_rpc';
const METRIC_RPC_CLIENT_RESPONSE_SIZE = 'rpc.client.response.size';
const METRIC_RPC_CLIENT_RESPONSES_PER_RPC = 'rpc.client.responses_per_rpc';
const METRIC_RPC_SERVER_DURATION = 'rpc.server.duration';
const METRIC_RPC_SERVER_REQUEST_SIZE = 'rpc.server.request.size';
const METRIC_RPC_SERVER_REQUESTS_PER_RPC = 'rpc.server.requests_per_rpc';
const METRIC_RPC_SERVER_RESPONSE_SIZE = 'rpc.server.response.size';
const METRIC_RPC_SERVER_RESPONSES_PER_RPC = 'rpc.server.responses_per_rpc';
const METRIC_SYSTEM_CPU_FREQUENCY = 'system.cpu.frequency';
const METRIC_SYSTEM_CPU_LOGICAL_COUNT = 'system.cpu.logical.count';
const METRIC_SYSTEM_CPU_PHYSICAL_COUNT = 'system.cpu.physical.count';
const METRIC_SYSTEM_CPU_TIME = 'system.cpu.time';
const METRIC_SYSTEM_CPU_UTILIZATION = 'system.cpu.utilization';
const METRIC_SYSTEM_DISK_IO = 'system.disk.io';
const METRIC_SYSTEM_DISK_IO_TIME = 'system.disk.io_time';
const METRIC_SYSTEM_DISK_LIMIT = 'system.disk.limit';
const METRIC_SYSTEM_DISK_MERGED = 'system.disk.merged';
const METRIC_SYSTEM_DISK_OPERATION_TIME = 'system.disk.operation_time';
const METRIC_SYSTEM_DISK_OPERATIONS = 'system.disk.operations';
const METRIC_SYSTEM_FILESYSTEM_LIMIT = 'system.filesystem.limit';
const METRIC_SYSTEM_FILESYSTEM_USAGE = 'system.filesystem.usage';
const METRIC_SYSTEM_FILESYSTEM_UTILIZATION = 'system.filesystem.utilization';
const METRIC_SYSTEM_LINUX_MEMORY_AVAILABLE = 'system.linux.memory.available';
const METRIC_SYSTEM_LINUX_MEMORY_SLAB_USAGE = 'system.linux.memory.slab.usage';
const METRIC_SYSTEM_MEMORY_LIMIT = 'system.memory.limit';
const METRIC_SYSTEM_MEMORY_SHARED = 'system.memory.shared';
const METRIC_SYSTEM_MEMORY_USAGE = 'system.memory.usage';
const METRIC_SYSTEM_MEMORY_UTILIZATION = 'system.memory.utilization';
const METRIC_SYSTEM_NETWORK_CONNECTIONS = 'system.network.connections';
const METRIC_SYSTEM_NETWORK_DROPPED = 'system.network.dropped';
const METRIC_SYSTEM_NETWORK_ERRORS = 'system.network.errors';
const METRIC_SYSTEM_NETWORK_IO = 'system.network.io';
const METRIC_SYSTEM_NETWORK_PACKETS = 'system.network.packets';
const METRIC_SYSTEM_PAGING_FAULTS = 'system.paging.faults';
const METRIC_SYSTEM_PAGING_OPERATIONS = 'system.paging.operations';
const METRIC_SYSTEM_PAGING_USAGE = 'system.paging.usage';
const METRIC_SYSTEM_PAGING_UTILIZATION = 'system.paging.utilization';
const METRIC_SYSTEM_PROCESS_COUNT = 'system.process.count';
const METRIC_SYSTEM_PROCESS_CREATED = 'system.process.created';
const METRIC_V8JS_GC_DURATION = 'v8js.gc.duration';
const METRIC_V8JS_HEAP_SPACE_AVAILABLE_SIZE = 'v8js.heap.space.available_size';
const METRIC_V8JS_HEAP_SPACE_PHYSICAL_SIZE = 'v8js.heap.space.physical_size';
const METRIC_V8JS_MEMORY_HEAP_LIMIT = 'v8js.memory.heap.limit';
const METRIC_V8JS_MEMORY_HEAP_USED = 'v8js.memory.heap.used';

export { ANDROID_STATE_VALUE_BACKGROUND, ANDROID_STATE_VALUE_CREATED, ANDROID_STATE_VALUE_FOREGROUND, ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED, ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED, ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED, ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED, ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED, ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER, ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER, ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED, ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE, ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS, ATTR_ANDROID_OS_API_LEVEL, ATTR_ANDROID_STATE, ATTR_ARTIFACT_ATTESTATION_FILENAME, ATTR_ARTIFACT_ATTESTATION_HASH, ATTR_ARTIFACT_ATTESTATION_ID, ATTR_ARTIFACT_FILENAME, ATTR_ARTIFACT_HASH, ATTR_ARTIFACT_PURL, ATTR_ARTIFACT_VERSION, ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT, ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE, ATTR_ASPNETCORE_RATE_LIMITING_POLICY, ATTR_ASPNETCORE_RATE_LIMITING_RESULT, ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED, ATTR_ASPNETCORE_ROUTING_IS_FALLBACK, ATTR_ASPNETCORE_ROUTING_MATCH_STATUS, ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET, ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS, ATTR_AWS_DYNAMODB_CONSISTENT_READ, ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY, ATTR_AWS_DYNAMODB_COUNT, ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE, ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES, ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES, ATTR_AWS_DYNAMODB_INDEX_NAME, ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS, ATTR_AWS_DYNAMODB_LIMIT, ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES, ATTR_AWS_DYNAMODB_PROJECTION, ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY, ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY, ATTR_AWS_DYNAMODB_SCANNED_COUNT, ATTR_AWS_DYNAMODB_SCAN_FORWARD, ATTR_AWS_DYNAMODB_SEGMENT, ATTR_AWS_DYNAMODB_SELECT, ATTR_AWS_DYNAMODB_TABLE_COUNT, ATTR_AWS_DYNAMODB_TABLE_NAMES, ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS, ATTR_AWS_ECS_CLUSTER_ARN, ATTR_AWS_ECS_CONTAINER_ARN, ATTR_AWS_ECS_LAUNCHTYPE, ATTR_AWS_ECS_TASK_ARN, ATTR_AWS_ECS_TASK_FAMILY, ATTR_AWS_ECS_TASK_ID, ATTR_AWS_ECS_TASK_REVISION, ATTR_AWS_EKS_CLUSTER_ARN, ATTR_AWS_LAMBDA_INVOKED_ARN, ATTR_AWS_LOG_GROUP_ARNS, ATTR_AWS_LOG_GROUP_NAMES, ATTR_AWS_LOG_STREAM_ARNS, ATTR_AWS_LOG_STREAM_NAMES, ATTR_AWS_REQUEST_ID, ATTR_AWS_S3_BUCKET, ATTR_AWS_S3_COPY_SOURCE, ATTR_AWS_S3_DELETE, ATTR_AWS_S3_KEY, ATTR_AWS_S3_PART_NUMBER, ATTR_AWS_S3_UPLOAD_ID, ATTR_AZ_NAMESPACE, ATTR_AZ_SERVICE_REQUEST_ID, ATTR_BROWSER_BRANDS, ATTR_BROWSER_LANGUAGE, ATTR_BROWSER_MOBILE, ATTR_BROWSER_PLATFORM, ATTR_CICD_PIPELINE_NAME, ATTR_CICD_PIPELINE_RUN_ID, ATTR_CICD_PIPELINE_TASK_NAME, ATTR_CICD_PIPELINE_TASK_RUN_ID, ATTR_CICD_PIPELINE_TASK_RUN_URL_FULL, ATTR_CICD_PIPELINE_TASK_TYPE, ATTR_CLIENT_ADDRESS, ATTR_CLIENT_PORT, ATTR_CLOUDEVENTS_EVENT_ID, ATTR_CLOUDEVENTS_EVENT_SOURCE, ATTR_CLOUDEVENTS_EVENT_SPEC_VERSION, ATTR_CLOUDEVENTS_EVENT_SUBJECT, ATTR_CLOUDEVENTS_EVENT_TYPE, ATTR_CLOUDFOUNDRY_APP_ID, ATTR_CLOUDFOUNDRY_APP_INSTANCE_ID, ATTR_CLOUDFOUNDRY_APP_NAME, ATTR_CLOUDFOUNDRY_ORG_ID, ATTR_CLOUDFOUNDRY_ORG_NAME, ATTR_CLOUDFOUNDRY_PROCESS_ID, ATTR_CLOUDFOUNDRY_PROCESS_TYPE, ATTR_CLOUDFOUNDRY_SPACE_ID, ATTR_CLOUDFOUNDRY_SPACE_NAME, ATTR_CLOUDFOUNDRY_SYSTEM_ID, ATTR_CLOUDFOUNDRY_SYSTEM_INSTANCE_ID, ATTR_CLOUD_ACCOUNT_ID, ATTR_CLOUD_AVAILABILITY_ZONE, ATTR_CLOUD_PLATFORM, ATTR_CLOUD_PROVIDER, ATTR_CLOUD_REGION, ATTR_CLOUD_RESOURCE_ID, ATTR_CODE_COLUMN, ATTR_CODE_FILEPATH, ATTR_CODE_FUNCTION, ATTR_CODE_LINENO, ATTR_CODE_NAMESPACE, ATTR_CODE_STACKTRACE, ATTR_CONTAINER_COMMAND, ATTR_CONTAINER_COMMAND_ARGS, ATTR_CONTAINER_COMMAND_LINE, ATTR_CONTAINER_CPU_STATE, ATTR_CONTAINER_CSI_PLUGIN_NAME, ATTR_CONTAINER_CSI_VOLUME_ID, ATTR_CONTAINER_ID, ATTR_CONTAINER_IMAGE_ID, ATTR_CONTAINER_IMAGE_NAME, ATTR_CONTAINER_IMAGE_REPO_DIGESTS, ATTR_CONTAINER_IMAGE_TAGS, ATTR_CONTAINER_LABEL, ATTR_CONTAINER_LABELS, ATTR_CONTAINER_NAME, ATTR_CONTAINER_RUNTIME, ATTR_CPU_MODE, ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL, ATTR_DB_CASSANDRA_COORDINATOR_DC, ATTR_DB_CASSANDRA_COORDINATOR_ID, ATTR_DB_CASSANDRA_IDEMPOTENCE, ATTR_DB_CASSANDRA_PAGE_SIZE, ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT, ATTR_DB_CASSANDRA_TABLE, ATTR_DB_CLIENT_CONNECTIONS_POOL_NAME, ATTR_DB_CLIENT_CONNECTIONS_STATE, ATTR_DB_CLIENT_CONNECTION_POOL_NAME, ATTR_DB_CLIENT_CONNECTION_STATE, ATTR_DB_COLLECTION_NAME, ATTR_DB_CONNECTION_STRING, ATTR_DB_COSMOSDB_CLIENT_ID, ATTR_DB_COSMOSDB_CONNECTION_MODE, ATTR_DB_COSMOSDB_CONTAINER, ATTR_DB_COSMOSDB_OPERATION_TYPE, ATTR_DB_COSMOSDB_REQUEST_CHARGE, ATTR_DB_COSMOSDB_REQUEST_CONTENT_LENGTH, ATTR_DB_COSMOSDB_STATUS_CODE, ATTR_DB_COSMOSDB_SUB_STATUS_CODE, ATTR_DB_ELASTICSEARCH_CLUSTER_NAME, ATTR_DB_ELASTICSEARCH_NODE_NAME, ATTR_DB_ELASTICSEARCH_PATH_PARTS, ATTR_DB_INSTANCE_ID, ATTR_DB_JDBC_DRIVER_CLASSNAME, ATTR_DB_MONGODB_COLLECTION, ATTR_DB_MSSQL_INSTANCE_NAME, ATTR_DB_NAME, ATTR_DB_NAMESPACE, ATTR_DB_OPERATION, ATTR_DB_OPERATION_BATCH_SIZE, ATTR_DB_OPERATION_NAME, ATTR_DB_QUERY_PARAMETER, ATTR_DB_QUERY_TEXT, ATTR_DB_REDIS_DATABASE_INDEX, ATTR_DB_RESPONSE_STATUS_CODE, ATTR_DB_SQL_TABLE, ATTR_DB_STATEMENT, ATTR_DB_SYSTEM, ATTR_DB_USER, ATTR_DEPLOYMENT_ENVIRONMENT, ATTR_DEPLOYMENT_ENVIRONMENT_NAME, ATTR_DEPLOYMENT_ID, ATTR_DEPLOYMENT_NAME, ATTR_DEPLOYMENT_STATUS, ATTR_DESTINATION_ADDRESS, ATTR_DESTINATION_PORT, ATTR_DEVICE_ID, ATTR_DEVICE_MANUFACTURER, ATTR_DEVICE_MODEL_IDENTIFIER, ATTR_DEVICE_MODEL_NAME, ATTR_DISK_IO_DIRECTION, ATTR_DNS_QUESTION_NAME, ATTR_DOTNET_GC_HEAP_GENERATION, ATTR_ENDUSER_ID, ATTR_ENDUSER_ROLE, ATTR_ENDUSER_SCOPE, ATTR_ERROR_TYPE, ATTR_EVENT_NAME, ATTR_EXCEPTION_ESCAPED, ATTR_EXCEPTION_MESSAGE, ATTR_EXCEPTION_STACKTRACE, ATTR_EXCEPTION_TYPE, ATTR_FAAS_COLDSTART, ATTR_FAAS_CRON, ATTR_FAAS_DOCUMENT_COLLECTION, ATTR_FAAS_DOCUMENT_NAME, ATTR_FAAS_DOCUMENT_OPERATION, ATTR_FAAS_DOCUMENT_TIME, ATTR_FAAS_INSTANCE, ATTR_FAAS_INVOCATION_ID, ATTR_FAAS_INVOKED_NAME, ATTR_FAAS_INVOKED_PROVIDER, ATTR_FAAS_INVOKED_REGION, ATTR_FAAS_MAX_MEMORY, ATTR_FAAS_NAME, ATTR_FAAS_TIME, ATTR_FAAS_TRIGGER, ATTR_FAAS_VERSION, ATTR_FEATURE_FLAG_KEY, ATTR_FEATURE_FLAG_PROVIDER_NAME, ATTR_FEATURE_FLAG_VARIANT, ATTR_FILE_ACCESSED, ATTR_FILE_ATTRIBUTES, ATTR_FILE_CHANGED, ATTR_FILE_CREATED, ATTR_FILE_DIRECTORY, ATTR_FILE_EXTENSION, ATTR_FILE_FORK_NAME, ATTR_FILE_GROUP_ID, ATTR_FILE_GROUP_NAME, ATTR_FILE_INODE, ATTR_FILE_MODE, ATTR_FILE_MODIFIED, ATTR_FILE_NAME, ATTR_FILE_OWNER_ID, ATTR_FILE_OWNER_NAME, ATTR_FILE_PATH, ATTR_FILE_SIZE, ATTR_FILE_SYMBOLIC_LINK_TARGET_PATH, ATTR_GCP_CLIENT_SERVICE, ATTR_GCP_CLOUD_RUN_JOB_EXECUTION, ATTR_GCP_CLOUD_RUN_JOB_TASK_INDEX, ATTR_GCP_GCE_INSTANCE_HOSTNAME, ATTR_GCP_GCE_INSTANCE_NAME, ATTR_GEN_AI_COMPLETION, ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT, ATTR_GEN_AI_OPENAI_REQUEST_SEED, ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER, ATTR_GEN_AI_OPENAI_RESPONSE_SERVICE_TIER, ATTR_GEN_AI_OPERATION_NAME, ATTR_GEN_AI_PROMPT, ATTR_GEN_AI_REQUEST_FREQUENCY_PENALTY, ATTR_GEN_AI_REQUEST_MAX_TOKENS, ATTR_GEN_AI_REQUEST_MODEL, ATTR_GEN_AI_REQUEST_PRESENCE_PENALTY, ATTR_GEN_AI_REQUEST_STOP_SEQUENCES, ATTR_GEN_AI_REQUEST_TEMPERATURE, ATTR_GEN_AI_REQUEST_TOP_K, ATTR_GEN_AI_REQUEST_TOP_P, ATTR_GEN_AI_RESPONSE_FINISH_REASONS, ATTR_GEN_AI_RESPONSE_ID, ATTR_GEN_AI_RESPONSE_MODEL, ATTR_GEN_AI_SYSTEM, ATTR_GEN_AI_TOKEN_TYPE, ATTR_GEN_AI_USAGE_COMPLETION_TOKENS, ATTR_GEN_AI_USAGE_INPUT_TOKENS, ATTR_GEN_AI_USAGE_OUTPUT_TOKENS, ATTR_GEN_AI_USAGE_PROMPT_TOKENS, ATTR_GO_MEMORY_TYPE, ATTR_GRAPHQL_DOCUMENT, ATTR_GRAPHQL_OPERATION_NAME, ATTR_GRAPHQL_OPERATION_TYPE, ATTR_HEROKU_APP_ID, ATTR_HEROKU_RELEASE_COMMIT, ATTR_HEROKU_RELEASE_CREATION_TIMESTAMP, ATTR_HOST_ARCH, ATTR_HOST_CPU_CACHE_L2_SIZE, ATTR_HOST_CPU_FAMILY, ATTR_HOST_CPU_MODEL_ID, ATTR_HOST_CPU_MODEL_NAME, ATTR_HOST_CPU_STEPPING, ATTR_HOST_CPU_VENDOR_ID, ATTR_HOST_ID, ATTR_HOST_IMAGE_ID, ATTR_HOST_IMAGE_NAME, ATTR_HOST_IMAGE_VERSION, ATTR_HOST_IP, ATTR_HOST_MAC, ATTR_HOST_NAME, ATTR_HOST_TYPE, ATTR_HTTP_CLIENT_IP, ATTR_HTTP_CONNECTION_STATE, ATTR_HTTP_FLAVOR, ATTR_HTTP_HOST, ATTR_HTTP_METHOD, ATTR_HTTP_REQUEST_BODY_SIZE, ATTR_HTTP_REQUEST_CONTENT_LENGTH, ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, ATTR_HTTP_REQUEST_HEADER, ATTR_HTTP_REQUEST_METHOD, ATTR_HTTP_REQUEST_METHOD_ORIGINAL, ATTR_HTTP_REQUEST_RESEND_COUNT, ATTR_HTTP_REQUEST_SIZE, ATTR_HTTP_RESPONSE_BODY_SIZE, ATTR_HTTP_RESPONSE_CONTENT_LENGTH, ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, ATTR_HTTP_RESPONSE_HEADER, ATTR_HTTP_RESPONSE_SIZE, ATTR_HTTP_RESPONSE_STATUS_CODE, ATTR_HTTP_ROUTE, ATTR_HTTP_SCHEME, ATTR_HTTP_SERVER_NAME, ATTR_HTTP_STATUS_CODE, ATTR_HTTP_TARGET, ATTR_HTTP_URL, ATTR_HTTP_USER_AGENT, ATTR_HW_ID, ATTR_HW_NAME, ATTR_HW_PARENT, ATTR_HW_STATE, ATTR_HW_TYPE, ATTR_IOS_STATE, ATTR_JVM_BUFFER_POOL_NAME, ATTR_JVM_GC_ACTION, ATTR_JVM_GC_NAME, ATTR_JVM_MEMORY_POOL_NAME, ATTR_JVM_MEMORY_TYPE, ATTR_JVM_THREAD_DAEMON, ATTR_JVM_THREAD_STATE, ATTR_K8S_CLUSTER_NAME, ATTR_K8S_CLUSTER_UID, ATTR_K8S_CONTAINER_NAME, ATTR_K8S_CONTAINER_RESTART_COUNT, ATTR_K8S_CONTAINER_STATUS_LAST_TERMINATED_REASON, ATTR_K8S_CRONJOB_NAME, ATTR_K8S_CRONJOB_UID, ATTR_K8S_DAEMONSET_NAME, ATTR_K8S_DAEMONSET_UID, ATTR_K8S_DEPLOYMENT_NAME, ATTR_K8S_DEPLOYMENT_UID, ATTR_K8S_JOB_NAME, ATTR_K8S_JOB_UID, ATTR_K8S_NAMESPACE_NAME, ATTR_K8S_NODE_NAME, ATTR_K8S_NODE_UID, ATTR_K8S_POD_ANNOTATION, ATTR_K8S_POD_LABEL, ATTR_K8S_POD_LABELS, ATTR_K8S_POD_NAME, ATTR_K8S_POD_UID, ATTR_K8S_REPLICASET_NAME, ATTR_K8S_REPLICASET_UID, ATTR_K8S_STATEFULSET_NAME, ATTR_K8S_STATEFULSET_UID, ATTR_K8S_VOLUME_NAME, ATTR_K8S_VOLUME_TYPE, ATTR_LINUX_MEMORY_SLAB_STATE, ATTR_LOG_FILE_NAME, ATTR_LOG_FILE_NAME_RESOLVED, ATTR_LOG_FILE_PATH, ATTR_LOG_FILE_PATH_RESOLVED, ATTR_LOG_IOSTREAM, ATTR_LOG_RECORD_ORIGINAL, ATTR_LOG_RECORD_UID, ATTR_MESSAGE_COMPRESSED_SIZE, ATTR_MESSAGE_ID, ATTR_MESSAGE_TYPE, ATTR_MESSAGE_UNCOMPRESSED_SIZE, ATTR_MESSAGING_BATCH_MESSAGE_COUNT, ATTR_MESSAGING_CLIENT_ID, ATTR_MESSAGING_CONSUMER_GROUP_NAME, ATTR_MESSAGING_DESTINATION_ANONYMOUS, ATTR_MESSAGING_DESTINATION_NAME, ATTR_MESSAGING_DESTINATION_PARTITION_ID, ATTR_MESSAGING_DESTINATION_PUBLISH_ANONYMOUS, ATTR_MESSAGING_DESTINATION_PUBLISH_NAME, ATTR_MESSAGING_DESTINATION_SUBSCRIPTION_NAME, ATTR_MESSAGING_DESTINATION_TEMPLATE, ATTR_MESSAGING_DESTINATION_TEMPORARY, ATTR_MESSAGING_EVENTHUBS_CONSUMER_GROUP, ATTR_MESSAGING_EVENTHUBS_MESSAGE_ENQUEUED_TIME, ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_DEADLINE, ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_ID, ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_DELIVERY_ATTEMPT, ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ORDERING_KEY, ATTR_MESSAGING_KAFKA_CONSUMER_GROUP, ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION, ATTR_MESSAGING_KAFKA_MESSAGE_KEY, ATTR_MESSAGING_KAFKA_MESSAGE_OFFSET, ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE, ATTR_MESSAGING_KAFKA_OFFSET, ATTR_MESSAGING_MESSAGE_BODY_SIZE, ATTR_MESSAGING_MESSAGE_CONVERSATION_ID, ATTR_MESSAGING_MESSAGE_ENVELOPE_SIZE, ATTR_MESSAGING_MESSAGE_ID, ATTR_MESSAGING_OPERATION, ATTR_MESSAGING_OPERATION_NAME, ATTR_MESSAGING_OPERATION_TYPE, ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY, ATTR_MESSAGING_RABBITMQ_MESSAGE_DELIVERY_TAG, ATTR_MESSAGING_ROCKETMQ_CLIENT_GROUP, ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL, ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELAY_TIME_LEVEL, ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELIVERY_TIMESTAMP, ATTR_MESSAGING_ROCKETMQ_MESSAGE_GROUP, ATTR_MESSAGING_ROCKETMQ_MESSAGE_KEYS, ATTR_MESSAGING_ROCKETMQ_MESSAGE_TAG, ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE, ATTR_MESSAGING_ROCKETMQ_NAMESPACE, ATTR_MESSAGING_SERVICEBUS_DESTINATION_SUBSCRIPTION_NAME, ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS, ATTR_MESSAGING_SERVICEBUS_MESSAGE_DELIVERY_COUNT, ATTR_MESSAGING_SERVICEBUS_MESSAGE_ENQUEUED_TIME, ATTR_MESSAGING_SYSTEM, ATTR_NETWORK_CARRIER_ICC, ATTR_NETWORK_CARRIER_MCC, ATTR_NETWORK_CARRIER_MNC, ATTR_NETWORK_CARRIER_NAME, ATTR_NETWORK_CONNECTION_SUBTYPE, ATTR_NETWORK_CONNECTION_TYPE, ATTR_NETWORK_IO_DIRECTION, ATTR_NETWORK_LOCAL_ADDRESS, ATTR_NETWORK_LOCAL_PORT, ATTR_NETWORK_PEER_ADDRESS, ATTR_NETWORK_PEER_PORT, ATTR_NETWORK_PROTOCOL_NAME, ATTR_NETWORK_PROTOCOL_VERSION, ATTR_NETWORK_TRANSPORT, ATTR_NETWORK_TYPE, ATTR_NET_HOST_IP, ATTR_NET_HOST_NAME, ATTR_NET_HOST_PORT, ATTR_NET_PEER_IP, ATTR_NET_PEER_NAME, ATTR_NET_PEER_PORT, ATTR_NET_PROTOCOL_NAME, ATTR_NET_PROTOCOL_VERSION, ATTR_NET_SOCK_FAMILY, ATTR_NET_SOCK_HOST_ADDR, ATTR_NET_SOCK_HOST_PORT, ATTR_NET_SOCK_PEER_ADDR, ATTR_NET_SOCK_PEER_NAME, ATTR_NET_SOCK_PEER_PORT, ATTR_NET_TRANSPORT, ATTR_NODEJS_EVENTLOOP_STATE, ATTR_OCI_MANIFEST_DIGEST, ATTR_OPENTRACING_REF_TYPE, ATTR_OS_BUILD_ID, ATTR_OS_DESCRIPTION, ATTR_OS_NAME, ATTR_OS_TYPE, ATTR_OS_VERSION, ATTR_OTEL_LIBRARY_NAME, ATTR_OTEL_LIBRARY_VERSION, ATTR_OTEL_SCOPE_NAME, ATTR_OTEL_SCOPE_VERSION, ATTR_OTEL_STATUS_CODE, ATTR_OTEL_STATUS_DESCRIPTION, ATTR_PEER_SERVICE, ATTR_POOL_NAME, ATTR_PROCESS_ARGS_COUNT, ATTR_PROCESS_COMMAND, ATTR_PROCESS_COMMAND_ARGS, ATTR_PROCESS_COMMAND_LINE, ATTR_PROCESS_CONTEXT_SWITCH_TYPE, ATTR_PROCESS_CPU_STATE, ATTR_PROCESS_CREATION_TIME, ATTR_PROCESS_EXECUTABLE_BUILD_ID_GNU, ATTR_PROCESS_EXECUTABLE_BUILD_ID_GO, ATTR_PROCESS_EXECUTABLE_BUILD_ID_PROFILING, ATTR_PROCESS_EXECUTABLE_NAME, ATTR_PROCESS_EXECUTABLE_PATH, ATTR_PROCESS_EXIT_CODE, ATTR_PROCESS_EXIT_TIME, ATTR_PROCESS_GROUP_LEADER_PID, ATTR_PROCESS_INTERACTIVE, ATTR_PROCESS_OWNER, ATTR_PROCESS_PAGING_FAULT_TYPE, ATTR_PROCESS_PARENT_PID, ATTR_PROCESS_PID, ATTR_PROCESS_REAL_USER_ID, ATTR_PROCESS_REAL_USER_NAME, ATTR_PROCESS_RUNTIME_DESCRIPTION, ATTR_PROCESS_RUNTIME_NAME, ATTR_PROCESS_RUNTIME_VERSION, ATTR_PROCESS_SAVED_USER_ID, ATTR_PROCESS_SAVED_USER_NAME, ATTR_PROCESS_SESSION_LEADER_PID, ATTR_PROCESS_TITLE, ATTR_PROCESS_USER_ID, ATTR_PROCESS_USER_NAME, ATTR_PROCESS_VPID, ATTR_PROCESS_WORKING_DIRECTORY, ATTR_PROFILE_FRAME_TYPE, ATTR_RPC_CONNECT_RPC_ERROR_CODE, ATTR_RPC_CONNECT_RPC_REQUEST_METADATA, ATTR_RPC_CONNECT_RPC_RESPONSE_METADATA, ATTR_RPC_GRPC_REQUEST_METADATA, ATTR_RPC_GRPC_RESPONSE_METADATA, ATTR_RPC_GRPC_STATUS_CODE, ATTR_RPC_JSONRPC_ERROR_CODE, ATTR_RPC_JSONRPC_ERROR_MESSAGE, ATTR_RPC_JSONRPC_REQUEST_ID, ATTR_RPC_JSONRPC_VERSION, ATTR_RPC_MESSAGE_COMPRESSED_SIZE, ATTR_RPC_MESSAGE_ID, ATTR_RPC_MESSAGE_TYPE, ATTR_RPC_MESSAGE_UNCOMPRESSED_SIZE, ATTR_RPC_METHOD, ATTR_RPC_SERVICE, ATTR_RPC_SYSTEM, ATTR_SERVER_ADDRESS, ATTR_SERVER_PORT, ATTR_SERVICE_INSTANCE_ID, ATTR_SERVICE_NAME, ATTR_SERVICE_NAMESPACE, ATTR_SERVICE_VERSION, ATTR_SESSION_ID, ATTR_SESSION_PREVIOUS_ID, ATTR_SIGNALR_CONNECTION_STATUS, ATTR_SIGNALR_TRANSPORT, ATTR_SOURCE_ADDRESS, ATTR_SOURCE_PORT, ATTR_STATE, ATTR_SYSTEM_CPU_LOGICAL_NUMBER, ATTR_SYSTEM_CPU_STATE, ATTR_SYSTEM_DEVICE, ATTR_SYSTEM_FILESYSTEM_MODE, ATTR_SYSTEM_FILESYSTEM_MOUNTPOINT, ATTR_SYSTEM_FILESYSTEM_STATE, ATTR_SYSTEM_FILESYSTEM_TYPE, ATTR_SYSTEM_MEMORY_STATE, ATTR_SYSTEM_NETWORK_STATE, ATTR_SYSTEM_PAGING_DIRECTION, ATTR_SYSTEM_PAGING_STATE, ATTR_SYSTEM_PAGING_TYPE, ATTR_SYSTEM_PROCESSES_STATUS, ATTR_SYSTEM_PROCESS_STATUS, ATTR_TELEMETRY_DISTRO_NAME, ATTR_TELEMETRY_DISTRO_VERSION, ATTR_TELEMETRY_SDK_LANGUAGE, ATTR_TELEMETRY_SDK_NAME, ATTR_TELEMETRY_SDK_VERSION, ATTR_TEST_CASE_NAME, ATTR_TEST_CASE_RESULT_STATUS, ATTR_TEST_SUITE_NAME, ATTR_TEST_SUITE_RUN_STATUS, ATTR_THREAD_ID, ATTR_THREAD_NAME, ATTR_TLS_CIPHER, ATTR_TLS_CLIENT_CERTIFICATE, ATTR_TLS_CLIENT_CERTIFICATE_CHAIN, ATTR_TLS_CLIENT_HASH_MD5, ATTR_TLS_CLIENT_HASH_SHA1, ATTR_TLS_CLIENT_HASH_SHA256, ATTR_TLS_CLIENT_ISSUER, ATTR_TLS_CLIENT_JA3, ATTR_TLS_CLIENT_NOT_AFTER, ATTR_TLS_CLIENT_NOT_BEFORE, ATTR_TLS_CLIENT_SERVER_NAME, ATTR_TLS_CLIENT_SUBJECT, ATTR_TLS_CLIENT_SUPPORTED_CIPHERS, ATTR_TLS_CURVE, ATTR_TLS_ESTABLISHED, ATTR_TLS_NEXT_PROTOCOL, ATTR_TLS_PROTOCOL_NAME, ATTR_TLS_PROTOCOL_VERSION, ATTR_TLS_RESUMED, ATTR_TLS_SERVER_CERTIFICATE, ATTR_TLS_SERVER_CERTIFICATE_CHAIN, ATTR_TLS_SERVER_HASH_MD5, ATTR_TLS_SERVER_HASH_SHA1, ATTR_TLS_SERVER_HASH_SHA256, ATTR_TLS_SERVER_ISSUER, ATTR_TLS_SERVER_JA3S, ATTR_TLS_SERVER_NOT_AFTER, ATTR_TLS_SERVER_NOT_BEFORE, ATTR_TLS_SERVER_SUBJECT, ATTR_URL_DOMAIN, ATTR_URL_EXTENSION, ATTR_URL_FRAGMENT, ATTR_URL_FULL, ATTR_URL_ORIGINAL, ATTR_URL_PATH, ATTR_URL_PORT, ATTR_URL_QUERY, ATTR_URL_REGISTERED_DOMAIN, ATTR_URL_SCHEME, ATTR_URL_SUBDOMAIN, ATTR_URL_TEMPLATE, ATTR_URL_TOP_LEVEL_DOMAIN, ATTR_USER_AGENT_NAME, ATTR_USER_AGENT_ORIGINAL, ATTR_USER_AGENT_VERSION, ATTR_USER_EMAIL, ATTR_USER_FULL_NAME, ATTR_USER_HASH, ATTR_USER_ID, ATTR_USER_NAME, ATTR_USER_ROLES, ATTR_V8JS_GC_TYPE, ATTR_V8JS_HEAP_SPACE_NAME, ATTR_VCS_REPOSITORY_CHANGE_ID, ATTR_VCS_REPOSITORY_CHANGE_TITLE, ATTR_VCS_REPOSITORY_REF_NAME, ATTR_VCS_REPOSITORY_REF_REVISION, ATTR_VCS_REPOSITORY_REF_TYPE, ATTR_VCS_REPOSITORY_URL_FULL, ATTR_WEBENGINE_DESCRIPTION, ATTR_WEBENGINE_NAME, ATTR_WEBENGINE_VERSION, AWSECSLAUNCHTYPEVALUES_EC2, AWSECSLAUNCHTYPEVALUES_FARGATE, AWS_ECS_LAUNCHTYPE_VALUE_EC2, AWS_ECS_LAUNCHTYPE_VALUE_FARGATE, AwsEcsLaunchtypeValues, CICD_PIPELINE_TASK_TYPE_VALUE_BUILD, CICD_PIPELINE_TASK_TYPE_VALUE_DEPLOY, CICD_PIPELINE_TASK_TYPE_VALUE_TEST, CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS, CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC, CLOUDPLATFORMVALUES_AWS_EC2, CLOUDPLATFORMVALUES_AWS_ECS, CLOUDPLATFORMVALUES_AWS_EKS, CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK, CLOUDPLATFORMVALUES_AWS_LAMBDA, CLOUDPLATFORMVALUES_AZURE_AKS, CLOUDPLATFORMVALUES_AZURE_APP_SERVICE, CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES, CLOUDPLATFORMVALUES_AZURE_FUNCTIONS, CLOUDPLATFORMVALUES_AZURE_VM, CLOUDPLATFORMVALUES_GCP_APP_ENGINE, CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS, CLOUDPLATFORMVALUES_GCP_CLOUD_RUN, CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE, CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE, CLOUDPROVIDERVALUES_ALIBABA_CLOUD, CLOUDPROVIDERVALUES_AWS, CLOUDPROVIDERVALUES_AZURE, CLOUDPROVIDERVALUES_GCP, CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS, CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC, CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_OPENSHIFT, CLOUD_PLATFORM_VALUE_AWS_APP_RUNNER, CLOUD_PLATFORM_VALUE_AWS_EC2, CLOUD_PLATFORM_VALUE_AWS_ECS, CLOUD_PLATFORM_VALUE_AWS_EKS, CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK, CLOUD_PLATFORM_VALUE_AWS_LAMBDA, CLOUD_PLATFORM_VALUE_AWS_OPENSHIFT, CLOUD_PLATFORM_VALUE_AZURE_AKS, CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE, CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_APPS, CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES, CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS, CLOUD_PLATFORM_VALUE_AZURE_OPENSHIFT, CLOUD_PLATFORM_VALUE_AZURE_VM, CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE, CLOUD_PLATFORM_VALUE_GCP_BARE_METAL_SOLUTION, CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS, CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN, CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE, CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE, CLOUD_PLATFORM_VALUE_GCP_OPENSHIFT, CLOUD_PLATFORM_VALUE_IBM_CLOUD_OPENSHIFT, CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_CVM, CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_EKS, CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_SCF, CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD, CLOUD_PROVIDER_VALUE_AWS, CLOUD_PROVIDER_VALUE_AZURE, CLOUD_PROVIDER_VALUE_GCP, CLOUD_PROVIDER_VALUE_HEROKU, CLOUD_PROVIDER_VALUE_IBM_CLOUD, CLOUD_PROVIDER_VALUE_TENCENT_CLOUD, CONTAINER_CPU_STATE_VALUE_KERNEL, CONTAINER_CPU_STATE_VALUE_SYSTEM, CONTAINER_CPU_STATE_VALUE_USER, CPU_MODE_VALUE_IDLE, CPU_MODE_VALUE_INTERRUPT, CPU_MODE_VALUE_IOWAIT, CPU_MODE_VALUE_KERNEL, CPU_MODE_VALUE_NICE, CPU_MODE_VALUE_STEAL, CPU_MODE_VALUE_SYSTEM, CPU_MODE_VALUE_USER, CloudPlatformValues, CloudProviderValues, DBCASSANDRACONSISTENCYLEVELVALUES_ALL, DBCASSANDRACONSISTENCYLEVELVALUES_ANY, DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM, DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE, DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM, DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL, DBCASSANDRACONSISTENCYLEVELVALUES_ONE, DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM, DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL, DBCASSANDRACONSISTENCYLEVELVALUES_THREE, DBCASSANDRACONSISTENCYLEVELVALUES_TWO, DBSYSTEMVALUES_ADABAS, DBSYSTEMVALUES_CACHE, DBSYSTEMVALUES_CASSANDRA, DBSYSTEMVALUES_CLOUDSCAPE, DBSYSTEMVALUES_COCKROACHDB, DBSYSTEMVALUES_COLDFUSION, DBSYSTEMVALUES_COSMOSDB, DBSYSTEMVALUES_COUCHBASE, DBSYSTEMVALUES_COUCHDB, DBSYSTEMVALUES_DB2, DBSYSTEMVALUES_DERBY, DBSYSTEMVALUES_DYNAMODB, DBSYSTEMVALUES_EDB, DBSYSTEMVALUES_ELASTICSEARCH, DBSYSTEMVALUES_FILEMAKER, DBSYSTEMVALUES_FIREBIRD, DBSYSTEMVALUES_FIRSTSQL, DBSYSTEMVALUES_GEODE, DBSYSTEMVALUES_H2, DBSYSTEMVALUES_HANADB, DBSYSTEMVALUES_HBASE, DBSYSTEMVALUES_HIVE, DBSYSTEMVALUES_HSQLDB, DBSYSTEMVALUES_INFORMIX, DBSYSTEMVALUES_INGRES, DBSYSTEMVALUES_INSTANTDB, DBSYSTEMVALUES_INTERBASE, DBSYSTEMVALUES_MARIADB, DBSYSTEMVALUES_MAXDB, DBSYSTEMVALUES_MEMCACHED, DBSYSTEMVALUES_MONGODB, DBSYSTEMVALUES_MSSQL, DBSYSTEMVALUES_MYSQL, DBSYSTEMVALUES_NEO4J, DBSYSTEMVALUES_NETEZZA, DBSYSTEMVALUES_ORACLE, DBSYSTEMVALUES_OTHER_SQL, DBSYSTEMVALUES_PERVASIVE, DBSYSTEMVALUES_POINTBASE, DBSYSTEMVALUES_POSTGRESQL, DBSYSTEMVALUES_PROGRESS, DBSYSTEMVALUES_REDIS, DBSYSTEMVALUES_REDSHIFT, DBSYSTEMVALUES_SQLITE, DBSYSTEMVALUES_SYBASE, DBSYSTEMVALUES_TERADATA, DBSYSTEMVALUES_VERTICA, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE, DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO, DB_CLIENT_CONNECTIONS_STATE_VALUE_IDLE, DB_CLIENT_CONNECTIONS_STATE_VALUE_USED, DB_CLIENT_CONNECTION_STATE_VALUE_IDLE, DB_CLIENT_CONNECTION_STATE_VALUE_USED, DB_COSMOSDB_CONNECTION_MODE_VALUE_DIRECT, DB_COSMOSDB_CONNECTION_MODE_VALUE_GATEWAY, DB_COSMOSDB_OPERATION_TYPE_VALUE_BATCH, DB_COSMOSDB_OPERATION_TYPE_VALUE_CREATE, DB_COSMOSDB_OPERATION_TYPE_VALUE_DELETE, DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE, DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE_JAVASCRIPT, DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD, DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD_FEED, DB_COSMOSDB_OPERATION_TYPE_VALUE_INVALID, DB_COSMOSDB_OPERATION_TYPE_VALUE_PATCH, DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY, DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY_PLAN, DB_COSMOSDB_OPERATION_TYPE_VALUE_READ, DB_COSMOSDB_OPERATION_TYPE_VALUE_READ_FEED, DB_COSMOSDB_OPERATION_TYPE_VALUE_REPLACE, DB_COSMOSDB_OPERATION_TYPE_VALUE_UPSERT, DB_SYSTEM_VALUE_ADABAS, DB_SYSTEM_VALUE_CACHE, DB_SYSTEM_VALUE_CASSANDRA, DB_SYSTEM_VALUE_CLICKHOUSE, DB_SYSTEM_VALUE_CLOUDSCAPE, DB_SYSTEM_VALUE_COCKROACHDB, DB_SYSTEM_VALUE_COLDFUSION, DB_SYSTEM_VALUE_COSMOSDB, DB_SYSTEM_VALUE_COUCHBASE, DB_SYSTEM_VALUE_COUCHDB, DB_SYSTEM_VALUE_DB2, DB_SYSTEM_VALUE_DERBY, DB_SYSTEM_VALUE_DYNAMODB, DB_SYSTEM_VALUE_EDB, DB_SYSTEM_VALUE_ELASTICSEARCH, DB_SYSTEM_VALUE_FILEMAKER, DB_SYSTEM_VALUE_FIREBIRD, DB_SYSTEM_VALUE_FIRSTSQL, DB_SYSTEM_VALUE_GEODE, DB_SYSTEM_VALUE_H2, DB_SYSTEM_VALUE_HANADB, DB_SYSTEM_VALUE_HBASE, DB_SYSTEM_VALUE_HIVE, DB_SYSTEM_VALUE_HSQLDB, DB_SYSTEM_VALUE_INFLUXDB, DB_SYSTEM_VALUE_INFORMIX, DB_SYSTEM_VALUE_INGRES, DB_SYSTEM_VALUE_INSTANTDB, DB_SYSTEM_VALUE_INTERBASE, DB_SYSTEM_VALUE_INTERSYSTEMS_CACHE, DB_SYSTEM_VALUE_MARIADB, DB_SYSTEM_VALUE_MAXDB, DB_SYSTEM_VALUE_MEMCACHED, DB_SYSTEM_VALUE_MONGODB, DB_SYSTEM_VALUE_MSSQL, DB_SYSTEM_VALUE_MSSQLCOMPACT, DB_SYSTEM_VALUE_MYSQL, DB_SYSTEM_VALUE_NEO4J, DB_SYSTEM_VALUE_NETEZZA, DB_SYSTEM_VALUE_OPENSEARCH, DB_SYSTEM_VALUE_ORACLE, DB_SYSTEM_VALUE_OTHER_SQL, DB_SYSTEM_VALUE_PERVASIVE, DB_SYSTEM_VALUE_POINTBASE, DB_SYSTEM_VALUE_POSTGRESQL, DB_SYSTEM_VALUE_PROGRESS, DB_SYSTEM_VALUE_REDIS, DB_SYSTEM_VALUE_REDSHIFT, DB_SYSTEM_VALUE_SPANNER, DB_SYSTEM_VALUE_SQLITE, DB_SYSTEM_VALUE_SYBASE, DB_SYSTEM_VALUE_TERADATA, DB_SYSTEM_VALUE_TRINO, DB_SYSTEM_VALUE_VERTICA, DEPLOYMENT_STATUS_VALUE_FAILED, DEPLOYMENT_STATUS_VALUE_SUCCEEDED, DISK_IO_DIRECTION_VALUE_READ, DISK_IO_DIRECTION_VALUE_WRITE, DOTNET_GC_HEAP_GENERATION_VALUE_GEN0, DOTNET_GC_HEAP_GENERATION_VALUE_GEN1, DOTNET_GC_HEAP_GENERATION_VALUE_GEN2, DOTNET_GC_HEAP_GENERATION_VALUE_LOH, DOTNET_GC_HEAP_GENERATION_VALUE_POH, DbCassandraConsistencyLevelValues, DbSystemValues, ERROR_TYPE_VALUE_OTHER, FAASDOCUMENTOPERATIONVALUES_DELETE, FAASDOCUMENTOPERATIONVALUES_EDIT, FAASDOCUMENTOPERATIONVALUES_INSERT, FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD, FAASINVOKEDPROVIDERVALUES_AWS, FAASINVOKEDPROVIDERVALUES_AZURE, FAASINVOKEDPROVIDERVALUES_GCP, FAASTRIGGERVALUES_DATASOURCE, FAASTRIGGERVALUES_HTTP, FAASTRIGGERVALUES_OTHER, FAASTRIGGERVALUES_PUBSUB, FAASTRIGGERVALUES_TIMER, FAAS_DOCUMENT_OPERATION_VALUE_DELETE, FAAS_DOCUMENT_OPERATION_VALUE_EDIT, FAAS_DOCUMENT_OPERATION_VALUE_INSERT, FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD, FAAS_INVOKED_PROVIDER_VALUE_AWS, FAAS_INVOKED_PROVIDER_VALUE_AZURE, FAAS_INVOKED_PROVIDER_VALUE_GCP, FAAS_INVOKED_PROVIDER_VALUE_TENCENT_CLOUD, FAAS_TRIGGER_VALUE_DATASOURCE, FAAS_TRIGGER_VALUE_HTTP, FAAS_TRIGGER_VALUE_OTHER, FAAS_TRIGGER_VALUE_PUBSUB, FAAS_TRIGGER_VALUE_TIMER, FaasDocumentOperationValues, FaasInvokedProviderValues, FaasTriggerValues, GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_OBJECT, GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_SCHEMA, GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_TEXT, GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_AUTO, GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_DEFAULT, GEN_AI_OPERATION_NAME_VALUE_CHAT, GEN_AI_OPERATION_NAME_VALUE_TEXT_COMPLETION, GEN_AI_SYSTEM_VALUE_ANTHROPIC, GEN_AI_SYSTEM_VALUE_COHERE, GEN_AI_SYSTEM_VALUE_OPENAI, GEN_AI_SYSTEM_VALUE_VERTEX_AI, GEN_AI_TOKEN_TYPE_VALUE_COMPLETION, GEN_AI_TOKEN_TYPE_VALUE_INPUT, GO_MEMORY_TYPE_VALUE_OTHER, GO_MEMORY_TYPE_VALUE_STACK, GRAPHQL_OPERATION_TYPE_VALUE_MUTATION, GRAPHQL_OPERATION_TYPE_VALUE_QUERY, GRAPHQL_OPERATION_TYPE_VALUE_SUBSCRIPTION, HOSTARCHVALUES_AMD64, HOSTARCHVALUES_ARM32, HOSTARCHVALUES_ARM64, HOSTARCHVALUES_IA64, HOSTARCHVALUES_PPC32, HOSTARCHVALUES_PPC64, HOSTARCHVALUES_X86, HOST_ARCH_VALUE_AMD64, HOST_ARCH_VALUE_ARM32, HOST_ARCH_VALUE_ARM64, HOST_ARCH_VALUE_IA64, HOST_ARCH_VALUE_PPC32, HOST_ARCH_VALUE_PPC64, HOST_ARCH_VALUE_S390X, HOST_ARCH_VALUE_X86, HTTPFLAVORVALUES_HTTP_1_0, HTTPFLAVORVALUES_HTTP_1_1, HTTPFLAVORVALUES_HTTP_2_0, HTTPFLAVORVALUES_QUIC, HTTPFLAVORVALUES_SPDY, HTTP_CONNECTION_STATE_VALUE_ACTIVE, HTTP_CONNECTION_STATE_VALUE_IDLE, HTTP_FLAVOR_VALUE_HTTP_1_0, HTTP_FLAVOR_VALUE_HTTP_1_1, HTTP_FLAVOR_VALUE_HTTP_2_0, HTTP_FLAVOR_VALUE_HTTP_3_0, HTTP_FLAVOR_VALUE_QUIC, HTTP_FLAVOR_VALUE_SPDY, HTTP_REQUEST_METHOD_VALUE_CONNECT, HTTP_REQUEST_METHOD_VALUE_DELETE, HTTP_REQUEST_METHOD_VALUE_GET, HTTP_REQUEST_METHOD_VALUE_HEAD, HTTP_REQUEST_METHOD_VALUE_OPTIONS, HTTP_REQUEST_METHOD_VALUE_OTHER, HTTP_REQUEST_METHOD_VALUE_PATCH, HTTP_REQUEST_METHOD_VALUE_POST, HTTP_REQUEST_METHOD_VALUE_PUT, HTTP_REQUEST_METHOD_VALUE_TRACE, HW_STATE_VALUE_DEGRADED, HW_STATE_VALUE_FAILED, HW_STATE_VALUE_OK, HW_TYPE_VALUE_BATTERY, HW_TYPE_VALUE_CPU, HW_TYPE_VALUE_DISK_CONTROLLER, HW_TYPE_VALUE_ENCLOSURE, HW_TYPE_VALUE_FAN, HW_TYPE_VALUE_GPU, HW_TYPE_VALUE_LOGICAL_DISK, HW_TYPE_VALUE_MEMORY, HW_TYPE_VALUE_NETWORK, HW_TYPE_VALUE_PHYSICAL_DISK, HW_TYPE_VALUE_POWER_SUPPLY, HW_TYPE_VALUE_TAPE_DRIVE, HW_TYPE_VALUE_TEMPERATURE, HW_TYPE_VALUE_VOLTAGE, HostArchValues, HttpFlavorValues, IOS_STATE_VALUE_ACTIVE, IOS_STATE_VALUE_BACKGROUND, IOS_STATE_VALUE_FOREGROUND, IOS_STATE_VALUE_INACTIVE, IOS_STATE_VALUE_TERMINATE, JVM_MEMORY_TYPE_VALUE_HEAP, JVM_MEMORY_TYPE_VALUE_NON_HEAP, JVM_THREAD_STATE_VALUE_BLOCKED, JVM_THREAD_STATE_VALUE_NEW, JVM_THREAD_STATE_VALUE_RUNNABLE, JVM_THREAD_STATE_VALUE_TERMINATED, JVM_THREAD_STATE_VALUE_TIMED_WAITING, JVM_THREAD_STATE_VALUE_WAITING, K8S_VOLUME_TYPE_VALUE_CONFIG_MAP, K8S_VOLUME_TYPE_VALUE_DOWNWARD_API, K8S_VOLUME_TYPE_VALUE_EMPTY_DIR, K8S_VOLUME_TYPE_VALUE_LOCAL, K8S_VOLUME_TYPE_VALUE_PERSISTENT_VOLUME_CLAIM, K8S_VOLUME_TYPE_VALUE_SECRET, LINUX_MEMORY_SLAB_STATE_VALUE_RECLAIMABLE, LINUX_MEMORY_SLAB_STATE_VALUE_UNRECLAIMABLE, LOG_IOSTREAM_VALUE_STDERR, LOG_IOSTREAM_VALUE_STDOUT, MESSAGETYPEVALUES_RECEIVED, MESSAGETYPEVALUES_SENT, MESSAGE_TYPE_VALUE_RECEIVED, MESSAGE_TYPE_VALUE_SENT, MESSAGINGDESTINATIONKINDVALUES_QUEUE, MESSAGINGDESTINATIONKINDVALUES_TOPIC, MESSAGINGOPERATIONVALUES_PROCESS, MESSAGINGOPERATIONVALUES_RECEIVE, MESSAGING_OPERATION_TYPE_VALUE_CREATE, MESSAGING_OPERATION_TYPE_VALUE_DELIVER, MESSAGING_OPERATION_TYPE_VALUE_PROCESS, MESSAGING_OPERATION_TYPE_VALUE_PUBLISH, MESSAGING_OPERATION_TYPE_VALUE_RECEIVE, MESSAGING_OPERATION_TYPE_VALUE_SEND, MESSAGING_OPERATION_TYPE_VALUE_SETTLE, MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_BROADCASTING, MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_CLUSTERING, MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_DELAY, MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_FIFO, MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_NORMAL, MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_TRANSACTION, MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_ABANDON, MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_COMPLETE, MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEAD_LETTER, MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEFER, MESSAGING_SYSTEM_VALUE_ACTIVEMQ, MESSAGING_SYSTEM_VALUE_AWS_SQS, MESSAGING_SYSTEM_VALUE_EVENTGRID, MESSAGING_SYSTEM_VALUE_EVENTHUBS, MESSAGING_SYSTEM_VALUE_GCP_PUBSUB, MESSAGING_SYSTEM_VALUE_JMS, MESSAGING_SYSTEM_VALUE_KAFKA, MESSAGING_SYSTEM_VALUE_PULSAR, MESSAGING_SYSTEM_VALUE_RABBITMQ, MESSAGING_SYSTEM_VALUE_ROCKETMQ, MESSAGING_SYSTEM_VALUE_SERVICEBUS, METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS, METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES, METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS, METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS, METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION, METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE, METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS, METRIC_CONTAINER_CPU_TIME, METRIC_CONTAINER_CPU_USAGE, METRIC_CONTAINER_DISK_IO, METRIC_CONTAINER_MEMORY_USAGE, METRIC_CONTAINER_NETWORK_IO, METRIC_DB_CLIENT_CONNECTIONS_CREATE_TIME, METRIC_DB_CLIENT_CONNECTIONS_IDLE_MAX, METRIC_DB_CLIENT_CONNECTIONS_IDLE_MIN, METRIC_DB_CLIENT_CONNECTIONS_MAX, METRIC_DB_CLIENT_CONNECTIONS_PENDING_REQUESTS, METRIC_DB_CLIENT_CONNECTIONS_TIMEOUTS, METRIC_DB_CLIENT_CONNECTIONS_USAGE, METRIC_DB_CLIENT_CONNECTIONS_USE_TIME, METRIC_DB_CLIENT_CONNECTIONS_WAIT_TIME, METRIC_DB_CLIENT_CONNECTION_COUNT, METRIC_DB_CLIENT_CONNECTION_CREATE_TIME, METRIC_DB_CLIENT_CONNECTION_IDLE_MAX, METRIC_DB_CLIENT_CONNECTION_IDLE_MIN, METRIC_DB_CLIENT_CONNECTION_MAX, METRIC_DB_CLIENT_CONNECTION_PENDING_REQUESTS, METRIC_DB_CLIENT_CONNECTION_TIMEOUTS, METRIC_DB_CLIENT_CONNECTION_USE_TIME, METRIC_DB_CLIENT_CONNECTION_WAIT_TIME, METRIC_DB_CLIENT_OPERATION_DURATION, METRIC_DNS_LOOKUP_DURATION, METRIC_DOTNET_ASSEMBLY_COUNT, METRIC_DOTNET_EXCEPTIONS, METRIC_DOTNET_GC_COLLECTIONS, METRIC_DOTNET_GC_HEAP_TOTAL_ALLOCATED, METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_FRAGMENTATION_SIZE, METRIC_DOTNET_GC_LAST_COLLECTION_HEAP_SIZE, METRIC_DOTNET_GC_LAST_COLLECTION_MEMORY_COMMITTED_SIZE, METRIC_DOTNET_GC_PAUSE_TIME, METRIC_DOTNET_JIT_COMPILATION_TIME, METRIC_DOTNET_JIT_COMPILED_IL_SIZE, METRIC_DOTNET_JIT_COMPILED_METHODS, METRIC_DOTNET_MONITOR_LOCK_CONTENTIONS, METRIC_DOTNET_PROCESS_CPU_COUNT, METRIC_DOTNET_PROCESS_CPU_TIME, METRIC_DOTNET_PROCESS_MEMORY_WORKING_SET, METRIC_DOTNET_THREAD_POOL_QUEUE_LENGTH, METRIC_DOTNET_THREAD_POOL_THREAD_COUNT, METRIC_DOTNET_THREAD_POOL_WORK_ITEM_COUNT, METRIC_DOTNET_TIMER_COUNT, METRIC_FAAS_COLDSTARTS, METRIC_FAAS_CPU_USAGE, METRIC_FAAS_ERRORS, METRIC_FAAS_INIT_DURATION, METRIC_FAAS_INVOCATIONS, METRIC_FAAS_INVOKE_DURATION, METRIC_FAAS_MEM_USAGE, METRIC_FAAS_NET_IO, METRIC_FAAS_TIMEOUTS, METRIC_GEN_AI_CLIENT_OPERATION_DURATION, METRIC_GEN_AI_CLIENT_TOKEN_USAGE, METRIC_GEN_AI_SERVER_REQUEST_DURATION, METRIC_GEN_AI_SERVER_TIME_PER_OUTPUT_TOKEN, METRIC_GEN_AI_SERVER_TIME_TO_FIRST_TOKEN, METRIC_GO_CONFIG_GOGC, METRIC_GO_GOROUTINE_COUNT, METRIC_GO_MEMORY_ALLOCATED, METRIC_GO_MEMORY_ALLOCATIONS, METRIC_GO_MEMORY_GC_GOAL, METRIC_GO_MEMORY_LIMIT, METRIC_GO_MEMORY_USED, METRIC_GO_PROCESSOR_LIMIT, METRIC_GO_SCHEDULE_DURATION, METRIC_HTTP_CLIENT_ACTIVE_REQUESTS, METRIC_HTTP_CLIENT_CONNECTION_DURATION, METRIC_HTTP_CLIENT_OPEN_CONNECTIONS, METRIC_HTTP_CLIENT_REQUEST_BODY_SIZE, METRIC_HTTP_CLIENT_REQUEST_DURATION, METRIC_HTTP_CLIENT_RESPONSE_BODY_SIZE, METRIC_HTTP_SERVER_ACTIVE_REQUESTS, METRIC_HTTP_SERVER_REQUEST_BODY_SIZE, METRIC_HTTP_SERVER_REQUEST_DURATION, METRIC_HTTP_SERVER_RESPONSE_BODY_SIZE, METRIC_HW_ENERGY, METRIC_HW_ERRORS, METRIC_HW_POWER, METRIC_HW_STATUS, METRIC_JVM_BUFFER_COUNT, METRIC_JVM_BUFFER_MEMORY_LIMIT, METRIC_JVM_BUFFER_MEMORY_USAGE, METRIC_JVM_BUFFER_MEMORY_USED, METRIC_JVM_CLASS_COUNT, METRIC_JVM_CLASS_LOADED, METRIC_JVM_CLASS_UNLOADED, METRIC_JVM_CPU_COUNT, METRIC_JVM_CPU_RECENT_UTILIZATION, METRIC_JVM_CPU_TIME, METRIC_JVM_GC_DURATION, METRIC_JVM_MEMORY_COMMITTED, METRIC_JVM_MEMORY_INIT, METRIC_JVM_MEMORY_LIMIT, METRIC_JVM_MEMORY_USED, METRIC_JVM_MEMORY_USED_AFTER_LAST_GC, METRIC_JVM_SYSTEM_CPU_LOAD_1M, METRIC_JVM_SYSTEM_CPU_UTILIZATION, METRIC_JVM_THREAD_COUNT, METRIC_K8S_NODE_CPU_TIME, METRIC_K8S_NODE_CPU_USAGE, METRIC_K8S_NODE_MEMORY_USAGE, METRIC_K8S_POD_CPU_TIME, METRIC_K8S_POD_CPU_USAGE, METRIC_K8S_POD_MEMORY_USAGE, METRIC_KESTREL_ACTIVE_CONNECTIONS, METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES, METRIC_KESTREL_CONNECTION_DURATION, METRIC_KESTREL_QUEUED_CONNECTIONS, METRIC_KESTREL_QUEUED_REQUESTS, METRIC_KESTREL_REJECTED_CONNECTIONS, METRIC_KESTREL_TLS_HANDSHAKE_DURATION, METRIC_KESTREL_UPGRADED_CONNECTIONS, METRIC_MESSAGING_CLIENT_CONSUMED_MESSAGES, METRIC_MESSAGING_CLIENT_OPERATION_DURATION, METRIC_MESSAGING_CLIENT_PUBLISHED_MESSAGES, METRIC_MESSAGING_CLIENT_SENT_MESSAGES, METRIC_MESSAGING_PROCESS_DURATION, METRIC_MESSAGING_PROCESS_MESSAGES, METRIC_MESSAGING_PUBLISH_DURATION, METRIC_MESSAGING_PUBLISH_MESSAGES, METRIC_MESSAGING_RECEIVE_DURATION, METRIC_MESSAGING_RECEIVE_MESSAGES, METRIC_NODEJS_EVENTLOOP_DELAY_MAX, METRIC_NODEJS_EVENTLOOP_DELAY_MEAN, METRIC_NODEJS_EVENTLOOP_DELAY_MIN, METRIC_NODEJS_EVENTLOOP_DELAY_P50, METRIC_NODEJS_EVENTLOOP_DELAY_P90, METRIC_NODEJS_EVENTLOOP_DELAY_P99, METRIC_NODEJS_EVENTLOOP_DELAY_STDDEV, METRIC_NODEJS_EVENTLOOP_TIME, METRIC_NODEJS_EVENTLOOP_UTILIZATION, METRIC_PROCESS_CONTEXT_SWITCHES, METRIC_PROCESS_CPU_TIME, METRIC_PROCESS_CPU_UTILIZATION, METRIC_PROCESS_DISK_IO, METRIC_PROCESS_MEMORY_USAGE, METRIC_PROCESS_MEMORY_VIRTUAL, METRIC_PROCESS_NETWORK_IO, METRIC_PROCESS_OPEN_FILE_DESCRIPTOR_COUNT, METRIC_PROCESS_PAGING_FAULTS, METRIC_PROCESS_THREAD_COUNT, METRIC_PROCESS_UPTIME, METRIC_RPC_CLIENT_DURATION, METRIC_RPC_CLIENT_REQUESTS_PER_RPC, METRIC_RPC_CLIENT_REQUEST_SIZE, METRIC_RPC_CLIENT_RESPONSES_PER_RPC, METRIC_RPC_CLIENT_RESPONSE_SIZE, METRIC_RPC_SERVER_DURATION, METRIC_RPC_SERVER_REQUESTS_PER_RPC, METRIC_RPC_SERVER_REQUEST_SIZE, METRIC_RPC_SERVER_RESPONSES_PER_RPC, METRIC_RPC_SERVER_RESPONSE_SIZE, METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS, METRIC_SIGNALR_SERVER_CONNECTION_DURATION, METRIC_SYSTEM_CPU_FREQUENCY, METRIC_SYSTEM_CPU_LOGICAL_COUNT, METRIC_SYSTEM_CPU_PHYSICAL_COUNT, METRIC_SYSTEM_CPU_TIME, METRIC_SYSTEM_CPU_UTILIZATION, METRIC_SYSTEM_DISK_IO, METRIC_SYSTEM_DISK_IO_TIME, METRIC_SYSTEM_DISK_LIMIT, METRIC_SYSTEM_DISK_MERGED, METRIC_SYSTEM_DISK_OPERATIONS, METRIC_SYSTEM_DISK_OPERATION_TIME, METRIC_SYSTEM_FILESYSTEM_LIMIT, METRIC_SYSTEM_FILESYSTEM_USAGE, METRIC_SYSTEM_FILESYSTEM_UTILIZATION, METRIC_SYSTEM_LINUX_MEMORY_AVAILABLE, METRIC_SYSTEM_LINUX_MEMORY_SLAB_USAGE, METRIC_SYSTEM_MEMORY_LIMIT, METRIC_SYSTEM_MEMORY_SHARED, METRIC_SYSTEM_MEMORY_USAGE, METRIC_SYSTEM_MEMORY_UTILIZATION, METRIC_SYSTEM_NETWORK_CONNECTIONS, METRIC_SYSTEM_NETWORK_DROPPED, METRIC_SYSTEM_NETWORK_ERRORS, METRIC_SYSTEM_NETWORK_IO, METRIC_SYSTEM_NETWORK_PACKETS, METRIC_SYSTEM_PAGING_FAULTS, METRIC_SYSTEM_PAGING_OPERATIONS, METRIC_SYSTEM_PAGING_USAGE, METRIC_SYSTEM_PAGING_UTILIZATION, METRIC_SYSTEM_PROCESS_COUNT, METRIC_SYSTEM_PROCESS_CREATED, METRIC_V8JS_GC_DURATION, METRIC_V8JS_HEAP_SPACE_AVAILABLE_SIZE, METRIC_V8JS_HEAP_SPACE_PHYSICAL_SIZE, METRIC_V8JS_MEMORY_HEAP_LIMIT, METRIC_V8JS_MEMORY_HEAP_USED, MessageTypeValues, MessagingDestinationKindValues, MessagingOperationValues, NETHOSTCONNECTIONSUBTYPEVALUES_CDMA, NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT, NETHOSTCONNECTIONSUBTYPEVALUES_EDGE, NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD, NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0, NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A, NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B, NETHOSTCONNECTIONSUBTYPEVALUES_GPRS, NETHOSTCONNECTIONSUBTYPEVALUES_GSM, NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA, NETHOSTCONNECTIONSUBTYPEVALUES_HSPA, NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP, NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA, NETHOSTCONNECTIONSUBTYPEVALUES_IDEN, NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN, NETHOSTCONNECTIONSUBTYPEVALUES_LTE, NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA, NETHOSTCONNECTIONSUBTYPEVALUES_NR, NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA, NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA, NETHOSTCONNECTIONSUBTYPEVALUES_UMTS, NETHOSTCONNECTIONTYPEVALUES_CELL, NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE, NETHOSTCONNECTIONTYPEVALUES_UNKNOWN, NETHOSTCONNECTIONTYPEVALUES_WIFI, NETHOSTCONNECTIONTYPEVALUES_WIRED, NETTRANSPORTVALUES_INPROC, NETTRANSPORTVALUES_IP, NETTRANSPORTVALUES_IP_TCP, NETTRANSPORTVALUES_IP_UDP, NETTRANSPORTVALUES_OTHER, NETTRANSPORTVALUES_PIPE, NETTRANSPORTVALUES_UNIX, NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA, NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT, NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE, NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD, NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0, NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A, NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B, NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS, NETWORK_CONNECTION_SUBTYPE_VALUE_GSM, NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA, NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA, NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP, NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA, NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN, NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN, NETWORK_CONNECTION_SUBTYPE_VALUE_LTE, NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA, NETWORK_CONNECTION_SUBTYPE_VALUE_NR, NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA, NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA, NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS, NETWORK_CONNECTION_TYPE_VALUE_CELL, NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE, NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN, NETWORK_CONNECTION_TYPE_VALUE_WIFI, NETWORK_CONNECTION_TYPE_VALUE_WIRED, NETWORK_IO_DIRECTION_VALUE_RECEIVE, NETWORK_IO_DIRECTION_VALUE_TRANSMIT, NETWORK_TRANSPORT_VALUE_PIPE, NETWORK_TRANSPORT_VALUE_QUIC, NETWORK_TRANSPORT_VALUE_TCP, NETWORK_TRANSPORT_VALUE_UDP, NETWORK_TRANSPORT_VALUE_UNIX, NETWORK_TYPE_VALUE_IPV4, NETWORK_TYPE_VALUE_IPV6, NET_SOCK_FAMILY_VALUE_INET, NET_SOCK_FAMILY_VALUE_INET6, NET_SOCK_FAMILY_VALUE_UNIX, NET_TRANSPORT_VALUE_INPROC, NET_TRANSPORT_VALUE_IP_TCP, NET_TRANSPORT_VALUE_IP_UDP, NET_TRANSPORT_VALUE_OTHER, NET_TRANSPORT_VALUE_PIPE, NODEJS_EVENTLOOP_STATE_VALUE_ACTIVE, NODEJS_EVENTLOOP_STATE_VALUE_IDLE, NetHostConnectionSubtypeValues, NetHostConnectionTypeValues, NetTransportValues, OPENTRACING_REF_TYPE_VALUE_CHILD_OF, OPENTRACING_REF_TYPE_VALUE_FOLLOWS_FROM, OSTYPEVALUES_AIX, OSTYPEVALUES_DARWIN, OSTYPEVALUES_DRAGONFLYBSD, OSTYPEVALUES_FREEBSD, OSTYPEVALUES_HPUX, OSTYPEVALUES_LINUX, OSTYPEVALUES_NETBSD, OSTYPEVALUES_OPENBSD, OSTYPEVALUES_SOLARIS, OSTYPEVALUES_WINDOWS, OSTYPEVALUES_Z_OS, OS_TYPE_VALUE_AIX, OS_TYPE_VALUE_DARWIN, OS_TYPE_VALUE_DRAGONFLYBSD, OS_TYPE_VALUE_FREEBSD, OS_TYPE_VALUE_HPUX, OS_TYPE_VALUE_LINUX, OS_TYPE_VALUE_NETBSD, OS_TYPE_VALUE_OPENBSD, OS_TYPE_VALUE_SOLARIS, OS_TYPE_VALUE_WINDOWS, OS_TYPE_VALUE_Z_OS, OTEL_STATUS_CODE_VALUE_ERROR, OTEL_STATUS_CODE_VALUE_OK, OsTypeValues, PROCESS_CONTEXT_SWITCH_TYPE_VALUE_INVOLUNTARY, PROCESS_CONTEXT_SWITCH_TYPE_VALUE_VOLUNTARY, PROCESS_CPU_STATE_VALUE_SYSTEM, PROCESS_CPU_STATE_VALUE_USER, PROCESS_CPU_STATE_VALUE_WAIT, PROCESS_PAGING_FAULT_TYPE_VALUE_MAJOR, PROCESS_PAGING_FAULT_TYPE_VALUE_MINOR, PROFILE_FRAME_TYPE_VALUE_CPYTHON, PROFILE_FRAME_TYPE_VALUE_DOTNET, PROFILE_FRAME_TYPE_VALUE_JVM, PROFILE_FRAME_TYPE_VALUE_KERNEL, PROFILE_FRAME_TYPE_VALUE_NATIVE, PROFILE_FRAME_TYPE_VALUE_PERL, PROFILE_FRAME_TYPE_VALUE_PHP, PROFILE_FRAME_TYPE_VALUE_RUBY, PROFILE_FRAME_TYPE_VALUE_V8JS, RPCGRPCSTATUSCODEVALUES_ABORTED, RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS, RPCGRPCSTATUSCODEVALUES_CANCELLED, RPCGRPCSTATUSCODEVALUES_DATA_LOSS, RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED, RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION, RPCGRPCSTATUSCODEVALUES_INTERNAL, RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT, RPCGRPCSTATUSCODEVALUES_NOT_FOUND, RPCGRPCSTATUSCODEVALUES_OK, RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE, RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED, RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED, RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED, RPCGRPCSTATUSCODEVALUES_UNAVAILABLE, RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED, RPCGRPCSTATUSCODEVALUES_UNKNOWN, RPC_CONNECT_RPC_ERROR_CODE_VALUE_ABORTED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_ALREADY_EXISTS, RPC_CONNECT_RPC_ERROR_CODE_VALUE_CANCELLED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_DATA_LOSS, RPC_CONNECT_RPC_ERROR_CODE_VALUE_DEADLINE_EXCEEDED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_FAILED_PRECONDITION, RPC_CONNECT_RPC_ERROR_CODE_VALUE_INTERNAL, RPC_CONNECT_RPC_ERROR_CODE_VALUE_INVALID_ARGUMENT, RPC_CONNECT_RPC_ERROR_CODE_VALUE_NOT_FOUND, RPC_CONNECT_RPC_ERROR_CODE_VALUE_OUT_OF_RANGE, RPC_CONNECT_RPC_ERROR_CODE_VALUE_PERMISSION_DENIED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_RESOURCE_EXHAUSTED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAUTHENTICATED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAVAILABLE, RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNIMPLEMENTED, RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNKNOWN, RPC_GRPC_STATUS_CODE_VALUE_ABORTED, RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS, RPC_GRPC_STATUS_CODE_VALUE_CANCELLED, RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS, RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED, RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION, RPC_GRPC_STATUS_CODE_VALUE_INTERNAL, RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT, RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND, RPC_GRPC_STATUS_CODE_VALUE_OK, RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE, RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED, RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED, RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED, RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE, RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED, RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN, RPC_MESSAGE_TYPE_VALUE_RECEIVED, RPC_MESSAGE_TYPE_VALUE_SENT, RPC_SYSTEM_VALUE_APACHE_DUBBO, RPC_SYSTEM_VALUE_CONNECT_RPC, RPC_SYSTEM_VALUE_DOTNET_WCF, RPC_SYSTEM_VALUE_GRPC, RPC_SYSTEM_VALUE_JAVA_RMI, RpcGrpcStatusCodeValues, SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET, SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS, SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ, SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY, SEMATTRS_AWS_DYNAMODB_COUNT, SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE, SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES, SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES, SEMATTRS_AWS_DYNAMODB_INDEX_NAME, SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS, SEMATTRS_AWS_DYNAMODB_LIMIT, SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES, SEMATTRS_AWS_DYNAMODB_PROJECTION, SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY, SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY, SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT, SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD, SEMATTRS_AWS_DYNAMODB_SEGMENT, SEMATTRS_AWS_DYNAMODB_SELECT, SEMATTRS_AWS_DYNAMODB_TABLE_COUNT, SEMATTRS_AWS_DYNAMODB_TABLE_NAMES, SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS, SEMATTRS_AWS_LAMBDA_INVOKED_ARN, SEMATTRS_CODE_FILEPATH, SEMATTRS_CODE_FUNCTION, SEMATTRS_CODE_LINENO, SEMATTRS_CODE_NAMESPACE, SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL, SEMATTRS_DB_CASSANDRA_COORDINATOR_DC, SEMATTRS_DB_CASSANDRA_COORDINATOR_ID, SEMATTRS_DB_CASSANDRA_IDEMPOTENCE, SEMATTRS_DB_CASSANDRA_KEYSPACE, SEMATTRS_DB_CASSANDRA_PAGE_SIZE, SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT, SEMATTRS_DB_CASSANDRA_TABLE, SEMATTRS_DB_CONNECTION_STRING, SEMATTRS_DB_HBASE_NAMESPACE, SEMATTRS_DB_JDBC_DRIVER_CLASSNAME, SEMATTRS_DB_MONGODB_COLLECTION, SEMATTRS_DB_MSSQL_INSTANCE_NAME, SEMATTRS_DB_NAME, SEMATTRS_DB_OPERATION, SEMATTRS_DB_REDIS_DATABASE_INDEX, SEMATTRS_DB_SQL_TABLE, SEMATTRS_DB_STATEMENT, SEMATTRS_DB_SYSTEM, SEMATTRS_DB_USER, SEMATTRS_ENDUSER_ID, SEMATTRS_ENDUSER_ROLE, SEMATTRS_ENDUSER_SCOPE, SEMATTRS_EXCEPTION_ESCAPED, SEMATTRS_EXCEPTION_MESSAGE, SEMATTRS_EXCEPTION_STACKTRACE, SEMATTRS_EXCEPTION_TYPE, SEMATTRS_FAAS_COLDSTART, SEMATTRS_FAAS_CRON, SEMATTRS_FAAS_DOCUMENT_COLLECTION, SEMATTRS_FAAS_DOCUMENT_NAME, SEMATTRS_FAAS_DOCUMENT_OPERATION, SEMATTRS_FAAS_DOCUMENT_TIME, SEMATTRS_FAAS_EXECUTION, SEMATTRS_FAAS_INVOKED_NAME, SEMATTRS_FAAS_INVOKED_PROVIDER, SEMATTRS_FAAS_INVOKED_REGION, SEMATTRS_FAAS_TIME, SEMATTRS_FAAS_TRIGGER, SEMATTRS_HTTP_CLIENT_IP, SEMATTRS_HTTP_FLAVOR, SEMATTRS_HTTP_HOST, SEMATTRS_HTTP_METHOD, SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH, SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, SEMATTRS_HTTP_ROUTE, SEMATTRS_HTTP_SCHEME, SEMATTRS_HTTP_SERVER_NAME, SEMATTRS_HTTP_STATUS_CODE, SEMATTRS_HTTP_TARGET, SEMATTRS_HTTP_URL, SEMATTRS_HTTP_USER_AGENT, SEMATTRS_MESSAGE_COMPRESSED_SIZE, SEMATTRS_MESSAGE_ID, SEMATTRS_MESSAGE_TYPE, SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE, SEMATTRS_MESSAGING_CONSUMER_ID, SEMATTRS_MESSAGING_CONVERSATION_ID, SEMATTRS_MESSAGING_DESTINATION, SEMATTRS_MESSAGING_DESTINATION_KIND, SEMATTRS_MESSAGING_KAFKA_CLIENT_ID, SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP, SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY, SEMATTRS_MESSAGING_KAFKA_PARTITION, SEMATTRS_MESSAGING_KAFKA_TOMBSTONE, SEMATTRS_MESSAGING_MESSAGE_ID, SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES, SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES, SEMATTRS_MESSAGING_OPERATION, SEMATTRS_MESSAGING_PROTOCOL, SEMATTRS_MESSAGING_PROTOCOL_VERSION, SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY, SEMATTRS_MESSAGING_SYSTEM, SEMATTRS_MESSAGING_TEMP_DESTINATION, SEMATTRS_MESSAGING_URL, SEMATTRS_NET_HOST_CARRIER_ICC, SEMATTRS_NET_HOST_CARRIER_MCC, SEMATTRS_NET_HOST_CARRIER_MNC, SEMATTRS_NET_HOST_CARRIER_NAME, SEMATTRS_NET_HOST_CONNECTION_SUBTYPE, SEMATTRS_NET_HOST_CONNECTION_TYPE, SEMATTRS_NET_HOST_IP, SEMATTRS_NET_HOST_NAME, SEMATTRS_NET_HOST_PORT, SEMATTRS_NET_PEER_IP, SEMATTRS_NET_PEER_NAME, SEMATTRS_NET_PEER_PORT, SEMATTRS_NET_TRANSPORT, SEMATTRS_PEER_SERVICE, SEMATTRS_RPC_GRPC_STATUS_CODE, SEMATTRS_RPC_JSONRPC_ERROR_CODE, SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE, SEMATTRS_RPC_JSONRPC_REQUEST_ID, SEMATTRS_RPC_JSONRPC_VERSION, SEMATTRS_RPC_METHOD, SEMATTRS_RPC_SERVICE, SEMATTRS_RPC_SYSTEM, SEMATTRS_THREAD_ID, SEMATTRS_THREAD_NAME, SEMRESATTRS_AWS_ECS_CLUSTER_ARN, SEMRESATTRS_AWS_ECS_CONTAINER_ARN, SEMRESATTRS_AWS_ECS_LAUNCHTYPE, SEMRESATTRS_AWS_ECS_TASK_ARN, SEMRESATTRS_AWS_ECS_TASK_FAMILY, SEMRESATTRS_AWS_ECS_TASK_REVISION, SEMRESATTRS_AWS_EKS_CLUSTER_ARN, SEMRESATTRS_AWS_LOG_GROUP_ARNS, SEMRESATTRS_AWS_LOG_GROUP_NAMES, SEMRESATTRS_AWS_LOG_STREAM_ARNS, SEMRESATTRS_AWS_LOG_STREAM_NAMES, SEMRESATTRS_CLOUD_ACCOUNT_ID, SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, SEMRESATTRS_CLOUD_PLATFORM, SEMRESATTRS_CLOUD_PROVIDER, SEMRESATTRS_CLOUD_REGION, SEMRESATTRS_CONTAINER_ID, SEMRESATTRS_CONTAINER_IMAGE_NAME, SEMRESATTRS_CONTAINER_IMAGE_TAG, SEMRESATTRS_CONTAINER_NAME, SEMRESATTRS_CONTAINER_RUNTIME, SEMRESATTRS_DEPLOYMENT_ENVIRONMENT, SEMRESATTRS_DEVICE_ID, SEMRESATTRS_DEVICE_MODEL_IDENTIFIER, SEMRESATTRS_DEVICE_MODEL_NAME, SEMRESATTRS_FAAS_ID, SEMRESATTRS_FAAS_INSTANCE, SEMRESATTRS_FAAS_MAX_MEMORY, SEMRESATTRS_FAAS_NAME, SEMRESATTRS_FAAS_VERSION, SEMRESATTRS_HOST_ARCH, SEMRESATTRS_HOST_ID, SEMRESATTRS_HOST_IMAGE_ID, SEMRESATTRS_HOST_IMAGE_NAME, SEMRESATTRS_HOST_IMAGE_VERSION, SEMRESATTRS_HOST_NAME, SEMRESATTRS_HOST_TYPE, SEMRESATTRS_K8S_CLUSTER_NAME, SEMRESATTRS_K8S_CONTAINER_NAME, SEMRESATTRS_K8S_CRONJOB_NAME, SEMRESATTRS_K8S_CRONJOB_UID, SEMRESATTRS_K8S_DAEMONSET_NAME, SEMRESATTRS_K8S_DAEMONSET_UID, SEMRESATTRS_K8S_DEPLOYMENT_NAME, SEMRESATTRS_K8S_DEPLOYMENT_UID, SEMRESATTRS_K8S_JOB_NAME, SEMRESATTRS_K8S_JOB_UID, SEMRESATTRS_K8S_NAMESPACE_NAME, SEMRESATTRS_K8S_NODE_NAME, SEMRESATTRS_K8S_NODE_UID, SEMRESATTRS_K8S_POD_NAME, SEMRESATTRS_K8S_POD_UID, SEMRESATTRS_K8S_REPLICASET_NAME, SEMRESATTRS_K8S_REPLICASET_UID, SEMRESATTRS_K8S_STATEFULSET_NAME, SEMRESATTRS_K8S_STATEFULSET_UID, SEMRESATTRS_OS_DESCRIPTION, SEMRESATTRS_OS_NAME, SEMRESATTRS_OS_TYPE, SEMRESATTRS_OS_VERSION, SEMRESATTRS_PROCESS_COMMAND, SEMRESATTRS_PROCESS_COMMAND_ARGS, SEMRESATTRS_PROCESS_COMMAND_LINE, SEMRESATTRS_PROCESS_EXECUTABLE_NAME, SEMRESATTRS_PROCESS_EXECUTABLE_PATH, SEMRESATTRS_PROCESS_OWNER, SEMRESATTRS_PROCESS_PID, SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION, SEMRESATTRS_PROCESS_RUNTIME_NAME, SEMRESATTRS_PROCESS_RUNTIME_VERSION, SEMRESATTRS_SERVICE_INSTANCE_ID, SEMRESATTRS_SERVICE_NAME, SEMRESATTRS_SERVICE_NAMESPACE, SEMRESATTRS_SERVICE_VERSION, SEMRESATTRS_TELEMETRY_AUTO_VERSION, SEMRESATTRS_TELEMETRY_SDK_LANGUAGE, SEMRESATTRS_TELEMETRY_SDK_NAME, SEMRESATTRS_TELEMETRY_SDK_VERSION, SEMRESATTRS_WEBENGINE_DESCRIPTION, SEMRESATTRS_WEBENGINE_NAME, SEMRESATTRS_WEBENGINE_VERSION, SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN, SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE, SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT, SIGNALR_TRANSPORT_VALUE_LONG_POLLING, SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS, SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS, STATE_VALUE_IDLE, STATE_VALUE_USED, SYSTEM_CPU_STATE_VALUE_IDLE, SYSTEM_CPU_STATE_VALUE_INTERRUPT, SYSTEM_CPU_STATE_VALUE_IOWAIT, SYSTEM_CPU_STATE_VALUE_NICE, SYSTEM_CPU_STATE_VALUE_STEAL, SYSTEM_CPU_STATE_VALUE_SYSTEM, SYSTEM_CPU_STATE_VALUE_USER, SYSTEM_FILESYSTEM_STATE_VALUE_FREE, SYSTEM_FILESYSTEM_STATE_VALUE_RESERVED, SYSTEM_FILESYSTEM_STATE_VALUE_USED, SYSTEM_FILESYSTEM_TYPE_VALUE_EXFAT, SYSTEM_FILESYSTEM_TYPE_VALUE_EXT4, SYSTEM_FILESYSTEM_TYPE_VALUE_FAT32, SYSTEM_FILESYSTEM_TYPE_VALUE_HFSPLUS, SYSTEM_FILESYSTEM_TYPE_VALUE_NTFS, SYSTEM_FILESYSTEM_TYPE_VALUE_REFS, SYSTEM_MEMORY_STATE_VALUE_BUFFERS, SYSTEM_MEMORY_STATE_VALUE_CACHED, SYSTEM_MEMORY_STATE_VALUE_FREE, SYSTEM_MEMORY_STATE_VALUE_SHARED, SYSTEM_MEMORY_STATE_VALUE_USED, SYSTEM_NETWORK_STATE_VALUE_CLOSE, SYSTEM_NETWORK_STATE_VALUE_CLOSE_WAIT, SYSTEM_NETWORK_STATE_VALUE_CLOSING, SYSTEM_NETWORK_STATE_VALUE_DELETE, SYSTEM_NETWORK_STATE_VALUE_ESTABLISHED, SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_1, SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_2, SYSTEM_NETWORK_STATE_VALUE_LAST_ACK, SYSTEM_NETWORK_STATE_VALUE_LISTEN, SYSTEM_NETWORK_STATE_VALUE_SYN_RECV, SYSTEM_NETWORK_STATE_VALUE_SYN_SENT, SYSTEM_NETWORK_STATE_VALUE_TIME_WAIT, SYSTEM_PAGING_DIRECTION_VALUE_IN, SYSTEM_PAGING_DIRECTION_VALUE_OUT, SYSTEM_PAGING_STATE_VALUE_FREE, SYSTEM_PAGING_STATE_VALUE_USED, SYSTEM_PAGING_TYPE_VALUE_MAJOR, SYSTEM_PAGING_TYPE_VALUE_MINOR, SYSTEM_PROCESSES_STATUS_VALUE_DEFUNCT, SYSTEM_PROCESSES_STATUS_VALUE_RUNNING, SYSTEM_PROCESSES_STATUS_VALUE_SLEEPING, SYSTEM_PROCESSES_STATUS_VALUE_STOPPED, SYSTEM_PROCESS_STATUS_VALUE_DEFUNCT, SYSTEM_PROCESS_STATUS_VALUE_RUNNING, SYSTEM_PROCESS_STATUS_VALUE_SLEEPING, SYSTEM_PROCESS_STATUS_VALUE_STOPPED, SemanticAttributes, SemanticResourceAttributes, TELEMETRYSDKLANGUAGEVALUES_CPP, TELEMETRYSDKLANGUAGEVALUES_DOTNET, TELEMETRYSDKLANGUAGEVALUES_ERLANG, TELEMETRYSDKLANGUAGEVALUES_GO, TELEMETRYSDKLANGUAGEVALUES_JAVA, TELEMETRYSDKLANGUAGEVALUES_NODEJS, TELEMETRYSDKLANGUAGEVALUES_PHP, TELEMETRYSDKLANGUAGEVALUES_PYTHON, TELEMETRYSDKLANGUAGEVALUES_RUBY, TELEMETRYSDKLANGUAGEVALUES_WEBJS, TELEMETRY_SDK_LANGUAGE_VALUE_CPP, TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET, TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG, TELEMETRY_SDK_LANGUAGE_VALUE_GO, TELEMETRY_SDK_LANGUAGE_VALUE_JAVA, TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS, TELEMETRY_SDK_LANGUAGE_VALUE_PHP, TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON, TELEMETRY_SDK_LANGUAGE_VALUE_RUBY, TELEMETRY_SDK_LANGUAGE_VALUE_RUST, TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT, TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS, TEST_CASE_RESULT_STATUS_VALUE_FAIL, TEST_CASE_RESULT_STATUS_VALUE_PASS, TEST_SUITE_RUN_STATUS_VALUE_ABORTED, TEST_SUITE_RUN_STATUS_VALUE_FAILURE, TEST_SUITE_RUN_STATUS_VALUE_IN_PROGRESS, TEST_SUITE_RUN_STATUS_VALUE_SKIPPED, TEST_SUITE_RUN_STATUS_VALUE_SUCCESS, TEST_SUITE_RUN_STATUS_VALUE_TIMED_OUT, TLS_PROTOCOL_NAME_VALUE_SSL, TLS_PROTOCOL_NAME_VALUE_TLS, TelemetrySdkLanguageValues, V8JS_GC_TYPE_VALUE_INCREMENTAL, V8JS_GC_TYPE_VALUE_MAJOR, V8JS_GC_TYPE_VALUE_MINOR, V8JS_GC_TYPE_VALUE_WEAKCB, V8JS_HEAP_SPACE_NAME_VALUE_CODE_SPACE, V8JS_HEAP_SPACE_NAME_VALUE_LARGE_OBJECT_SPACE, V8JS_HEAP_SPACE_NAME_VALUE_MAP_SPACE, V8JS_HEAP_SPACE_NAME_VALUE_NEW_SPACE, V8JS_HEAP_SPACE_NAME_VALUE_OLD_SPACE, VCS_REPOSITORY_REF_TYPE_VALUE_BRANCH, VCS_REPOSITORY_REF_TYPE_VALUE_TAG };
